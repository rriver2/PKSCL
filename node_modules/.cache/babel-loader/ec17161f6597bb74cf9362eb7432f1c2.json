{"ast":null,"code":"var _jsxFileName = \"/Users/river2/Desktop/PKSCL/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// import log from './img/log.svg';\n// import {Nav} from 'react-bootstrap';\nimport './App.css';\nimport { useState } from 'react';\nimport AccessPage from './AccessPage';\nimport ManagementPage from './ManagementPage';\nimport MainPage from './MainPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Hi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Hi() {\n  _s();\n\n  const [checkedInputs, setCheckedInputs] = useState([]);\n\n  const changeHandler = (checked, id) => {\n    if (checked) {\n      setCheckedInputs([...checkedInputs, id]);\n    } else {\n      // 체크 해제\n      setCheckedInputs(checkedInputs.filter(el => el !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"hi\",\n      type: \"checkbox\",\n      onChange: () => {\n        changeHandler(e.currentTarget.checked, id값);\n      },\n      checked: checkedInputs.includes(id값) ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Hi, \"KbSeizXzxu6LnM98XuNdT3HwFI0=\");\n\n_c2 = Hi;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Hi\");","map":{"version":3,"sources":["/Users/river2/Desktop/PKSCL/frontend/src/App.js"],"names":["useState","AccessPage","ManagementPage","MainPage","App","Hi","checkedInputs","setCheckedInputs","changeHandler","checked","id","filter","el","e","currentTarget","id값","includes"],"mappings":";;;AAAA;AACA;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,SAASC,GAAT,GAAe;AAEb,sBACE;AAAA,2BAOE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAdQA,G;;AAiBT,SAASC,EAAT,GAAa;AAAA;;AACX,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,aAAa,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB;AACrC,QAAID,OAAJ,EAAa;AACXF,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBI,EAAnB,CAAD,CAAhB;AACD,KAFD,MAEO;AACL;AACAH,MAAAA,gBAAgB,CAACD,aAAa,CAACK,MAAd,CAAsBC,EAAD,IAAQA,EAAE,KAAKF,EAApC,CAAD,CAAhB;AACD;AACF,GAPD;;AAWA,sBACC;AAAA,2BACG;AACE,MAAA,EAAE,EAAC,IADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAE,MAAI;AACZF,QAAAA,aAAa,CAACK,CAAC,CAACC,aAAF,CAAgBL,OAAjB,EAA0BM,GAA1B,CAAb;AACD,OALH;AAME,MAAA,OAAO,EAAET,aAAa,CAACU,QAAd,CAAuBD,GAAvB,IAA8B,IAA9B,GAAqC;AANhD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAYD;;GA1BQV,E;;MAAAA,E;AA4BT,eAAeD,GAAf","sourcesContent":["// import log from './img/log.svg';\n// import {Nav} from 'react-bootstrap';\nimport './App.css';\nimport { useState } from 'react';\nimport AccessPage from './AccessPage';\nimport ManagementPage from './ManagementPage';\nimport MainPage from './MainPage';\n\n\nfunction App() {\n\n  return (\n    <div>\n      {/* <AccessPage></AccessPage> */}\n\n      {/* <ManagementPage></ManagementPage> */}\n\n      {/* <MainPage></MainPage> */}\n\n      <Hi></Hi>\n\n    </div>\n  );\n}\n\n\nfunction Hi(){\n  const [checkedInputs, setCheckedInputs] = useState([]);\n\n  const changeHandler = (checked, id) => {\n    if (checked) {\n      setCheckedInputs([...checkedInputs, id]);\n    } else {\n      // 체크 해제\n      setCheckedInputs(checkedInputs.filter((el) => el !== id));\n    }\n  };\n\n\n  \n  return (\n  \t<div>\n      <input \n        id=\"hi\"\n        type=\"checkbox\" \n        onChange={()=>{\n          changeHandler(e.currentTarget.checked, id값)\n        }}\n        checked={checkedInputs.includes(id값) ? true : false}\n      />\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}