{"ast":null,"code":"var _jsxFileName = \"/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport './css/ManagementPage.css';\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport CertFile from './CertFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ManagementPage(props) {\n  _s();\n\n  let 임시리스트 = {\n    waiting: [{\n      \"major\": \"학과1\",\n      \"email\": \"aaaaa@naver.com\",\n      \"stdID\": \"111111111\",\n      \"name\": \"이름1\",\n      \"phoneNumber\": \"01011111111\",\n      \"studentImgPath\": \"/img/time.png\"\n    }, {\n      \"major\": \"학과2\",\n      \"email\": \"bbbbb@naver.com\",\n      \"stdID\": \"22222222\",\n      \"name\": \"이름2\",\n      \"phoneNumber\": \"01022222222\",\n      \"studentImgPath\": \"/img/time.png\"\n    }, {\n      \"major\": \"학과3\",\n      \"email\": \"ccccc@naver.com\",\n      \"stdID\": \"333333\",\n      \"name\": \"이름3\",\n      \"phoneNumber\": \"010333333\",\n      \"studentImgPath\": \"/img/time.png\"\n    }],\n    refusal: [],\n    approval: [{\n      \"major\": \"학과4\",\n      \"email\": \"dddd@naver.com\",\n      \"stdID\": \"444444\",\n      \"name\": \"이름4\",\n      \"phoneNumber\": \"010444444\",\n      \"studentImgPath\": \"/img/time.png\"\n    }, {\n      \"major\": \"학과5\",\n      \"email\": \"eeee@naver.com\",\n      \"stdID\": \"555555\",\n      \"name\": \"이름5\",\n      \"phoneNumber\": \"010555555\",\n      \"studentImgPath\": \"/img/time.png\"\n    }, {\n      \"major\": \"학과6\",\n      \"email\": \"ffff@naver.com\",\n      \"stdID\": \"666666\",\n      \"name\": \"이름6\",\n      \"phoneNumber\": \"010666666\",\n      \"studentImgPath\": \"/img/time.png\"\n    }]\n  };\n  const history = useHistory();\n  const [waiting, setWaiting] = useState([]);\n  const [refusal, setRefusal] = useState([]);\n  const [approval, setApproval] = useState([]);\n  const [leftTable, setLeftTable] = useState([...waiting]);\n  const [rightTable, setRightTable] = useState([...approval]);\n  const [leftCheckedList, setLeftCheckedList] = useState([]);\n  const [rightCheckedList, setRightCheckedList] = useState([]);\n  const [searchStudent, setSearchStudent] = useState(\"\");\n  const [searchButton, setSearchButton] = useState(\"search\");\n  const [certFile, setCertFile] = useState(false);\n  const [certFileStudnet, setCertFileStudnet] = useState();\n\n  const changeHandler = (checked, studentInfo, setCheckedList, checkedList) => {\n    if (checked) {\n      setCheckedList([...checkedList, studentInfo]);\n    } else {\n      setCheckedList(checkedList.filter(e => e !== studentInfo));\n    }\n\n    console.log(checked);\n  };\n\n  function patchStudent(studentStatus) {\n    let payload;\n\n    if (studentStatus === \"approval\" || studentStatus === \"refusal\") {\n      payload = {\n        \"status\": studentStatus,\n        \"email\": leftCheckedList\n      };\n    } else if (studentStatus === \"delegating\" || studentStatus === \"waiting\") {\n      payload = {\n        \"status\": studentStatus,\n        \"email\": rightCheckedList\n      };\n    } else {\n      alert(\"error!\");\n    }\n\n    console.log(\"patch\");\n    console.log(leftCheckedList);\n    console.log(rightCheckedList);\n\n    if (props.loginPosition === \"president\") {\n      axios.patch('/student-list', payload).then(payload => {\n        getList();\n      }).catch(error => {\n        getList();\n        alert(\"학생 전송에 실패했습니다 :)\");\n      });\n    } else if (props.loginPosition === \"admin\") {\n      axios.patch('/president-list', payload).then(payload => {\n        getList();\n      }).catch(error => {\n        getList();\n        alert(\"학과 전송에 실패했습니다 :)\");\n      });\n    }\n  }\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  function getList() {\n    if (props.loginPosition === \"president\") {\n      axios.get('/student-list').then(payload => {\n        console.log(payload);\n        setWaiting([...payload.data[\"waiting\"]]);\n        setRefusal([...payload.data[\"refusal\"]]);\n        setApproval([...payload.data[\"approval\"]]);\n        setLeftTable([...payload.data[\"waiting\"]]);\n        setRightTable([...payload.data[\"approval\"]]);\n      }).catch(error => {\n        alert(\"학생리스트를 불러올 수 없습니다.\");\n        setWaiting([...임시리스트[\"waiting\"]]);\n        setRefusal([...임시리스트[\"refusal\"]]);\n        setApproval([...임시리스트[\"approval\"]]);\n        setLeftTable([...임시리스트[\"waiting\"]]);\n        setRightTable([...임시리스트[\"approval\"]]);\n      });\n    } else if (props.loginPosition === \"admin\") {\n      axios.get('/president-list').then(payload => {\n        console.log(payload);\n        setWaiting([...payload.data[\"waiting\"]]);\n        setRefusal([...payload.data[\"refusal\"]]);\n        setApproval([...payload.data[\"approval\"]]);\n        setLeftTable([...payload.data[\"waiting\"]]);\n        setRightTable([...payload.data[\"approval\"]]);\n      }).catch(error => {\n        alert(\"학과리스트를 불러올 수 없습니다.\");\n        setWaiting([...임시리스트[\"waiting\"]]);\n        setRefusal([...임시리스트[\"refusal\"]]);\n        setApproval([...임시리스트[\"approval\"]]);\n        setLeftTable([...임시리스트[\"waiting\"]]);\n        setRightTable([...임시리스트[\"approval\"]]);\n      });\n    }\n  }\n\n  function pressSearchStudent() {\n    if (searchButton === \"x\") {\n      setSearchStudent(\"\");\n      setSearchButton(\"search\");\n      setLeftTable([...waiting]);\n      setRightTable([...approval]);\n    } else {\n      if (searchStudent === \"\") {\n        alert(\"검색명을 입력해주세요 :)\");\n      } else {\n        setSearchButton(\"x\");\n        let left = waiting.filter(item => item.name.includes(searchStudent) || item.stdID.includes(searchStudent));\n        let right = approval.filter(item => item.name.includes(searchStudent) || item.stdID.includes(searchStudent));\n        setLeftTable(left);\n        setRightTable(right);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ManagementPageContainer\",\n    children: [certFile === true ? /*#__PURE__*/_jsxDEV(CertFile, {\n      certFileStudnet: certFileStudnet,\n      setCertFile: setCertFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        expand: \"lg\",\n        style: {\n          padding: \"30px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          style: {\n            justifyContent: \"center\",\n            backgroundColor: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: \"0\"\n            },\n            children: \"\\uD559\\uC0DD\\uC2B9\\uC778 \\uD604\\uD669\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchBar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setSearchStudent(e.target.value);\n                setSearchButton(\"search\");\n\n                if (e.target.value === \"\") {\n                  setSearchButton(\"search\");\n                  setLeftTable([...waiting]);\n                  setRightTable([...approval]);\n                }\n\n                if (e.keyCode === 13) {\n                  pressSearchStudent();\n                }\n              },\n              name: \"q\",\n              value: searchStudent,\n              type: \"search\",\n              placeholder: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                pressSearchStudent();\n              },\n              className: \"searchButton\",\n              type: \"button\",\n              children: searchButton === \"search\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 43\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tables\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submitButton\",\n              onClick: () => {\n                if (leftCheckedList.length === 0) {\n                  alert(\"승인할 학생을 1명 이상 선택하세요 :)\");\n                } else {\n                  patchStudent(\"approval\");\n                }\n\n                setLeftCheckedList([]);\n              },\n              children: \"\\uC2B9\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submitButton\",\n              onClick: () => {\n                console.log(\"거절\");\n                setLeftCheckedList([]);\n\n                if (leftCheckedList.length > 0) {\n                  patchStudent(\"refusal\");\n                } else {\n                  alert(\"거절할 학생을 1명 이상 선택하세요 :)\");\n                }\n              },\n              children: \"\\uAC70\\uC808\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"3\",\n                  style: {\n                    borderTopRightRadius: \"20px\",\n                    borderTopLeftRadius: \"20px\"\n                  },\n                  children: \"\\uC2B9\\uC778\\uB300\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableRadius\",\n              style: {\n                borderBottomRightRadius: \"20px\",\n                borderBottomLeftRadius: \"20px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"tableList\",\n                style: {\n                  borderBottomRightRadius: \"20px\",\n                  borderBottomLeftRadius: \"20px\"\n                },\n                children: leftTable.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    children: \"\\uC2B9\\uC778\\uB300\\uAE30 \\uD559\\uC0DD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 47\n                }, this) : leftTable.map((student, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: props.loginPosition === \"president\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: student.stdID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: student.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"certFileButton\",\n                          type: \"button\",\n                          onClick: () => {\n                            setCertFile(true);\n                          },\n                          children: \"\\uD559\\uC0DD\\uC99D\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: student,\n                          type: \"checkbox\",\n                          onChange: e => {\n                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList);\n                          },\n                          checked: leftCheckedList.includes(student[\"email\"]) ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 62\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.major\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.stdID\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.phoneNumber\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"certFileButton\",\n                            type: \"button\",\n                            onClick: () => {\n                              setCertFile(true);\n                              setCertFileStudnet(student);\n                            },\n                            children: \"\\uD559\\uC0DD\\uC99D\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 288,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 70\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          width: \"100px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: student,\n                          type: \"checkbox\",\n                          onChange: e => {\n                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList);\n                          },\n                          checked: leftCheckedList.includes(student[\"email\"]) ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 95\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [props.loginPosition === \"president\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submitButton\",\n              style: {\n                width: \"110px\"\n              },\n              onClick: () => {\n                if (rightCheckedList.length === 1) {\n                  setRightCheckedList([]);\n                  patchStudent(\"delegating\");\n                } else {\n                  alert(\"학생회장 위임은 한명만 가능합니다.\");\n                }\n              },\n              children: \"\\uD68C\\uC7A5\\uAD8C\\uD55C\\uC704\\uC784\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 36\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submitButton\",\n              onClick: () => {\n                setRightCheckedList([]);\n\n                if (rightCheckedList.length > 0) {\n                  patchStudent(\"waiting\");\n                }\n              },\n              children: \"\\uB300\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"3\",\n                  style: {\n                    borderTopRightRadius: \"20px\",\n                    borderTopLeftRadius: \"20px\"\n                  },\n                  children: \"\\uC2B9\\uC778\\uC644\\uB8CC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableRadius\",\n              style: {\n                borderBottomRightRadius: \"20px\",\n                borderBottomLeftRadius: \"20px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"tableList\",\n                style: {\n                  borderBottomRightRadius: \"20px\",\n                  borderBottomLeftRadius: \"20px\"\n                },\n                children: rightTable.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    children: \"\\uC2B9\\uC778\\uB300\\uAE30 \\uD559\\uC0DD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 47\n                }, this) : rightTable.map((student, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: props.loginPosition === \"president\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: student.stdID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: student.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"certFileButton\",\n                          type: \"button\",\n                          onClick: () => {\n                            setCertFile(true);\n                          },\n                          children: \"\\uD559\\uC0DD\\uC99D\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: student,\n                          type: \"checkbox\",\n                          onChange: e => {\n                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList);\n                          },\n                          checked: rightCheckedList.includes(student[\"email\"]) ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 358,\n                          columnNumber: 62\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.major\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.stdID\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 370,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.phoneNumber\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 372,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: student.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"certFileButton\",\n                            type: \"button\",\n                            onClick: () => {\n                              setCertFile(true);\n                            },\n                            children: \"\\uD559\\uC0DD\\uC99D\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 374,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 70\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          width: \"100px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: student,\n                          type: \"checkbox\",\n                          onChange: e => {\n                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList);\n                          },\n                          checked: rightCheckedList.includes(student[\"email\"]) ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 95\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"managementPageBar\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-chevron-left\",\n        onClick: () => {\n          if (props.loginPosition === \"admin\") {\n            history.push('/main');\n          } else if (props.loginPosition === \"president\") {\n            history.push('/edit-main');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManagementPage, \"u/DQpj2ny/Phku+p04jFrnaMA4Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManagementPage;\nexport default ManagementPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagementPage\");","map":{"version":3,"sources":["/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js"],"names":["useEffect","useState","Navbar","Container","axios","Link","Route","Switch","useHistory","CertFile","ManagementPage","props","임시리스트","waiting","refusal","approval","history","setWaiting","setRefusal","setApproval","leftTable","setLeftTable","rightTable","setRightTable","leftCheckedList","setLeftCheckedList","rightCheckedList","setRightCheckedList","searchStudent","setSearchStudent","searchButton","setSearchButton","certFile","setCertFile","certFileStudnet","setCertFileStudnet","changeHandler","checked","studentInfo","setCheckedList","checkedList","filter","e","console","log","patchStudent","studentStatus","payload","alert","loginPosition","patch","then","getList","catch","error","get","data","pressSearchStudent","left","item","name","includes","stdID","right","padding","justifyContent","backgroundColor","margin","target","value","keyCode","length","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","map","student","i","major","phoneNumber","email","width","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport './css/ManagementPage.css';\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport CertFile from './CertFile';\n\nfunction ManagementPage(props) {\n\n    let 임시리스트 = {\n        waiting:\n        [{ \"major\" : \"학과1\",\n                     \"email\" : \"aaaaa@naver.com\",\n                     \"stdID\" : \"111111111\",\n                     \"name\" : \"이름1\",\n                     \"phoneNumber\" : \"01011111111\",\n                     \"studentImgPath\" : \"/img/time.png\",\n                    },\n                    { \n                      \"major\" : \"학과2\",\n                      \"email\" : \"bbbbb@naver.com\",\n                      \"stdID\" : \"22222222\",\n                      \"name\" : \"이름2\",\n                      \"phoneNumber\" : \"01022222222\",\n                      \"studentImgPath\" : \"/img/time.png\",\n                     },\n                     {\n                       \"major\" : \"학과3\",\n                       \"email\" : \"ccccc@naver.com\",\n                       \"stdID\" : \"333333\",\n                       \"name\" : \"이름3\",\n                       \"phoneNumber\" : \"010333333\",\n                       \"studentImgPath\" : \"/img/time.png\",\n                      }],\n        refusal : [],\n        approval : [{\n                       \"major\" : \"학과4\",\n                       \"email\" : \"dddd@naver.com\",\n                       \"stdID\" : \"444444\",\n                       \"name\" : \"이름4\",\n                       \"phoneNumber\" : \"010444444\",\n                       \"studentImgPath\" : \"/img/time.png\",\n                      },{\n                       \"major\" : \"학과5\",\n                       \"email\" : \"eeee@naver.com\",\n                       \"stdID\" : \"555555\",\n                       \"name\" : \"이름5\",\n                       \"phoneNumber\" : \"010555555\",\n                       \"studentImgPath\" : \"/img/time.png\",\n                      },{\n                       \"major\" : \"학과6\",\n                       \"email\" : \"ffff@naver.com\",\n                       \"stdID\" : \"666666\",\n                       \"name\" : \"이름6\",\n                       \"phoneNumber\" : \"010666666\",\n                       \"studentImgPath\" : \"/img/time.png\",\n                      }],\n    }\n    const history = useHistory();\n    const [waiting, setWaiting] = useState([]);\n    const [refusal, setRefusal] = useState([]);\n    const [approval, setApproval] = useState([]);\n\n    const [leftTable, setLeftTable] = useState([...waiting]);\n    const [rightTable, setRightTable] = useState([...approval]);\n\n    const [leftCheckedList, setLeftCheckedList] = useState([]);\n    const [rightCheckedList, setRightCheckedList] = useState([]);\n\n    const [searchStudent, setSearchStudent] = useState(\"\");\n    const [searchButton, setSearchButton] = useState(\"search\");\n    const [certFile, setCertFile] = useState(false);\n    const [certFileStudnet, setCertFileStudnet] = useState();\n\n    const changeHandler = (checked, studentInfo, setCheckedList, checkedList) => {\n        if (checked) {\n            setCheckedList([...checkedList, studentInfo]);\n        } else {\n            setCheckedList(checkedList.filter((e) => e !== studentInfo));\n        }\n        console.log(checked)\n    };\n\n    function patchStudent(studentStatus) {\n        let payload;\n        if (studentStatus === \"approval\" || studentStatus === \"refusal\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": leftCheckedList\n            };\n        } else if (studentStatus === \"delegating\" || studentStatus === \"waiting\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": rightCheckedList\n            };\n        } else {\n            alert(\"error!\");\n        }\n        console.log(\"patch\")\n        console.log(leftCheckedList)\n        console.log(rightCheckedList)\n        if (props.loginPosition === \"president\") {\n            axios.patch('/student-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학생 전송에 실패했습니다 :)\")\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.patch('/president-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학과 전송에 실패했습니다 :)\")\n                });\n        }\n    }\n\n\n    useEffect(() => {\n        getList();\n    },[]);\n\n    function getList() {\n        if (props.loginPosition === \"president\") {\n            axios.get('/student-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학생리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.get('/president-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학과리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        }\n    }\n\n    function pressSearchStudent() {\n        if (searchButton === \"x\") {\n                                    setSearchStudent(\"\");\n                                    setSearchButton(\"search\");\n                                    setLeftTable([...waiting]);\n                                    setRightTable([...approval]);\n                                } else {\n                                    if (searchStudent === \"\") {\n                                        alert(\"검색명을 입력해주세요 :)\");\n                                    } else {\n                                        setSearchButton(\"x\");\n\n                                        let left = waiting.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n                                        let right = approval.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n\n                                        setLeftTable(left);\n                                        setRightTable(right);\n                                    }\n\n                                }\n    }\n\n    return (\n        <div className=\"ManagementPageContainer\">\n            {\n                certFile === true\n                ?(<CertFile  certFileStudnet={certFileStudnet} setCertFile={setCertFile}></CertFile>)\n                : null\n            }\n            <div className=\"pageContainer\">\n                <Navbar expand=\"lg\" style={{ padding: \"30px 0\" }}>\n                    <Container fluid style={{ justifyContent: \"center\", backgroundColor: \"none\" }}>\n                        <h2 style={{ margin: \"0\" }}>학생승인 현황</h2>\n                        <div className=\"searchBar\" >\n                            <input onChange={(e) => {\n                                setSearchStudent(e.target.value);\n                                setSearchButton(\"search\");\n                                if (e.target.value === \"\") {\n                                    setSearchButton(\"search\");\n                                    setLeftTable([...waiting]);\n                                    setRightTable([...approval]);\n                                }\n                                if(e.keyCode === 13){\n                                    pressSearchStudent()\n                                }\n                            }}\n                                name=\"q\" value={searchStudent} type=\"search\" placeholder=\"Search\" ></input>\n\n                            <button onClick={() => {pressSearchStudent()\n                            }}\n                                className='searchButton' type='button'>\n                                {\n                                    searchButton === \"search\"\n                                        ? <i className=\"fas fa-search\"></i>\n                                        : <i className=\"fas fa-times\"></i>\n                                }\n                            </button>\n                        </div>\n                    </Container>\n                </Navbar>\n                <div className='tables'>\n                    <div className= \"tableSet\" >\n                        <div className=\"buttons\">\n                            <button className='submitButton' onClick={() => {\n                                if (leftCheckedList.length === 0) {\n                                    alert(\"승인할 학생을 1명 이상 선택하세요 :)\")\n                                } else {\n                                    patchStudent(\"approval\");\n                                }\n                                setLeftCheckedList([]);\n                            }}>승인</button>\n                            <button className='submitButton' onClick={() => {\n                                console.log(\"거절\")\n                                setLeftCheckedList([]);\n                                if (leftCheckedList.length > 0) {\n                                    patchStudent(\"refusal\");\n                                } else {\n                                    alert(\"거절할 학생을 1명 이상 선택하세요 :)\")\n                                }\n                            }}>거절</button>\n                        </div>\n                        <table >\n                            <thead>\n                                <tr >\n                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인대기</th>\n                                </tr>\n                            </thead>\n                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                    {\n                                        leftTable.length === 0\n                                            ? <tr>\n                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                            </tr>\n                                            : leftTable.map((student, i) => {\n                                                return (\n                                                    <tr key={i}>\n                                                        {\n                                                            props.loginPosition === \"president\"\n                                                            ?(<><td>{student.stdID}</td>\n                                                                <td>{student.name}</td>\n                                                                <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                            setCertFile(true);\n                                                        }}>학생증</button></td>\n                                                        <td ><input\n                                                            id={student}\n                                                            type=\"checkbox\"\n                                                            onChange={(e) => {\n                                                                changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                            }}\n                                                            checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                        /></td>\n                                                        </>)\n                                                            :(<><tr>\n                                                                <td>{student.major}</td>\n                                                                <td>{student.name}</td>\n                                                                <td>{student.stdID}</td>\n                                                                </tr><tr>\n                                                                <td>{student.phoneNumber}</td>\n                                                                <td>{student.email}</td>\n                                                                <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                    setCertFile(true);\n                                                                    setCertFileStudnet(student);\n                                                                }}>학생증</button></td>\n                                                                </tr>\n                                                                <td style={{ width: \"100px\"}}><input\n                                                                id={student}\n                                                                type=\"checkbox\"\n                                                                onChange={(e) => {\n                                                                    changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                                }}\n                                                                checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                /></td>\n                                                                </>)\n                                                        }\n                                                        \n                                                    </tr>\n                                                )\n                                            })\n                                    }\n                                </tbody>\n                            </div>\n                        </table>\n                    </div>\n\n                    <div className='tableSet'>\n                        <div className=\"buttons\">\n                            {\n                                props.loginPosition === \"president\"\n                                ? (<button className='submitButton' style={{ width: \"110px\" }} onClick={() => {\n                                if (rightCheckedList.length === 1) {\n                                    setRightCheckedList([]);\n                                    patchStudent(\"delegating\");\n                                } else {\n                                    alert(\"학생회장 위임은 한명만 가능합니다.\");\n                                }\n                            }}>회장권한위임</button>)\n                                : null\n                            }\n                            <button className='submitButton' onClick={() => {\n                                setRightCheckedList([]);\n                                if (rightCheckedList.length > 0) {\n                                    patchStudent(\"waiting\");\n                                }\n                            }}\n                            >대기</button>\n                        </div>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인완료</th>\n                                </tr>\n                            </thead>\n                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                     {\n                                        rightTable.length === 0\n                                            ? <tr>\n                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                            </tr>\n                                            : rightTable.map((student, i) => {\n                                                return (\n                                                    <tr key={i}>\n                                                        {\n                                                            props.loginPosition === \"president\"\n                                                            ?(<><td>{student.stdID}</td>\n                                                                <td>{student.name}</td>\n                                                                <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                            setCertFile(true);\n                                                        }}>학생증</button></td>\n                                                        <td ><input\n                                                            id={student}\n                                                            type=\"checkbox\"\n                                                            onChange={(e) => {\n                                                                changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                            }}\n                                                            checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                        /></td>\n                                                        </>)\n                                                            :(<><tr>\n                                                                <td>{student.major}</td>\n                                                                <td>{student.name}</td>\n                                                                <td>{student.stdID}</td>\n                                                                </tr><tr>\n                                                                <td>{student.phoneNumber}</td>\n                                                                <td>{student.email}</td>\n                                                                <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                    setCertFile(true);\n                                                                }}>학생증</button></td>\n                                                                </tr>\n                                                                <td style={{ width: \"100px\"}}><input\n                                                                id={student}\n                                                                type=\"checkbox\"\n                                                                onChange={(e) => {\n                                                                    changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                                }}\n                                                                checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                /></td>\n                                                                </>)\n                                                        }\n                                                        \n                                                    </tr>\n                                                )\n                                            })\n                                    }\n                                </tbody>\n                            </div>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <div className=\"managementPageBar\">\n                <i className=\"fas fa-chevron-left\" onClick={() => { \n                    if(props.loginPosition === \"admin\"){\n                        history.push('/main') \n                    }else if(props.loginPosition === \"president\"){\n                        history.push('/edit-main') \n                    }\n                }}></i>\n            </div>\n\n        </div>\n\n\n    )\n}\n\nexport default ManagementPage;"]},"metadata":{},"sourceType":"module"}