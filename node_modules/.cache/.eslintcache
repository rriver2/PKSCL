[{"/Users/river2/Desktop/PKSCL/frontend/src/index.js":"1","/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js":"2","/Users/river2/Desktop/PKSCL/frontend/src/App.js":"3","/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js":"4","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js":"5","/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js":"6","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js":"7"},{"size":637,"mtime":1642434411870,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1642060834506,"results":"10","hashOfConfig":"9"},{"size":713,"mtime":1642728207930,"results":"11","hashOfConfig":"9"},{"size":14629,"mtime":1642727939180,"results":"12","hashOfConfig":"9"},{"size":546,"mtime":1642339287963,"results":"13","hashOfConfig":"9"},{"size":12236,"mtime":1642643578398,"results":"14","hashOfConfig":"9"},{"size":11437,"mtime":1642430774584,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"47akap",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/river2/Desktop/PKSCL/frontend/src/index.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js",[],["34","35"],"/Users/river2/Desktop/PKSCL/frontend/src/App.js",["36","37","38"],"// import log from './img/log.svg';\n// import {Nav} from 'react-bootstrap';\nimport './App.css';\nimport { useState } from 'react';\nimport AccessPage from './AccessPage';\nimport MainPage from './MainPage';\nimport ManagementPage from './ManagementPage';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\n//스테이트\n\nfunction App() {\n\n  return (\n    <div>\n      <Switch>\n        <Route path='/manage/:major'>\n          <ManagementPage></ManagementPage>\n        </Route>\n\n        <Route path='/main/:major'>\n          <MainPage></MainPage>\n        </Route>\n\n        <Route path='/' >\n          <AccessPage> </AccessPage>\n        </Route>\n\n      </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;","/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js",["39","40","41"],"import { useState, useEffect } from 'react';\nimport log from './img/log.svg';\nimport { Nav } from 'react-bootstrap';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './AccessPage.css';\n\n\nfunction AccessPage() {\n  // let [signType, setSignType] =useState(\"signIn\");\n  const [position, setPosition] = useState(\"student\");\n\n  const [stdID, setStdID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [checkPassword, setCheckPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [certFile, setCertFile] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [checkState, setCheckState] = useState(false);\n  const [atIsContain, setAtIsContains] = useState(false);\n  // let [majorList, setMajorList] = useState([\"학과정보를 불러올 수 없습니다.\"]);\n  const [majorList, setMajorList] = useState([\"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학부\", \"법학과\", \"행정학과\", \"국제지역학부\", \"중국학과\", \"신문방송학과\", \"정치외교학과\", \"유아교육과\", \"시각디자인학과\", \"공업디자인학과\", \"패션디자인학과\", \"경영학부\", \"국제통상학부\", \"응용수학과\", \"통계학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"해양스포츠학과\", \"간호학과\", \"과학시스템시뮬레이션학과\", \"건축공학과\", \"건축학과\", \"소방공학과\", \"시스템경영공학부\", \"IT융합응용공학과\", \"안전공학과\", \"융합디스플레이공학과\", \"의공학과\", \"전기공학과\", \"전자공학과\", \"정보통신공학과\", \"제어계측공학과\", \"조선해양시스템공학과\", \"컴퓨터공학과\", \"토목공학과\", \"고분자공학과\", \"공업화학과\", \"금속공학과\", \"기계공학과\", \"기계설계공학과\", \"기계시스템공학과\", \"냉동공조공학과\", \"신소재시스템공학과\", \"인쇄정보공학과\", \"재료공학과\", \"화학공학과\", \"지속가능공학부\", \"식품공학과\", \"해양바이오신소재학과\", \"해양생산시스템관리학부\", \"해양수산경영학과\", \"수해양산업교육과\", \"자원생물학과\", \"식품영양학과\", \"생물공학과\", \"수산생명의학과\", \"환경공학과\", \"해양공학과\", \"해양학과\", \"지구환경과학과\", \"환경대기과학과\", \"에너지자원공학과\", \"공간정보시스템공학과\", \"생태공학과\", \"데이터정보과학부(빅데이터융합전공)\", \"데이터정보과학부(통계·데이터사이언스전공)\", \"미디어커뮤니케이션학부(언론정보전공)\", \"미디어커뮤니케이션학부(휴먼ICT융합전공)\", \"스마트헬스케어학부(의공학전공)\", \"스마트헬스케어학부(해양스포츠전공)\", \"스마트헬스케어학부(휴먼바이오융합전공)\", \"전자정보통신공학부(전자공학전공)\", \"전자정보통신공학부(정보통신공학전공)\", \"조형학부(건축학전공)\", \"조형학부(공업디자인전공)\", \"조형학부(시각디자인전공)\", \"컴퓨터공학부(소프트웨어·인공지능전공)\", \"컴퓨터공학부(컴퓨터공학전공)\", \"평생교육·상담학과\", \"기계조선융합공학과\", \"전기전자소프트웨어공학과\", \"공공안전경찰학과\"]);\n\n\n  const history = useHistory();\n\n\n  useEffect(() => {\n    if (phoneNumber.length === 10) {\n      setPhoneNumber(phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'));\n    }\n    if (phoneNumber.length === 13) {\n      setPhoneNumber(phoneNumber.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\n    }\n  }, [phoneNumber]);\n\n  useEffect(() => {\n    console.log(email.lastIndexOf(\"@\"));\n    if (email.indexOf(\"@\") !== -1) setAtIsContains(true);\n    else setAtIsContains(false);\n\n\n    if (email[email.length - 1] === \"@\" && atIsContain === false) {\n      setEmail(email + \"pukyong.ac.kr\")\n    }\n  }, [email]);\n\n  useEffect(() => {\n    // https://pkscl.kro.kr/major-list\n    //'/major-list'\n    axios.get('https://pkscl.kro.kr/major-list')\n      .then((payload) => {\n        setMajorList([...payload.data.majorList]);\n      })\n      .catch((error) => {\n        alert(\"학과리스트를 불러올 수 없습니다.\");\n      })\n\n  }, []);\n\n\n  function reset() {\n    setStdID(\"\");\n    setName(\"\");\n    setMajor(\"\");\n    setPassword(\"\");\n    setCheckPassword(\"\");\n    setEmail(\"\");\n    setCertFile(\"\");\n  };\n\n\n  function login() {\n    if (email === \"\" || password === \"\") {\n      return (\n        alert(\"아이디와 비밀번호를 모두 입력하세요\")\n      )\n    }\n    else {\n      let payload = { \"email\": email, \"password\": password };\n      // debugger;\n      axios.post('/login/' + position, payload)\n        .then((payload) => {\n          console.log(payload);\n          if (payload.data.position === \"student\") {\n            history.push('/main/' + payload.data.major);\n          }\n          else if (payload.data.position === \"president\") {\n            history.push('/manage/' + payload.data.major);\n          }\n\n        })\n        .catch((result) => {\n          console.log(result.status);\n          alert(\"로그인에 실패했습니다.\")\n\n\n        });\n\n    }\n  };\n\n  function findPassword() {\n    if (email === \"\" || stdID === \"\" || name === \"\") {\n      return (\n        alert(\"빈칸을 모두 입력해주세요\")\n      )\n    }\n    else {\n      let payload = { \"email\": email, \"stdID\": stdID, \"name\": name };\n      axios.post('/newpwd/' + position, payload)\n        .then((result) => {\n          console.log(payload);\n          if (window.confirm('입력하신 이메일로 임시 비밀번호를 발급하였습니다.')) {\n            history.push('/');\n          }\n          else {\n            history.push('/newpwd');\n          }\n\n        })\n        .catch((error) => {\n          console.log(payload);\n          alert(\"입력하신 정보를 찾을 수 없습니다.\");\n\n        });\n\n    }\n  };\n\n  function checkHandler() {\n    setCheckState(!checkState); // 왜 함수가 다 실행되고 값이 바뀌는건지??\n    if (checkState === false) {\n      setPosition(\"president\");\n      console.log(position); // 기능은 정상적으로 수행되는데 log시 이전값 출력함;;;\n    } else {\n      setPosition(\"student\");\n      console.log(position); // 기능은 정상적으로 수행되는데 log시 이전값 출력함;;;\n    }\n  };\n\n  function certEmail() {\n    let payload = { \"email\": email };\n    axios.post('/email/' + position, payload)\n      .then((payload) => {\n        alert(\"입력하신 이메일로 메일을 발송했습니다.\");\n      })\n      .catch((payload) => {\n        console.log(payload);\n        alert(payload.data.errorMessage);\n      });\n  }\n\n\n\n\n\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"left-panel\">\n        <div className=\"content\">\n          <button className=\"btn admin\" id=\"sign-in-btn\">\n            관리자로그인\n          </button>\n          <h3>PKNU 온라인 장부</h3>\n          <p>\n            우리 학과의 장부를 분기 별로 확인할 수 있습니다.\n          </p>\n        </div>\n        <img src={log} className=\"image\" alt=\"\" />\n      </div>\n      <Switch>\n        <Route exact path=\"/signUp\">\n          <div className=\"right-panel\">\n            <form className=\"userForm\" action={\"/signup/\" + position} method=\"post\" encType=\"multipart/form-data\" >\n              <div id=\"nav\" >\n                <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setPosition(\"student\"); reset(); }}>학생</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-2\" onClick={() => { setPosition(\"president\"); reset(); }}>학생회장</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </div>\n\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\"></i>\n                <input onChange={(e) => { setStdID(e.target.value.replace(/[^0-9]/g, '')) }} name=\"stdID\" value={stdID} maxLength=\"9\" placeholder=\"학번\" type=\"text\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-key\"></i>\n                <input onChange={(e) => { setPassword(e.target.value) }} name=\"password\" value={password} type=\"password\" placeholder=\"비밀번호\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-key\"></i>\n                <input onChange={(e) => { setCheckPassword(e.target.value) }} value={checkPassword} type=\"password\" placeholder=\"비밀번호 재확인\" />\n              </div>\n              <div className=\"input-field\" style={{ fontSize: \"80%\" }}>\n                <i className=\"fas fa-book-open\"></i>\n                <select name=\"major\" style={{ border: \"0px\", background: \"#f0f0f0\" }} >\n                  <option value={-1} selected>학과를 선택하세요</option>\n                  {\n                    majorList.map((major, i) => {\n                      return (<option value={i + 1} key={i} >{major}</option>)\n                    })\n                  }\n\n\n\n\n                </select>\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-user\"></i>\n                <input onChange={(e) => { setName(e.target.value) }} name=\"name\" value={name} type=\"text\" placeholder=\"이름\" />\n              </div>\n              {\n                position === \"president\"\n                  ?\n                  (<div className=\"input-field\">\n                    <i className=\"fas fa-phone-alt\"></i>\n                    <input onChange={(e) => { setPhoneNumber(e.target.value) }} maxLength=\"13\" name=\"phoneNumber\" value={phoneNumber} type=\"text\" placeholder=\"전화번호\" />\n                  </div>\n                  )\n                  :\n                  null\n\n              }\n\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input onChange={(e) => { setEmail(e.target.value) }} name=\"email\" value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n                <label onClick={certEmail}>인증</label>\n              </div>\n              <div className=\"input-field filebox\">\n                <i className=\"fas fa-user-graduate\"></i>\n                <input className='uploadName' placeholder='학생증을 첨부해주세요' value={certFile} readOnly />\n                <label htmlFor=\"certFile\">찾기</label>\n                <input type=\"file\" id='certFile' name=\"certFile\" accept='image/*' onChange={(e) => { setCertFile(e.target.value.split('/').pop().split('\\\\').pop()) }} />\n              </div>\n\n\n\n              <div className=\"submitbox\" >\n                <button type=\"submit\" className=\"SignInBtn\">회원가입</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button onClick={() => { reset(); history.push('/newpwd') }}>비밀번호 찾기</button><button onClick={() => { reset(); history.push('/'); }}>로그인</button>\n            </div>\n          </div>\n\n        </Route >\n\n        <Route exact path=\"/\">\n          <div className=\"right-panel\">\n            <form className=\"userForm\">\n              <div id=\"nav\" >\n                <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setPosition(\"student\"); reset(); }}>학생</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-2\" onClick={() => { setPosition(\"president\"); reset(); }}>학생회장</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input onChange={(e) => { setEmail(e.target.value) }} value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-key\"></i>\n                <input onChange={(e) => { setPassword(e.target.value) }} value={password} type=\"password\" placeholder=\"비밀번호\" />\n              </div>\n\n              <div className=\"submitbox\" >\n                <button type=\"button\" onClick={() => { login() }} value=\"Login\" className=\"SignInBtn\">로그인</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button onClick={() => { reset(); history.push('/newpwd') }}>비밀번호 찾기</button><button onClick={() => { reset(); history.push('/signUp'); }}>회원가입</button>\n            </div>\n          </div>\n\n        </Route>\n\n\n        <Route exact path=\"/newpwd\">\n          <div className=\"right-panel\">\n            <form className=\"userForm\">\n\n\n              <h2 style={{ padding: \"20px 0 0 0\" }}>비밀번호 찾기</h2>\n              <div className='checkbox'><input type=\"checkbox\" checked={checkState} onClick={() => { checkHandler() }} /><p>학생회장</p></div>\n\n              <div >비밀번호를 찾고자 하는 아이디의 정보를 입력해 주세요.</div>\n\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input onChange={(e) => { setEmail(e.target.value) }} value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\"></i>\n                <input onChange={(e) => { setStdID(e.target.value) }} value={stdID} type=\"text\" maxLength=\"9\" placeholder=\"학번\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-user\"></i>\n                <input onChange={(e) => { setName(e.target.value) }} value={name} type=\"text\" placeholder=\"이름\" />\n              </div>\n              <div className=\"submitbox\" >\n                <button onClick={() => { findPassword() }} type=\"button\" className=\"SignInBtn\">확인</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button onClick={() => { reset(); history.push('/') }}>로그인</button><button onClick={() => { reset(); history.push('/signUp') }}>회원가입</button>\n            </div>\n          </div>\n        </Route >\n      </Switch >\n    </div >\n\n\n\n  )\n}\n\nexport default AccessPage;","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js",["42","43","44","45","46","47","48","49","50","51","52","53"],"import { useState } from 'react';\nimport { Navbar, Container, Form, FormControl,NavDropdown,Pagination} from 'react-bootstrap';\nimport './ManagementPage.css';\n\nfunction ManagementPage(){\n\n    const [waiting,setWaiting] = useState([\n        {  \n            \"studentID\" : \"1111111111\",\n            \"name\" : \"대기1\"\n        } ,\n        { \n            \"studentID\" : \"222222222\",\n            \"name\" : \"대기2\"\n        },\n        {\n            \"studentID\" : \"333333333\",\n            \"name\" : \"대기3\"\n        }\n    ]);\n\n    const [refusal,setRefusal] = useState([]);\n    const [approval,setApproval] = useState([{  \n        \"studentID\" : \"111111111\",\n         \"name\" : \"승인1\"\n      } ,\n      { \n         \"studentID\" : \"222222222\",\n         \"name\" : \"승인2\"\n      },\n      {\n         \"studentID\" : \"222222222\",\n         \"name\" : \"승인3\"\n      },\n      {\n        \"studentID\" : \"222222222\",\n        \"name\" : \"승인4\"\n     },\n     {\n        \"studentID\" : \"222222222\",\n        \"name\" : \"승인5\"\n     }]);\n\n     const [leftTable, setLeftTable] = useState([...waiting]);\n     const [rightTable, setRightTable] = useState([...approval]);\n\n     const [leftCheckedList, setLeftCheckedList] = useState([]);\n     const [rightCheckedList, setRightCheckedList] = useState([]);\n\n     const changeHandler = (checked, id, setPlace, place) => {\n       if (checked) {\n        setPlace([...place, id]);\n       } else {\n         // 체크 해제\n         setPlace(place.filter((e) => e !== id));\n       }\n       console.log(checked)\n     };\n\n    const [searchStudent, setSearchStudent] = useState(\"\");\n    const [searchKinds,setSearchKinds] = useState(\"\");\n    const [searchstudentList, setSearchStudentList] = useState([]);\n    const [searchButton, setSearchButton] = useState(\"search\");\n\n    return(\n        \n        <div className=\"ManagementPageContainer\">\n            <Navbar expand=\"lg\" style={{padding: \"30px 0\"}}>\n                <Container fluid style={{justifyContent: \"center\", backgroundColor: \"none\"}}>\n                    <h2>학생승인 현황</h2>\n                    <Form  className=\"d-flex\" >\n                    <NavDropdown id=\"nav-dropdown\" >\n                        <NavDropdown.Item eventKey=\"name\" onClick={(e)=>{\n                            setSearchKinds(\"이름\");\n                        }}>이름</NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"number\" onClick={(e)=>{\n                            setSearchKinds(\"학번\");\n                        }}>학번</NavDropdown.Item>\n                    </NavDropdown>\n                        <input className=\"searchBar\" onChange={(e) => { setSearchStudent(e.target.value); setSearchButton(\"search\");}} \n                            name=\"q\" value={searchStudent} type=\"search\" placeholder=\"Search\" ></input>\n                            \n                        <button onClick={(e) => {\n                            if( searchButton === \"x\"){\n                                setSearchStudent(\"\");\n                                setSearchButton(\"search\");\n                                console.log(leftTable);\n                                setLeftTable([...waiting]);\n                                setRightTable([...approval]);\n                            }else{\n                                if(searchKinds === \"\" || searchStudent=== \"\"){\n                                    alert(\"검색 카테고리를 정하고, 검색명을 입력해주세요 :)\");\n                                }else if(searchKinds === \"이름\"){\n                                    setSearchButton(\"x\");\n\n                                    console.log( waiting);\n                            \n                                    let left = waiting.filter((item) => item.name === searchStudent);\n                                    let right = approval.filter((item) => item.name === searchStudent);\n        \n                                    console.log(left);\n                                    setLeftTable(left);\n                                    setRightTable(right);\n                                }else if(searchKinds === \"학번\"){\n                                    // setSearchButton(\"x\");\n                                    // console.log(\"학번 찾기\")\n                            \n                                    // let left = waiting.filter((item) => item.stID === String(searchStudent));\n                                    // let right = approval.filter((item) => item.stID === String(searchStudent));\n        \n                                    // console.log(left);\n                                    // setLeftTable(left);\n                                    // setRightTable(right);\n                                }\n                                \n                            }\n                        }}\n                            // var ob = [{\n                            //     name: 'john',\n                            //     surname: 'fox'\n                            //   }\n                            // ];\n                            // var searchText = 'fox';\n                            // var res = ob.filter((item)=>{\n                            //   return Object.keys(item).some((key)=>item[key].includes(searchText));\n                            // });\n                            // console.log(res);\n                        \n                            className='searchButton' type='button'>\n                                {\n                                searchButton === \"search\"\n                                ?<i className=\"fas fa-search\"></i>\n                                :<i className=\"fas fa-times\"></i>\n                                }\n                                </button>\n                    </Form>\n                </Container>\n            </Navbar>\n            <div className='tables'>\n                <div className='tableSet'>\n                    <div className= \"buttons\">\n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"승인\")\n                                leftCheckedList.map((leftCheckedList)=>{\n                                console.log(leftCheckedList)\n                                })\n                                setLeftCheckedList([]);\n                            }}>승인</button> \n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"거절\")\n                                leftCheckedList.map((leftCheckedList)=>{\n                                console.log(leftCheckedList)\n                                })\n                                setLeftCheckedList([]);\n                            }}>거절</button>\n                    </div>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th colSpan={\"3\"}>승인대기</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                leftTable.map((student,i)=>{\n                                    return(\n                                        <tr key={i}>\n                                            <td>{student.studentID}</td>\n                                            <td>{student.name}</td>\n                                            <td><input \n                                                    id= {student}\n                                                    type=\"checkbox\" \n                                                    onChange={(e)=>{\n                                                    changeHandler(e.currentTarget.checked, student ,setLeftCheckedList,leftCheckedList)\n                                                    }}\n                                                    checked={leftCheckedList.includes(student) ? true : false}\n                                            /></td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    <div className = \"pagenation\">\n                        <button><i className=\"fas fa-chevron-left\"></i></button>\n                            <button className= \"pagenationItem\">{2}</button>\n                            <button className= \"pagenationItem\">{3}</button>\n                            <button className= \"pagenationItem\" style={{color : \"black\"}}>{4}</button>\n                            <button className= \"pagenationItem\">{5}</button>\n                            <button className= \"pagenationItem\">{6}</button>\n                        <button><i className=\"fas fa-chevron-right\"></i></button>\n                    </div>\n                </div>\n\n                <div className='tableSet'>\n                    <div className= \"buttons\">\n                        <button className='submitButton' style={{width : \"110px\"}} onClick={()=>{\n                                console.log(\"회장권한위임\")\n                                rightCheckedList.map((rightCheckedList)=>{\n                                console.log(rightCheckedList)\n                                })\n                                if(rightCheckedList.length === 1){\n                                    setRightCheckedList([]);\n                                }else{\n                                    alert(\"학생회장 위임은 한명만 가능합니다.\");\n                                }\n                            }}>회장권한위임</button> \n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"대기\")\n                                rightCheckedList.map((rightCheckedList)=>{\n                                console.log(rightCheckedList)\n                                })\n                                setRightCheckedList([]);\n                            }}\n                        >대기</button>\n                    </div>\n                     <table>\n                        <thead>\n                            <tr>\n                                <th colSpan={\"3\"}>승인완료</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                                rightTable.map((student,i)=>{\n                                    return(\n                                        <tr key={i}>\n                                            <td>{student.studentID}</td>\n                                            <td>{student.name}</td>\n                                            <td><input \n                                                    id= {student}\n                                                    type=\"checkbox\" \n                                                    onChange={(e)=>{\n                                                    changeHandler(e.currentTarget.checked, student,setRightCheckedList,rightCheckedList)\n                                                    }}\n                                                    checked={rightCheckedList.includes(student) ? true : false}\n                                            /></td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    <div className = \"pagenation\">\n                        <button><i className=\"fas fa-chevron-left\"></i></button>\n                            <button className= \"pagenationItem\">{4}</button>\n                            <button className= \"pagenationItem\">{5}</button>\n                            <button className= \"pagenationItem\" style={{color : \"black\"}}>{6}</button>\n                            <button className= \"pagenationItem\">{7}</button>\n                            <button className= \"pagenationItem\">{8}</button>\n                        <button><i className=\"fas fa-chevron-right\"></i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ManagementPage;","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":8,"column":10,"nodeType":"60","messageId":"61","endLine":8,"endColumn":14},{"ruleId":"58","severity":1,"message":"63","line":8,"column":31,"nodeType":"60","messageId":"61","endLine":8,"endColumn":41},{"ruleId":"58","severity":1,"message":"62","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"64","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":48,"column":6,"nodeType":"67","endLine":48,"endColumn":13,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":2,"column":35,"nodeType":"60","messageId":"61","endLine":2,"endColumn":46},{"ruleId":"58","severity":1,"message":"70","line":2,"column":59,"nodeType":"60","messageId":"61","endLine":2,"endColumn":69},{"ruleId":"58","severity":1,"message":"71","line":7,"column":20,"nodeType":"60","messageId":"61","endLine":7,"endColumn":30},{"ruleId":"58","severity":1,"message":"72","line":22,"column":12,"nodeType":"60","messageId":"61","endLine":22,"endColumn":19},{"ruleId":"58","severity":1,"message":"73","line":22,"column":20,"nodeType":"60","messageId":"61","endLine":22,"endColumn":30},{"ruleId":"58","severity":1,"message":"74","line":23,"column":21,"nodeType":"60","messageId":"61","endLine":23,"endColumn":32},{"ruleId":"58","severity":1,"message":"75","line":62,"column":12,"nodeType":"60","messageId":"61","endLine":62,"endColumn":29},{"ruleId":"58","severity":1,"message":"76","line":62,"column":31,"nodeType":"60","messageId":"61","endLine":62,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":144,"column":70,"nodeType":"79","messageId":"80","endLine":144,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":151,"column":70,"nodeType":"79","messageId":"80","endLine":151,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":199,"column":72,"nodeType":"79","messageId":"80","endLine":199,"endColumn":74},{"ruleId":"77","severity":1,"message":"78","line":210,"column":72,"nodeType":"79","messageId":"80","endLine":210,"endColumn":74},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useHistory' is defined but never used.","'major' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'atIsContain'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'FormControl' is defined but never used.","'Pagination' is defined but never used.","'setWaiting' is assigned a value but never used.","'refusal' is assigned a value but never used.","'setRefusal' is assigned a value but never used.","'setApproval' is assigned a value but never used.","'searchstudentList' is assigned a value but never used.","'setSearchStudentList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [atIsContain, email]",{"range":"86","text":"87"},[2646,2653],"[atIsContain, email]"]