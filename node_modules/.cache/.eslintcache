[{"/Users/river2/Desktop/PKSCL/frontend/src/index.js":"1","/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js":"2","/Users/river2/Desktop/PKSCL/frontend/src/App.js":"3","/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js":"4","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js":"5","/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js":"6","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js":"7","/Users/river2/Desktop/PKSCL/frontend/src/EditProfile.js":"8","/Users/river2/Desktop/PKSCL/frontend/src/CertFile.js":"9","/Users/river2/Desktop/PKSCL/frontend/src/EditMainPage.js":"10","/Users/river2/Desktop/PKSCL/frontend/src/EditEvent.js":"11","/Users/river2/Desktop/PKSCL/frontend/src/PreviewImg.js":"12"},{"size":644,"mtime":1643258654429,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1642060834506,"results":"15","hashOfConfig":"14"},{"size":2722,"mtime":1644393978723,"results":"16","hashOfConfig":"14"},{"size":41474,"mtime":1644393867738,"results":"17","hashOfConfig":"14"},{"size":550,"mtime":1642832998582,"results":"18","hashOfConfig":"14"},{"size":25945,"mtime":1644388894436,"results":"19","hashOfConfig":"14"},{"size":53423,"mtime":1644407915033,"results":"20","hashOfConfig":"14"},{"size":33794,"mtime":1644335872967,"results":"21","hashOfConfig":"14"},{"size":650,"mtime":1644050425127,"results":"22","hashOfConfig":"14"},{"size":60133,"mtime":1644414380210,"results":"23","hashOfConfig":"14"},{"size":31264,"mtime":1644476268131,"results":"24","hashOfConfig":"14"},{"size":469,"mtime":1644333487403,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"47akap",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/river2/Desktop/PKSCL/frontend/src/index.js",[],["59","60"],"/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/App.js",["61","62","63"],"import './css/App.css';\nimport { useEffect, useState } from 'react';\nimport AccessPage from './AccessPage';\nimport MainPage from './MainPage';\nimport ManagementPage from './ManagementPage';\nimport EditMainPage from './EditMainPage';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nfunction loadmonth() {\n  let now = new Date();\n  let month = now.getMonth();\n  return month;\n}\nfunction selectseason() {\n  switch (loadmonth()) {\n    case 0: case 1: case 2:\n      return \"quarter1\"\n    case 3: case 4: case 5:\n      return \"quarter2\"\n    case 6: case 7: case 8:\n      return \"quarter3\"\n    case 9: case 10: case 11:\n      return \"quarter4\"\n    default:\n      return \"\";\n  }\n}\n\nfunction setColorProperty(colorQuarter, colorQuarterCircle, colorLeftPanel, colorCard, colorBackground) {\n        document.documentElement.style.setProperty(\"--color-quarter\", colorQuarter);\n        document.documentElement.style.setProperty(\"--color-quarterCircle\", colorQuarterCircle);\n        document.documentElement.style.setProperty(\"--color-leftPanel\", colorLeftPanel);\n        document.documentElement.style.setProperty(\"--color-card\", colorCard);\n        document.documentElement.style.setProperty(\"--color-background\", colorBackground);\n    }\n\n    function defineColor(quarter) {\n        if (quarter === \"quarter1\") {\n            setColorProperty(\"#db8f8e\", \"#efbebc\", \"#f5dede\", \"#fff5ed\", \"#fbf6f6\");\n        } else if (quarter === \"quarter2\") {\n            setColorProperty(\"#649d67\", \"#cedbcf\", \"#cedbcf\", \"#dee7df\", \"#f6f7f6\");\n        } else if (quarter === \"quarter3\") {\n            setColorProperty(\"#c18356\", \"#efdccd\", \"#e9d8cd\", \"#fff5ed\", \"#fff5ee\");\n        } else if (quarter === \"quarter4\") {\n            setColorProperty(\"#6b8396\", \"#d0dbe5\", \"#d0dbe5\", \"#e6f1fb\", \"#f5faff\");\n        }\n    }\n\n\nfunction App() {\n\n  const [loginPosition, setLoginPosition] = useState(\"president\");\n  const [todayQuarter, setTodatQuarter] = useState(selectseason);\n\n  useEffect(() => {\n    let quarter = selectseason();\n    defineColor(quarter);\n  }, [])\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/manage'>\n          <ManagementPage loginPosition={loginPosition}></ManagementPage>\n        </Route>\n\n        <Route exact path='/edit-main'>\n          <EditMainPage loginPosition={loginPosition} todayQuarter={todayQuarter}></EditMainPage>\n        </Route>\n\n        <Route exact path='/main'>\n          <MainPage loginPosition={loginPosition} todayQuarter={todayQuarter}></MainPage>\n        </Route>\n\n        <Route path='/' >\n          <AccessPage setLoginPosition={setLoginPosition} todayQuarter={todayQuarter}> </AccessPage>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;",["64","65"],"/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js",["66","67","68","69"],"import { useState, useEffect } from 'react';\nimport logo from './img/logo.png';\nimport { Nav } from 'react-bootstrap';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/AccessPage.scss';\n\nfunction AccessPage(props) {\n  let debugAPIURL = \"\";\n  // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n  // let [signType, setSignType] =useState(\"signIn\");\n  const [position, setPosition] = useState(\"student\");\n\n  const [stdID, setStdID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [checkPassword, setCheckPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [certFile, setCertFile] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [majorList, setMajorList] = useState([]);\n  const [isCorrect, setIsCorrect] = useState([false, false, false, false, false, false, false, false])\n  const [emailTypeState, setEmailTypeState] = useState(false);\n  const [resendEmail, setResendEmail] = useState(0);\n  const [signUpButtonState, setSignUpButtonState] = useState(false);\n\n  const [personalInformationButton, setPersonalInformationButton] = useState(false);\n  const [personalInformation, setPersonalInformation] = useState([false, false, false]);\n\n  let logoImgPath = `./img/${props.todayQuarter}.png`\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (phoneNumber.length === 10) {\n      setPhoneNumber(phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'));\n    }\n    if (phoneNumber.length === 13) {\n      setPhoneNumber(phoneNumber.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\n    }\n  }, [phoneNumber]);\n\n  useEffect(() => {\n    if (email.length === 1) { //첫글자 입력시\n      setEmail(email + \"@pukyong.ac.kr\");\n    } else if (email.includes(\"@pukyong.ac.kr\")) {\n      let input = document.getElementById('inputEmail');\n      input.focus();\n      input.setSelectionRange(email.length - 14, email.length - 14);\n    }\n  }, [email]);\n\n  useEffect(() => {\n    axios.get(debugAPIURL + '/major-list')\n      .then((payload) => {\n        setMajorList([...payload.data.majorList]);\n      })\n      .catch((error) => {\n        alert(\"학과리스트를 불러올 수 없습니다.\");\n      })\n\n    defineColor(props.todayQuarter);\n  }, []);\n\n  useEffect(() => {\n    console.log(isCorrect);\n    if (position === \"president\") {\n      for (let i = 0; i < 7; i++) {\n        if (isCorrect[i] === false) {\n          setSignUpButtonState(false);\n          return\n        }\n      }\n      setSignUpButtonState(true);\n    }\n\n    if (position === \"student\") {\n      for (let i = 0; i < 8; i++) {\n        if (i === 5) continue;\n\n        if (isCorrect[i] === false) {\n          setSignUpButtonState(false);\n          return\n        }\n      }\n      setSignUpButtonState(true);\n    }\n  }, [isCorrect]);\n\n  function reset() {\n    setStdID(\"\");\n    setName(\"\");\n    setMajor(\"\");\n    setPassword(\"\");\n    setCheckPassword(\"\");\n    setEmail(\"\");\n    setCertFile(\"\");\n    setIsCorrect([false, false, false, false, false, false, false, false]);\n    setResendEmail(0);\n    setPersonalInformationButton(false);\n    setPersonalInformation([false, false, false]);\n\n    document.querySelectorAll(\".InfoCheckedList\").forEach(function (v) { v.checked = false });\n\n    if (document.getElementById(\"major\") !== null) {\n      document.getElementById(\"major\").value = \"\";\n    }\n\n\n  };\n\n  function signUp() {\n    if (signUpButtonState) {\n\n      let payload = new FormData();\n\n      payload.append(\"stdID\", stdID);\n      payload.append(\"password\", password);\n      payload.append(\"checkPassword\", checkPassword);\n      payload.append(\"major\", major)\n      payload.append(\"name\", name);\n      payload.append(\"email\", email);\n\n      if (position === \"student\")\n        payload.append(\"certFile\", certFile);\n      else if (position === \"president\")\n        payload.append(\"phoneNumber\", phoneNumber);\n\n      for (let value of payload.values()) {\n        console.log(value);\n      }\n\n      axios.post(debugAPIURL + \"/signup/\" + position, payload,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        }\n      )\n        .then((payload) => {\n          switch (payload.status) {\n            case 200:\n              alert(\"회원가입에 성공하였습니다 :)\")\n              if (position === \"president\") {\n                if (window.confirm('학생회장 인증을 완료해야지 장부 업로드 및 학생 관리를 할 수 있습니다. 챗봇으로 이동하시겠습니까?'))\n                  window.location(\"http://pf.kakao.com/_hxnlXb\")\n              }\n              history.push('/');\n              return;\n            default: alert(\"success: \" + payload.status); return;\n          }\n        })\n        .catch((error) => {\n          switch (error.response.status) {\n            case 409: alert(\"이미 존재하는 이메일입니다 :)\"); return;\n            case 403: alert(\"이메일이 인증되지 않았습니다. 이메일 인증을 완료해주세요 :) \"); return;\n            default: alert(\"error: \" + error.response.status); return;\n          }\n        })\n    }\n    else {\n      alert(\"빈칸을 모두 입력해주세요 :(\");\n    }\n  }\n\n\n  function login() {\n    if (email === \"\" || password === \"\") {\n      return (\n        alert(\"이메일과 비밀번호를 모두 입력하세요 :)\")\n      )\n    }\n    else {\n      let payload = { \"email\": email, \"password\": password };\n      console.log(position)\n      axios.post(debugAPIURL + '/login/' + position, payload)\n        .then((payload) => {\n          props.setLoginPosition(position);\n          if (position === \"president\") {\n            history.push('/edit-main');\n          } else if (position === \"admin\" || position === \"student\") {\n            history.push('/main');\n          }\n        })\n        .catch((error) => {\n          alert(\"로그인에 실패했습니다 :)\")\n\n        });\n\n    }\n  };\n\n  function findPassword() {\n    if (email === \"\" || stdID === \"\" || name === \"\") {\n      return (\n        alert(\"빈칸을 모두 입력해주세요 :)\")\n      )\n    }\n    else {\n      let payload = { \"email\": email, \"stdID\": stdID, \"name\": name };\n      axios.post(debugAPIURL + '/newpwd/' + position, payload)\n        .then((payload) => {\n          console.log(payload);\n          if (window.confirm('입력하신 이메일로 임시 비밀번호를 발급하였습니다.')) {\n            history.push('/');\n          }\n          else {\n            history.push('/newpwd');\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"입력하신 정보를 찾을 수 없습니다.\");\n\n        });\n\n    }\n  };\n\n  function certEmail() {\n    let payload = { \"email\": email };\n    axios.post(debugAPIURL + '/email/' + position, payload)\n      .then((payload) => {\n        alert(\"입력하신 이메일로 메일을 발송했습니다.\");\n      })\n      .catch((error) => {\n        switch (error.response.status) {\n          case 409: alert(\"이미 존재하는 이메일입니다 :)\"); return;\n          case 403: alert(\"이메일이 인증되지 않았습니다. 이메일 인증을 완료해주세요 :) \"); return;\n          default: alert(\"error: \" + error.response.status); return;\n        }\n      });\n  };\n\n  function changeIsCorrect(i, type) {\n    var temp = [...isCorrect];\n    temp[i] = type;\n    setIsCorrect(isCorrect => temp);\n  };\n\n\n\n  function changePersonalInformation(index) {\n    let PersonalInformation = [...personalInformation];\n    PersonalInformation[index] = !personalInformation[index];\n    setPersonalInformation([...PersonalInformation]);\n  };\n\n  function setColorProperty(colorQuarter, colorQuarterCircle, colorLeftPanel, colorCard, colorBackground) {\n        document.documentElement.style.setProperty(\"--color-quarter\", colorQuarter);\n        document.documentElement.style.setProperty(\"--color-quarterCircle\", colorQuarterCircle);\n        document.documentElement.style.setProperty(\"--color-leftPanel\", colorLeftPanel);\n        document.documentElement.style.setProperty(\"--color-card\", colorCard);\n        document.documentElement.style.setProperty(\"--color-background\", colorBackground);\n    }\n\n    function defineColor(quarter) {\n        if (quarter === \"quarter1\") {\n            setColorProperty(\"#db8f8e\", \"#efbebc\", \"#f5dede\", \"#fff5ed\", \"#fbf6f6\");\n        } else if (quarter === \"quarter2\") {\n            setColorProperty(\"#649d67\", \"#cedbcf\", \"#cedbcf\", \"#dee7df\", \"#f6f7f6\");\n        } else if (quarter === \"quarter3\") {\n            setColorProperty(\"#c18356\", \"#efdccd\", \"#e9d8cd\", \"#fff5ed\", \"#fff5ee\");\n        } else if (quarter === \"quarter4\") {\n            setColorProperty(\"#6b8396\", \"#d0dbe5\", \"#d0dbe5\", \"#e6f1fb\", \"#f5faff\");\n        }\n    }\n\n\n  return (\n    <div className=\"accessContainer\">\n\n      <div className=\"left-panel\">\n                <div class='wave -one'></div>\n                <div class='wave -two'></div>\n                <div class='wave -three'></div>\n        <div className=\"content\">\n            \n          <button type=\"button\" style={{ boxShadow: \"0 0 0 0 white\", fontFamily: 'YUniverse-B' }} onClick={() => { setPosition(\"student\"); reset(); history.push('/') }}><h3>PKNU 온라인 장부</h3></button>\n          <p>\n            우리 학과의 장부를 분기 별로 확인할 수 있습니다.\n          </p>\n        </div>\n            <img src={logo} className=\"image\" alt=\"PKSCL logo\" />\n        <button type=\"button\" onClick={() => { setPosition(\"admin\"); reset(); history.push('/giraffe-admin') }}\n          style={{ height: \"10px\", width: \"20px\", backgroundColor: \"ffffff00\", boxShadow: \"0px 0px 0px 0px grey\" }}></button>\n        </div>\n      <Switch>\n\n        <Route exact path=\"/signUp\">\n          <div className=\"right-panel\" id=\"signup\" style={{ marginTop: \"20px\" }}>\n            <form className=\"userForm\" >\n              <div id=\"nav\" >\n                <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setPosition(\"student\"); reset(); }}>학생</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-2\" onClick={() => { setPosition(\"president\"); reset(); }}>학생회장</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </div>\n              <h3 className=\"accessTitle\" style={{ margin: \"10px 0 0 0\" }}><img src={logoImgPath} alt=\"logo\" width={\"40px\"} height={\"40px\"} />가입을 시작합니다!</h3>\n              {\n                position === \"student\"\n                  ? <div style={{ marginBottom: \"10px\" }}>PKSCL로 편리하고 투명하게 장부를 이용하세요:) </div>\n                  : <div style={{ marginBottom: \"10px\" }}>PKSCL로 편리하고 투명하게 장부를 관리하세요:) </div>\n              }\n              {/* 추가 */}\n              {\n                personalInformationButton === false\n                  ? (\n                    <div style={{ width: \"350px\" }}>\n                      <div>환영합니다 :)\n                        <br />부경대학교 온라인 장부 PKSCL 서비스를 이용해 주셔서 감사합니다. 본 약관은 온라인 장부 서비스의 이용과 관련하여 서비스를 제공하는 PKSCL와 이를 이용하는 온라인 장부를 이용할 사용자들과의 관계를 설명하며, 아울러 여러분의 PKSCL 서비스 이용에 도움이 될 수 있는 정보를 포함하고 있습니다.\n                        <br /> PKSCL 회원으로 가입하실 경우 여러분은 본 약관 및 관련 운영 정책을 동의해야 하기 때문에, 잠시 시간을 내시어 주의 깊게 살펴봐 주시기 바랍니다.\n                      </div>\n                      {/* <input class=\"InfoCheckedList\" style={{ marginLeft: \"16px\", marginTop: \"20px\" }} type=\"checkbox\"\n                        onClick={() => { changePersonalInformation(0) }}\n                      ></input>[필수] 부경대학교 재학생 또는 휴학생 입니다. */}\n                      <details>\n                        <summary><input class=\"InfoCheckedList\" type=\"checkbox\"\n                          onClick={() => { changePersonalInformation(0) }}\n                        ></input>[필수] 부경대학교 재학생 또는 휴학생 입니다.</summary>\n                        <span>\n                          <div style={{ backgroundColor: \"var(--color-bright-gray)\", margin: \"10px 0 10px 0\", height: \"85px\", overflowY: \"auto\" }}>\n                            <p /> PKSCL은 부경대학교 소속인 학생들을 대상으로 학과의 장부를 공개하고 있습니다.\n                            <br /> 1차 인증 ) 학교 인증\n                            <br /> - 학교 이메일로 부경대학교 학생임을 인증 후 회원가입 가능\n                            <br /> 2차 인증 ) 학과 인증\n                            <br /> 학생 - 학생회장이 본과 학생으로 승인할 시 해당 학과의 온라인 장부 열람 가능\n                            <br /> 학생회장 - PKSCL 챗봇을 통해 학생회장 증명 서류를 제출 한 후 해당 학과의 온라인 장부 관리 가능\n                          </div>\n                        </span>\n                      </details>\n                      <details>\n                        <summary><input class=\"InfoCheckedList\" type=\"checkbox\"\n                          onClick={() => { changePersonalInformation(1) }}\n                        ></input>[필수] PKSCL 이용 약관 동의</summary>\n                        <span>\n                          <div style={{ backgroundColor: \"var(--color-bright-gray)\", margin: \"10px 0 10px 0\", height: \"100px\", overflowY: \"auto\" }}>\n                            <p />1. 계약당사자의 의무\n\n                            <br />PKSCL은 여러분이 PKSCL 서비스를 투명하고 편리하게 이용할 수 있도록 최선을 다하고 있습니다. 다만, 여러분이 PKSCL 서비스를 보다 안전하게 이용하고 PKSCL 서비스에서 여러분과 타인의 권리가 서로 존중되고 보호받으려면 여러분의 도움과 협조가 필요합니다. 여러분의 안전한 서비스 이용과 권리 보호를 위해 부득이 아래와 같은 경우 여러분의 장부 관리 및 열람 권한이 제한될 수 있으므로, 다음 사항들을 확인하고 준수를 요청 드립니다.\n\n                            <br />1 - a. 회원 가입 시 이름, 이메일, 학번, 학과 등의 정보를 허위로 기재하면 안 되고 회원 계정에 등록된 정보는 항상 정확한 최신 정보가 유지될 수 있도록 관리해 해야합니다. 또한 자신의 계정을 다른 사람에게 판매, 양도, 대여 또는 담보로 제공하거나 다른 사람에게 그 사용을 허락해서는 안 됩니다. 아울러 자신의 계정이 아닌 타인의 계정을 무단으로 사용해서는 안 됩니다.\n\n                            <br />1 - b. 학과의 장부를 캡쳐해서 무단으로 다른 SNS나 커뮤니티 등에 업로드 해서는 안 됩니다. 사용자가 학과의 장부 화면을 캡쳐해서 유포한 것이 발각이 되거나, 허위 정보로 회원가입을 시도했음이 판별된 경우 등에는 PKSCL 회원 탈퇴를 고지받을 수 있고 이 문제에 대한 책임은 본인에게 있습니다.\n\n                            <br />1 - c.  학생회장의 경우에는 반드시 학생회실(학과사무실)에 비대면으로 제출한 장부와 동일한 내용을 온라인 장부에 업로드 해야 합니다. 장부 업로드시에 PKSCL 이용 방법을 준수하지 않아 발생하는 문제는 본인에게 있습니다.\n\n                            <p />2. 서비스 변경 및 종료\n\n                            <br />PKSCL은 연중 무휴, 1일 24시간 안정적으로 서비스를 제공하기 위해 최선을 다하고 있지만, 컴퓨터, 서버 등 정보통신설비의 보수점검, 교체 또는 고장, 통신두절 등 운영상 이유가 있는 경우 부득이 서비스의 전부 또는 일부를 중단할 수 있습니다.\n\n                            <br />또한, 서비스 운영 또는 개선이 필요하다고 판단된 경우 서비스의 전부 또는 일부를 수정, 변경 또는 종료할 수 있습니다. PKSCL 서비스의 전부 또는 일부를 수정, 변경 또는 종료하게 된 경우 관련 법령에 특별한 규정이 없는 한 별도의 보상을 하지 않습니다.\n\n                            <br />이 경우 PKSCL은 예측 가능한 경우 상당기간 전에 이를 안내하며, 만약 예측 불가능한 경우라면 사후 지체 없이 상세히 설명하고 안내 드리겠습니다.\n\n                            <p />3. 인증 서비스\n\n                            <br />PKSCL는 회원가입 시 사용자가 부경대의 학생임을 증명하기 위해서 사용자가 기입한 학교 이메일로 1차 인증 절차를 거칩니다. 이후 학생과 학생회장의 신분을 확인하는 2차 인증 절차를 위해서는 ‘이름, 학과, 학번, 학생증’ 등의 정보를 추가적으로 필요로 합니다. 일반 학생이 회원가입을 한 경우에는 회원가입시 제출한 학생증, 학번, 이름을 토대로 해당 학생의 학과 학생회장이 해당 학과의 학생임을 확인한 후에 학생은  학과의 장부를 확인할 수 있습니다. 아울러 학생회장으로 회원가입을 한 경우에는 PKSCL 챗봇을 통해 학생회장임을 증명하는 서류를 추가적으로 제출한 후에 학생회장으로 온라인 학과 장부를 관리할 수 있습니다.\n                          </div>\n                        </span>\n                      </details>\n                      <details >\n                        <summary><input class=\"InfoCheckedList\" type=\"checkbox\"\n                          onClick={() => { changePersonalInformation(2) }}\n                        ></input>[필수] 개인정보 수집 및 이용 동의</summary>\n                        <span>\n                          <div style={{ backgroundColor: \"var(--color-bright-gray)\", margin: \"10px 0 10px 0\", height: \"100px\", overflowY: \"auto\" }}>\n                            <p /> 1. PKSCL 계정 이용계약\n\n                            <br />1 - a) 수집되는 개인 정보\n\n                            <br />PKSCL가 제공하는 온라인 장부 서비스는 회원가입을 해야지만 이용이 가능합니다. 그리고 사용자가 회원가입을 하는 절차에서 부경대 재학생 및 학과 인증을 하기 위해 필요한 최소한의 개인정보를 수집합니다.\n\n                            <br />회원가입 시점에 PKSCL이 이용자로부터 수집하는 개인정보는 아래와 같습니다.\n\n                            <br />- 학생이 회원 가입 시에 ‘학번, 학과, 이름, 학교 이메일, 학생증’을 필수항목으로 수집합니다. 학생회장의 경우엔 ‘전화번호’를 추가로 수집합니다. 또한, 회원가입 이후에 챗봇을 통해 학생회장을 증명하기 위한 추가적인 서류를 요구할 수 있습니다.\n\n                            <br /> 서비스 이용 과정에서 이용자로부터 수집하는 개인정보는 아래와 같습니다.\n\n                            <br />- 임시 비밀번호 발급 및 비밀번호 찾기를 요청할 경우에는 본인인증을 위해 ‘이메일, 학번, 이름’을 필수 항목으로 수집합니다.\n\n                            <br />- 로그인 후 개별 서비스에서 정보 변경 기능 및 비밀번호 변경을 이용할 시에 프로필 정보(학과, 이름, 전화번호, 학생증)를 설정할 수 있습니다.\n\n                            <br />1 - b) 수집한 개인정보의 이용\n\n                            <br />수집한 개인정보는 PKSCL 서비스의 회원관리, 서비스 개발・제공 등 아래의 목적으로만 이용합니다.\n\n                            <br />- 회원 가입 의사의 확인, 부경대 학생임을 식별, 회원탈퇴 의사의 확인 등 회원관리를 위하여 개인정보를 이용합니다.(이메일 : 본인확인용 이메일 전송 및 임시 비밀번호 발급, 회원 식별용 정보로 활용 , 비밀번호 : 본래 값을 확인하지 못하도록 일방향 암호화하여 저장, 학생증 파일: 본인확인용, 추후 재확인이 필요할 경우를 위해 6개월 보관 후 자동 삭제, 장부 열람 권한 및 권한 승인 신청 정보 저장 : 부적절한 사용자의 정보 조회를 방지 , 이름, 학과 : DB 내 정보 조회를 위한 사용자 정보 식별, 학번 : 학생증과 대조를 통한 본인확인, 회원 식별용 정보로 활용, 전화번호 : 학과 회장의 정보 제공용 )\n\n                            <br />- 보안, 프라이버시, 안전 측면에서 이용자가 안심하고 이용할 수 있는 서비스 이용환경 구축을 위해 개인정보를 단방향 암호화하여 쿠키로 저장합니다.( 쿠키: 사이트 내 로그인 유지를 위해 서버에서 임의로 생성한 세션 ID 저장 및 전송 )\n\n                            <br />1 - c) 개인정보의 보관기간\n\n                            <br />PKSCL은 원칙적으로 이용자의 개인정보를 해당 회원이 탈퇴를 할 시 지체없이 파기하고 있습니다. 예외적으로 PKSCL 이용 약관에 어긋나는 행위를 하였을 경우에는 부정 가입 및 이용을 방지하기 위해 부정 이용자의 가입인증 이메일을 탈퇴일로부터 6개월 보관 합니다.\n\n                            <br />1 - d) 개인정보 수집 및 이용 동의를 거부할 권리\n\n                            <br />이용자는 개인정보의 수집 및 이용 동의를 거부할 권리가 있습니다. 하지만 회원가입 시 수집하는 최소한의 개인정보, 즉, 필수 항목에 대한 수집 및 이용 동의를 거부하실 경우, 회원가입이 어려울 수 있습니다.\n\n                            <p /> 2. 서비스 이용 계약 해지\n                            <br />2 -a) 사용자가 회원 탈퇴를 신청한 경우\n\n                            <br />사용자가 PKSCL 이용을 더 이상 원치 않는 때에는 언제든지 서비스 내 제공되는 메뉴를 이용하여 이용계약의 해지 신청을 할 수 있습니다. 이용계약이 해지되면 법령 및 개인정보 처리방침에 따라 여러분의 정보를 보유하는 경우를 제외하고는 여러분의 PKSCL 계정 정보 및 PKSCL 계정으로 이용하였던 개별 서비스 데이터는 삭제됩니다. 이용계약이 해지된 경우라도 사용자는 언제든 다시 PKSCL에 회원가입을 신청할 수 있습니다.\n\n                            <br />2 - b) 위 약관들에 어긋나는 행동을 보일 경우\n\n                            <br />사용자가 관련 법령, 본 약관, 계정 및 서비스 운영정책 등을 준수하지 않을 경우, PKSCL은 사용자의 관련 행위 내용을 확인할 수 있으며, 그 확인 결과에 따라 PKSCL 서비스 이용에 대한 주의를 당부하거나, 더 이상 PKSCL 서비스 이용계약의 온전한 유지를 기대하기 어려운 경우엔 부득이 사용자에게 계정 탈퇴를 고지할 수 있습니다. 이 경우에는 PKSCL의 계약당사자 의무를 이행하지 않은 것으로 판단이 된 경우이기 때문에 이에 대한 문제는 본인에게 있음을 미리 말씀드립니다.\n                          </div>\n                        </span>\n                      </details>\n                      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n                        <button type=\"button\" className=\"SignInBtn\" onClick={() => {\n                          function personInfomationAgreeNow() {\n                            console.log(personalInformation);\n                            if (personalInformation.includes(false)) {\n                              alert(\"PKSCL 이용약관과 개인정보 수집 및 이용에 대한 안내 모두 동의해주세요 :)\");\n                              return false;\n                            } else return true;\n                          }\n\n                          if (personInfomationAgreeNow()) {\n                            setPersonalInformationButton(true);\n                          }\n                        }}> 동의 </button>\n                      </div>\n                    </div>\n                  )\n                  : (<>\n                    <div className=\"input-field\">\n                      <i className=\"fas fa-lock\" style={isCorrect[0] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      <input onChange={(e) => {\n                        setStdID(e.target.value.replace(/[^0-9]/g, ''));\n                        if (e.target.value.length === 9) {\n                          changeIsCorrect(0, true);\n                        } else {\n                          changeIsCorrect(0, false);\n                        }\n                        console.log(isCorrect[0]);\n                      }\n                      } name=\"stdID\" value={stdID} maxLength=\"9\" placeholder=\"학번\" type=\"text\" />\n                    </div>\n                    <div className=\"input-field\">\n                      <i className=\"fas fa-key\" style={isCorrect[1] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      <input onChange={(e) => {\n                        console.log(e.target.value);\n                        setPassword(e.target.value);\n                        if (e.target.value.length !== 0) {\n                          changeIsCorrect(1, true);\n                        } else {\n                          changeIsCorrect(1, false);\n                        }\n\n                      }} name=\"password\" value={password} type=\"password\" placeholder=\"비밀번호\" />\n                    </div>\n                    <div className=\"input-field\">\n                      <i className=\"fas fa-key\" style={isCorrect[2] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      <input onChange={(e) => {\n                        setCheckPassword(e.target.value)\n                        if (password !== e.target.value || password === \"\") {\n                          changeIsCorrect(2, false);\n                        } else if (password === e.target.value) {\n                          changeIsCorrect(2, true);\n                        }\n                      }\n                      } name=\"checkPassword\" value={checkPassword} type=\"password\" placeholder=\"비밀번호 재확인\" />\n                    </div>\n                    <div className=\"input-field\" style={{ fontSize: \"80%\" }}>\n                      <i className=\"fas fa-book-open\" style={isCorrect[3] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      <label htmlFor=\"majorList\"></label>\n                      <input type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder=\"학과를 입력하세요.\"\n                        onChange={(e) => {\n                          setMajor(majorList.indexOf(e.target.value) + 1);\n                          if (majorList.includes(e.target.value)) {\n                            changeIsCorrect(3, true);\n                          } else {\n                            changeIsCorrect(3, false);\n                          }\n                        }\n                        }></input>\n                      <datalist id=\"majorList-options\" >\n                        {\n                          majorList.map((majorName, i) => {\n                            if (i !== 0) {\n                              return (\n                                <option value={majorName} key={i} ></option>\n                              )\n                            }\n                          })\n                        }\n                      </datalist>\n                    </div>\n                    <div className=\"input-field\">\n                      <i className=\"fas fa-user\" style={isCorrect[4] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      <input onChange={(e) => {\n                        setName(e.target.value)\n                        if (e.target.value === \"\") {\n                          changeIsCorrect(4, false);\n                        } else {\n                          changeIsCorrect(4, true);\n                        }\n                      }\n                      } name=\"name\" value={name} type=\"text\" placeholder=\"이름\" />\n                    </div>\n                    {\n                      position === \"president\"\n                        ?\n                        (<div className=\"input-field\">\n                          <i className=\"fas fa-phone-alt\" style={isCorrect[5] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                          <input onChange={(e) => {\n                            setPhoneNumber(e.target.value)\n                            if (e.target.value.length !== 13) {\n                              changeIsCorrect(5, false);\n                            } else {\n                              changeIsCorrect(5, true);\n                            }\n                          }\n                          } maxLength=\"13\" name=\"phoneNumber\" value={phoneNumber} type=\"text\" placeholder=\"전화번호\" />\n                        </div>\n                        )\n                        :\n                        null\n\n                    }\n\n                    <div className=\"input-field\">\n                      <i className=\"fas fa-envelope\" style={isCorrect[6] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                      {\n                        resendEmail === 0\n                          ? (\n                            <>\n                              <input id=\"inputEmail\"\n                                onChange={(e) => {\n                                  setEmail(e.target.value);\n                                  const emailType = e.target.value.substring(e.target.value.indexOf(\"@\"));\n\n                                  console.log(e.target.value.indexOf('@'));\n                                  if (e.target.value.indexOf('@') === 0) {\n                                    setEmailTypeState(false);\n                                  } else if (emailType === \"@pukyong.ac.kr\") {\n                                    setEmailTypeState(true);\n                                  } else {\n                                    setEmailTypeState(false);\n                                  }\n                                }} name=\"email\" value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n                              <label className=\"certEmail\" onClick={() => {\n                                console.log(emailTypeState);\n                                if (emailTypeState) {\n                                  certEmail();\n                                  setResendEmail(1);\n                                  changeIsCorrect(6, true);\n                                }\n                                else if (!emailTypeState) alert(\"이메일 형식이 올바르지 않습니다 :(\")\n                              }\n                              }>인증</label>\n                            </>\n                          )\n                          : (\n                            <>\n                              <input id=\"inputEmail\" name=\"email\" value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" readOnly />\n                              <label className=\"certEmail\" onClick={() => { setResendEmail(0); changeIsCorrect(6, false); }}>수정</label>\n                            </>)\n                      }\n                    </div>\n                    {\n                      position === \"student\"\n                        ?\n                        <div className=\"input-field filebox\">\n                          <i className=\"fas fa-user-graduate\" style={isCorrect[7] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                          <input className='uploadName' placeholder='학생증을 첨부해주세요' value={certFile.name} readOnly />\n                          <label htmlFor=\"certFile\">찾기</label>\n                          <input type=\"file\" id='certFile' name=\"certFile\" accept='image/*'\n                            onChange={(e) => {\n                              setCertFile(e.target.files[0]);\n                              if (e.target.value === \"\") {\n                                changeIsCorrect(7, false);\n                              } else {\n                                changeIsCorrect(7, true);\n                              }\n                            }} />\n                        </div>\n                        : null\n                    }\n\n\n                    <div className=\"submitbox\" >\n                      <button type=\"button\" style={signUpButtonState ? null : { backgroundColor: '#ACACAC' }}\n                        className=\"SignInBtn\" onClick={() => { signUp() }}  >회원가입</button>\n                    </div>\n                  </>\n                  )\n              }\n\n            </form>\n            <div className='moveSignPage'>\n              <button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/newpwd') }}>비밀번호 찾기</button><button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/'); }}>로그인</button>\n            </div>\n          </div>\n\n        </Route >\n\n        <Route exact path=\"/newpwd\">\n          <div className=\"right-panel\">\n            <form className=\"userForm\">\n\n              <div id=\"nav\" >\n                <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setPosition(\"student\"); reset(); }}>학생</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-2\" onClick={() => { setPosition(\"president\"); reset(); }}>학생회장</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </div>\n              <h3 className=\"accessTitle\" ><img src={logoImgPath} alt=\"logo\" width={\"40px\"} height={\"40px\"} />비밀번호 찾기</h3>\n\n\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\" style={isCorrect[5] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                <input id=\"inputEmail\" onChange={(e) => {\n                  setEmail(e.target.value);\n                  const emailType = e.target.value.substring(e.target.value.indexOf(\"@\"));\n                  // console.log(emailType);\n                  console.log(e.target.value);\n                  if (e.target.value.indexOf('@') === 0) {\n                    setEmailTypeState(emailTypeState => false);\n                    changeIsCorrect(5, false);\n                    console.log(\"case 1\");\n                  } else if (emailType === \"@pukyong.ac.kr\") {\n                    setEmailTypeState(emailTypeState => true);\n                    changeIsCorrect(5, true);\n                    console.log(\"case 2\");\n                  } else {\n                    setEmailTypeState(emailTypeState => false);\n                    changeIsCorrect(5, false);\n                    console.log(\"case 3\");\n                  }\n                }} name=\"email\" value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\" style={isCorrect[0] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                <input onChange={(e) => {\n                  setStdID(e.target.value.replace(/[^0-9]/g, ''));\n                  if (e.target.value.length === 9) {\n                    changeIsCorrect(0, true);\n                  } else {\n                    changeIsCorrect(0, false);\n                  }\n\n                }\n                } value={stdID} type=\"text\" maxLength=\"9\" placeholder=\"학번\" />\n              </div>\n              <div className=\"input-field\" >\n                <i className=\"fas fa-user\" style={isCorrect[4] === true ? { color: \"var(--color-quarter)\" } : null}></i>\n                <input onChange={(e) => {\n                  setName(e.target.value)\n                  if (e.target.value === \"\") {\n                    changeIsCorrect(4, false);\n                  } else {\n                    changeIsCorrect(4, true);\n                  }\n                }\n                } value={name} type=\"text\" placeholder=\"이름\" />\n              </div>\n              <div className=\"submitbox\" >\n                <button onClick={() => {\n                  if (isCorrect[5] === true && isCorrect[0] === true && isCorrect[4] === true) findPassword()\n                  else alert(\"올바른 입력 값을 입력해주세요 :(\")\n                }} type=\"button\" className=\"SignInBtn\">확인</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/') }}>로그인</button><button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/signUp') }}>회원가입</button>\n            </div>\n          </div>\n        </Route >\n\n        <Route exact path=\"/giraffe-admin\">\n          {\n            console.log(\"ko\")\n          }\n          {\n            console.log(position)\n          }\n          <div className=\"right-panel\">\n            <form className=\"userForm\">\n              <h3 className=\"accessTitle\" ><img src={logoImgPath} alt=\"logo\" width={\"40px\"} height={\"40px\"} />관리자 로그인</h3>\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input id=\"inputEmail\" onChange={(e) => { setEmail(e.target.value) }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") { login() }\n                  }}\n                  value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-key\"></i>\n                <input onChange={(e) => { setPassword(e.target.value) }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") { login() }\n                  }}\n                  value={password} type=\"password\" placeholder=\"비밀번호\" />\n              </div>\n\n              <div className=\"submitbox\" >\n                <button type=\"button\" onClick={() => { reset(); setPosition(\"admin\"); login(); }} value=\"Login\" className=\"SignInBtn\">로그인</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { setPosition(\"student\"); reset(); history.push('/') }}>메인페이지</button>\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/\">\n          <div className=\"right-panel\">\n            <form className=\"userForm\">\n              <div id=\"nav\" >\n                <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={() => { setPosition(\"student\"); reset(); }}>학생</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"link-2\" onClick={() => { setPosition(\"president\"); reset(); }}>학생회장</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </div>\n              <h3 className=\"accessTitle\" ><img src={logoImgPath} alt=\"logo\" width={\"40px\"} height={\"40px\"} />PKSCL</h3>\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input id=\"inputEmail\" onChange={(e) => { setEmail(e.target.value) }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") { login() }\n                  }}\n                  value={email} type=\"text\" placeholder=\"학교 이메일 @pukyong.ac.kr\" />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-key\"></i>\n                <input onChange={(e) => { setPassword(e.target.value) }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") { login() }\n                  }}\n                  value={password} type=\"password\" placeholder=\"비밀번호\" />\n              </div>\n\n              <div className=\"submitbox\" >\n                <button type=\"button\" onClick={() => { reset(); login() }} value=\"Login\" className=\"SignInBtn\">로그인</button>\n              </div>\n            </form>\n            <div className='moveSignPage'>\n              <button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/newpwd') }}>비밀번호 찾기</button><button style={{ boxShadow: \"0 0 0 0 white\" }} onClick={() => { reset(); history.push('/signUp'); }}>회원가입</button>\n            </div>\n          </div>\n\n        </Route>\n\n      </Switch >\n    </div >\n\n\n\n\n\n  )\n}\n\nexport default AccessPage;","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js",["70","71","72","73","74"],"import { useEffect, useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport './css/ManagementPage.css';\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport CertFile from './CertFile';\n\nfunction ManagementPage(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    let 임시리스트 = {\n        waiting:\n            [{\n                \"major\": \"학과1\",\n                \"email\": \"aaaaa@naver.com\",\n                \"stdID\": \"111111111\",\n                \"name\": \"이름1\",\n                \"phoneNumber\": \"01011111111\",\n                \"studentImgPath\": \"/img/time.png\",\n            },\n            {\n                \"major\": \"학과2\",\n                \"email\": \"bbbbb@naver.com\",\n                \"stdID\": \"22222222\",\n                \"name\": \"이름2\",\n                \"phoneNumber\": \"01022222222\",\n                \"studentImgPath\": \"/img/time.png\",\n            },\n            {\n                \"major\": \"학과3\",\n                \"email\": \"ccccc@naver.com\",\n                \"stdID\": \"333333\",\n                \"name\": \"이름3\",\n                \"phoneNumber\": \"010333333\",\n                \"studentImgPath\": \"/img/time.png\",\n            }],\n        refusal: [],\n        approval: [{\n            \"major\": \"학과4\",\n            \"email\": \"dddd@naver.com\",\n            \"stdID\": \"444444\",\n            \"name\": \"이름4\",\n            \"phoneNumber\": \"010444444\",\n            \"studentImgPath\": \"/img/time.png\",\n        }, {\n            \"major\": \"학과5\",\n            \"email\": \"eeee@naver.com\",\n            \"stdID\": \"555555\",\n            \"name\": \"이름5\",\n            \"phoneNumber\": \"010555555\",\n            \"studentImgPath\": \"/img/time.png\",\n        }, {\n            \"major\": \"학과6\",\n            \"email\": \"ffff@naver.com\",\n            \"stdID\": \"666666\",\n            \"name\": \"이름6\",\n            \"phoneNumber\": \"010666666\",\n            \"studentImgPath\": \"/img/time.png\",\n        }],\n    }\n\n    const history = useHistory();\n    const [waiting, setWaiting] = useState([]);\n    const [refusal, setRefusal] = useState([]);\n    const [approval, setApproval] = useState([]);\n\n    const [leftTable, setLeftTable] = useState([...waiting]);\n    const [rightTable, setRightTable] = useState([...approval]);\n\n    const [leftCheckedList, setLeftCheckedList] = useState([]);\n    const [rightCheckedList, setRightCheckedList] = useState([]);\n\n    const [searchStudent, setSearchStudent] = useState(\"\");\n    const [searchButton, setSearchButton] = useState(\"search\");\n    const [certFile, setCertFile] = useState(false);\n    const [certFileStudnet, setCertFileStudnet] = useState();\n\n    const changeHandler = (checked, studentInfo, setCheckedList, checkedList) => {\n        if (checked) {\n            setCheckedList([...checkedList, studentInfo]);\n        } else {\n            setCheckedList(checkedList.filter((e) => e !== studentInfo));\n        }\n        console.log(checked)\n    };\n\n    function patchStudent(studentStatus) {\n        let payload;\n        if (studentStatus === \"approval\" || studentStatus === \"refusal\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": leftCheckedList\n            };\n        } else if (studentStatus === \"delegating\" || studentStatus === \"waiting\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": rightCheckedList\n            };\n        } else {\n            alert(\"error!\");\n        }\n        console.log(\"patch\")\n        console.log(leftCheckedList)\n        console.log(rightCheckedList)\n        if (props.loginPosition === \"president\") {\n            axios.patch(debugAPIURL + '/student-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학생 전송에 실패했습니다 :)\")\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.patch(debugAPIURL + '/president-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학과 전송에 실패했습니다 :)\")\n                });\n        }\n    }\n\n\n    useEffect(() => {\n        getList();\n    }, []);\n\n    function getList() {\n        if (props.loginPosition === \"president\") {\n            axios.get(debugAPIURL + '/student-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학생리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.get(debugAPIURL + '/president-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학과리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        }\n    }\n\n    function pressSearchStudent() {\n        if (searchButton === \"x\") {\n            setSearchStudent(\"\");\n            setSearchButton(\"search\");\n            setLeftTable([...waiting]);\n            setRightTable([...approval]);\n        } else {\n            if (searchStudent === \"\") {\n                alert(\"검색명을 입력해주세요 :)\");\n            } else {\n                setSearchButton(\"x\");\n\n                let left = waiting.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n                let right = approval.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n\n                setLeftTable(left);\n                setRightTable(right);\n            }\n\n        }\n    }\n\n    return (\n        <div className=\"ManagementPageContainer\">\n            {\n                certFile === true\n                    ? (<CertFile certFileStudnet={certFileStudnet} setCertFile={setCertFile}></CertFile>)\n                    : null\n            }\n            {\n                props.loginPosition === \"student\"\n                    ? <div>잘못된 접근입니다.</div>\n                    : (\n                        <>\n                            <div className=\"pageContainer\">\n                                <Navbar expand=\"lg\" style={{ padding: \"30px 0\" }}>\n                                    <Container fluid style={{ justifyContent: \"center\", backgroundColor: \"none\" }}>\n                                        <h2 style={{ margin: \"0\" }}>학생승인 현황</h2>\n                                        <div className=\"searchBar\" >\n                                            <input onChange={(e) => {\n                                                setSearchStudent(e.target.value);\n                                                setSearchButton(\"search\");\n                                                if (e.target.value === \"\") {\n                                                    setSearchButton(\"search\");\n                                                    setLeftTable([...waiting]);\n                                                    setRightTable([...approval]);\n                                                }\n                                            }}\n                                                onKeyPress={(e) => {\n                                                    if (e.key === \"Enter\") {\n                                                        pressSearchStudent()\n                                                    }\n                                                }}\n                                                name=\"q\" value={searchStudent} type=\"search\" placeholder=\"Search\" ></input>\n\n                                            <button onClick={() => {\n                                                pressSearchStudent()\n                                            }}\n                                                className='searchButton' type='button'>\n                                                {\n                                                    searchButton === \"search\"\n                                                        ? <i className=\"fas fa-search\"></i>\n                                                        : <i className=\"fas fa-times\"></i>\n                                                }\n                                            </button>\n                                        </div>\n                                    </Container>\n                                </Navbar>\n                                <div className='tables'>\n                                    <div className=\"tableSet\" >\n                                        <div className=\"buttons\">\n                                            <button className='submitButton' onClick={() => {\n                                                if (leftCheckedList.length === 0) {\n                                                    alert(\"승인할 학생을 1명 이상 선택하세요 :)\")\n                                                } else {\n                                                    patchStudent(\"approval\");\n                                                }\n                                                setLeftCheckedList([]);\n                                            }}>승인</button>\n                                            <button className='submitButton' onClick={() => {\n                                                console.log(\"거절\")\n                                                setLeftCheckedList([]);\n                                                if (leftCheckedList.length > 0) {\n                                                    patchStudent(\"refusal\");\n                                                } else {\n                                                    alert(\"거절할 학생을 1명 이상 선택하세요 :)\")\n                                                }\n                                            }}>거절</button>\n                                        </div>\n                                        <table >\n                                            <thead>\n                                                <tr >\n                                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인대기</th>\n                                                </tr>\n                                            </thead>\n                                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                    {\n                                                        leftTable.length === 0\n                                                            ? <tr>\n                                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                                            </tr>\n                                                            : leftTable.map((student, i) => {\n                                                                return (\n                                                                    <tr key={i}>\n                                                                        {\n                                                                            props.loginPosition === \"president\"\n                                                                                ? (<><td>{student.stdID}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                        setCertFileStudnet(student);\n                                                                                        setCertFile(true);\n                                                                                    }}>학생증</button></td>\n                                                                                    <td ><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                                                        }}\n                                                                                        checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                                : (<><tr>\n                                                                                    <td>{student.major}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td>{student.stdID}</td>\n                                                                                </tr><tr>\n                                                                                        <td>{student.phoneNumber}</td>\n                                                                                        <td>{student.email}</td>\n                                                                                        <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                            setCertFileStudnet(student);\n                                                                                            setCertFile(true);\n                                                                                        }}>학생증</button></td>\n                                                                                    </tr>\n                                                                                    <td style={{ width: \"100px\" }}><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                                                        }}\n                                                                                        checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                        }\n\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                    }\n                                                </tbody>\n                                            </div>\n                                        </table>\n                                    </div>\n\n                                    <div className='tableSet'>\n                                        <div className=\"buttons\">\n                                            {\n                                                props.loginPosition === \"president\"\n                                                    ? (<button className='submitButton' style={{ width: \"110px\" }} onClick={() => {\n                                                        if (rightCheckedList.length === 1) {\n                                                            setRightCheckedList([]);\n                                                            patchStudent(\"delegating\");\n                                                        } else {\n                                                            alert(\"학생회장 위임은 한명만 가능합니다.\");\n                                                        }\n                                                    }}>회장권한위임</button>)\n                                                    : null\n                                            }\n                                            <button className='submitButton' onClick={() => {\n                                                setRightCheckedList([]);\n                                                if (rightCheckedList.length > 0) {\n                                                    patchStudent(\"waiting\");\n                                                }\n                                            }}\n                                            >대기</button>\n                                        </div>\n                                        <table>\n                                            <thead>\n                                                <tr>\n                                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인완료</th>\n                                                </tr>\n                                            </thead>\n                                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                    {\n                                                        rightTable.length === 0\n                                                            ? <tr>\n                                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                                            </tr>\n                                                            : rightTable.map((student, i) => {\n                                                                return (\n                                                                    <tr key={i}>\n                                                                        {\n                                                                            props.loginPosition === \"president\"\n                                                                                ? (<><td>{student.stdID}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                        setCertFile(true);\n                                                                                    }}>학생증</button></td>\n                                                                                    <td ><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                                                        }}\n                                                                                        checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                                : (<><tr>\n                                                                                    <td>{student.major}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td>{student.stdID}</td>\n                                                                                </tr><tr>\n                                                                                        <td>{student.phoneNumber}</td>\n                                                                                        <td>{student.email}</td>\n                                                                                        <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                            setCertFile(true);\n                                                                                        }}>학생증</button></td>\n                                                                                    </tr>\n                                                                                    <td style={{ width: \"100px\" }}><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                                                        }}\n                                                                                        checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                        }\n\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                    }\n                                                </tbody>\n                                            </div>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"managementPageBar\">\n                                <i className=\"fas fa-chevron-left\" onClick={() => {\n                                    if (props.loginPosition === \"admin\") {\n                                        history.push('/main')\n                                    } else if (props.loginPosition === \"president\") {\n                                        history.push('/edit-main')\n                                    }\n                                }}></i>\n                            </div>\n                        </>)}\n        </div>\n\n\n    )\n}\n\nexport default ManagementPage;","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js",["75","76","77","78","79","80","81"],"import majorlogo from './img/majorlogo.png';\nimport quarter1 from './img/quarter1.png';\nimport quarter2 from './img/quarter2.png';\nimport quarter3 from './img/quarter3.png';\nimport quarter4 from './img/quarter4.png';\n\nimport giraffe from './img/giraffe.png';\nimport EditProfile from './EditProfile';\nimport './css/MainPage.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction MainPage(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    const history = useHistory();\n\n    let answer = {\n        \"studentPresident\": { \"major\": \"영어영문학부\", \"name\": \"한준규\", \"phoneNumber\": \"010-3340-6496\", \"email\": \"hellllo3627@pukyong.ac.kr\", \"majorLogo\": null },\n        \"quarter\": {\n            \"quarter1\": {\n                \"status\": \"true\",\n                \"eventList\": [\n                    {\n                        \"eventNumber\": \"12\",\n                        \"eventTitle\": \"학과 OT2\",\n                        \"eventContext\": \"학과 OT를 잘 마무리 하였습니다.\",\n                        \"receiptList\": [{ \"receiptNumber\": \"9\", \"receiptTitle\": \"학과 OT2 영수증 1번\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"학과 OT2 영수증 1번입니다. \", \"receiptDetailList\": [{ \"context\": \"참이슬\", \"price\": \"1000\", \"amount\": \"2\", \"totalAmount\": \"2000\" }, { \"context\": \"참이슬\", \"price\": \"1000\", \"amount\": \"2\", \"totalAmount\": \"2000\" }, { \"context\": \"참이슬\", \"price\": \"1000\", \"amount\": \"2\", \"totalAmount\": \"2000\" }, { \"context\": \"프라이팬\", \"price\": \"2000\", \"amount\": \"5\", \"totalAmount\": \"10000\" }, { \"context\": \"돈까스\", \"price\": \"2500\", \"amount\": \"6\", \"totalAmount\": \"15000\" }] }, { \"receiptNumber\": \"10\", \"receiptTitle\": \"학과 OT2 영수증 1번\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"학과 OT2 영수증 1번입니다. \", \"receiptDetailList\": [{ \"context\": \"대선\", \"price\": \"1500\", \"amount\": \"1\", \"totalAmount\": \"1500\" }, { \"context\": \"갈비\", \"price\": \"2500\", \"amount\": \"4\", \"totalAmount\": \"10000\" }, { \"context\": \"참이슬\", \"price\": \"3500\", \"amount\": \"1\", \"totalAmount\": \"3500\" }, { \"context\": \"초콜렛\", \"price\": \"5000\", \"amount\": \"2\", \"totalAmount\": \"10000\" }, { \"context\": \"연필\", \"price\": \"2000\", \"amount\": \"2\", \"totalAmount\": \"4000\" }] }]\n                    },\n                    { \"eventNumber\": \"13\", \"eventTitle\": \"학과 새내기배움터 진행\", \"eventContext\": \"학과 새내기배움터를 진행하였고 이상없이 마무리 하였습니다.\", \"receiptList\": [{ \"receiptNumber\": \"11\", \"receiptTitle\": \"학과 새내기배움터 진행 영수증 1\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"학과 새내기배움터 진행 영수증1\", \"receiptDetailList\": [{ \"context\": \"갈비\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"콜라\", \"price\": \"2731\", \"amount\": \"3\", \"totalAmount\": \"8193\" }, { \"context\": \"바구니\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }, { \"context\": \"참이슬\", \"price\": \"2731\", \"amount\": \"5\", \"totalAmount\": \"13655\" }] }, { \"receiptNumber\": \"12\", \"receiptTitle\": \"학과 새내기배움터 진행 영수증 1\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"학과 새내기배움터 진행 영수증1\", \"receiptDetailList\": [{ \"context\": \"휴지\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"컵\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }, { \"context\": \"바구니\", \"price\": \"2731\", \"amount\": \"3\", \"totalAmount\": \"8193\" }, { \"context\": \"이어폰\", \"price\": \"2731\", \"amount\": \"5\", \"totalAmount\": \"13655\" }] }] },\n                    { \"eventNumber\": \"14\", \"eventTitle\": \"빛 축제\", \"eventContext\": \"빛 축제를 진행하였습니다. 해당 영수증은 아래와 같습니다.\", \"receiptList\": [{ \"receiptNumber\": \"13\", \"receiptTitle\": \"빛 축제 영수증 1\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"빛 축제 영수증 1 영수증입니다.\", \"receiptDetailList\": [{ \"context\": \"휴지\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"과자\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }] }, { \"receiptNumber\": \"14\", \"receiptTitle\": \"빛 축제 영수증 1\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"빛 축제 영수증 1 영수증입니다.\", \"receiptDetailList\": [{ \"context\": \"프라이팬\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }, { \"context\": \"휴지\", \"price\": \"2731\", \"amount\": \"4\", \"totalAmount\": \"10924\" }, { \"context\": \"참이슬\", \"price\": \"2731\", \"amount\": \"4\", \"totalAmount\": \"10924\" }] }] }]\n            },\n            \"quarter2\": {\n                \"status\": \"true\",\n                \"eventList\": [\n                    {\n                        \"eventNumber\": \"18\", \"eventTitle\": \"기말고사 응원전\", \"eventContext\": \"기말고사 응원전을 진행하였습니다.\",\n                        \"receiptList\": [\n                            {\n                                \"receiptNumber\": \"19\",\n                                \"receiptTitle\": \"기말고사 응원전 영수증 1번\",\n                                \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" },\n                                \"receiptContext\": \"\",\n                                \"receiptDetailList\": []\n                            }, {\n                                \"receiptNumber\": \"19\",\n                                \"receiptTitle\": \"기말고사 응원전 영수증 1번\",\n                                \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" },\n                                \"receiptContext\": \"기말고사 응원전 영수증 1번\",\n                                \"receiptDetailList\": [{ \"context\": \"휴지\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"프라이팬\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" },\n                                ]\n                            }]\n                    },\n                    { \"eventNumber\": \"19\", \"eventTitle\": \"기말고사 응원전2\", \"eventContext\": \"학생회비가 남게되어 기말고사응원전을 한번 더 진행하였습니다.\", \"receiptList\": [{ \"receiptNumber\": \"20\", \"receiptTitle\": \"기말고사 응원전 재영수증 1번\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"기말고사 응원전 재영수증 1번\", \"receiptDetailList\": [{ \"context\": \"돈까스\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"프라이팬\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }] }] }]\n            },\n            \"quarter3\": {\n                \"status\": \"false\",\n                \"eventList\": [\n                    { \"eventNumber\": \"20\", \"eventTitle\": \"공개일 X\", \"eventContext\": \"데이터 O\", \"receiptList\": [{ \"receiptNumber\": \"21\", \"receiptTitle\": \"데이터 O\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"데이터 O\", \"receiptDetailList\": [{ \"context\": \"갈비\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }, { \"context\": \"연필\", \"price\": \"2731\", \"amount\": \"3\", \"totalAmount\": \"8193\" }] }] },\n                    { \"eventNumber\": \"21\", \"eventTitle\": \"공개일 X\", \"eventContext\": \"데이터 O\", \"receiptList\": [{ \"receiptNumber\": \"22\", \"receiptTitle\": \"데이터 O\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"데이터 O\", \"receiptDetailList\": [{ \"context\": \"프라이팬\", \"price\": \"2731\", \"amount\": \"4\", \"totalAmount\": \"10924\" }, { \"context\": \"갈비\", \"price\": \"2731\", \"amount\": \"5\", \"totalAmount\": \"13655\" }] }] }]\n            },\n            \"quarter4\": {\n                \"status\": \"false\",\n                \"eventList\": [\n                    { \"eventNumber\": \"22\", \"eventTitle\": \"공개일 X\", \"eventContext\": \"데이터 O\", \"receiptList\": [{ \"receiptNumber\": \"23\", \"receiptTitle\": \"데이터 O\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"데이터 O\", \"receiptDetailList\": [{ \"context\": \"바구니\", \"price\": \"2731\", \"amount\": \"1\", \"totalAmount\": \"2731\" }, { \"context\": \"대선\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }] }] },\n                    { \"eventNumber\": \"23\", \"eventTitle\": \"공개일 X\", \"eventContext\": \"데이터 O\", \"receiptList\": [{ \"receiptNumber\": \"24\", \"receiptTitle\": \"데이터 O\", \"receiptImg\": { \"name\": \"./static/receiptImg/test2.png\" }, \"receiptContext\": \"데이터 O\", \"receiptDetailList\": [{ \"context\": \"바구니\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }, { \"context\": \"과자\", \"price\": \"2731\", \"amount\": \"2\", \"totalAmount\": \"5462\" }] }] }]\n            }\n        }\n    }\n\n\n    let answerDate = {\n        \"quarter1\": [\"2022-01-01\", \"2022-01-02\"],\n        \"quarter2\": [\"2022-01-03\", \"2022-01-04\"],\n        \"quarter3\": [\"2022-01-05\", \"2022-01-06\"],\n        \"quarter4\": [\"2022-01-07\", \"2022-01-08\"]\n    }\n\n    let answerMajorList = { \"majorList\": [\"기린학과\", \"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학부\", \"법학과\", \"행정학과\", \"국제지역학부\", \"중국학과\", \"신문방송학과\", \"정치외교학과\", \"유아교육과\", \"시각디자인학과\", \"공업디자인학과\", \"패션디자인학과\", \"경영학부\", \"국제통상학부\", \"응용수학과\", \"통계학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"해양스포츠학과\", \"간호학과\", \"과학시스템시뮬레이션학과\", \"건축공학과\", \"건축학과\", \"소방공학과\", \"시스템경영공학부\", \"IT융합응용공학과\", \"안전공학과\", \"융합디스플레이공학과\", \"의공학과\", \"전기공학과\", \"전자공학과\", \"정보통신공학과\", \"제어계측공학과\", \"조선해양시스템공학과\", \"컴퓨터공학과\", \"토목공학과\", \"고분자공학과\", \"공업화학과\", \"금속공학과\", \"기계공학과\", \"기계설계공학과\", \"기계시스템공학과\", \"냉동공조공학과\", \"신소재시스템공학과\", \"인쇄정보공학과\", \"재료공학과\", \"화학공학과\", \"지속가능공학부\", \"식품공학과\", \"해양바이오신소재학과\", \"해양생산시스템관리학부\", \"해양수산경영학과\", \"수해양산업교육과\", \"자원생물학과\", \"식품영양학과\", \"생물공학과\", \"수산생명의학과\", \"환경공학과\", \"해양공학과\", \"해양학과\", \"지구환경과학과\", \"환경대기과학과\", \"에너지자원공학과\", \"공간정보시스템공학과\", \"생태공학과\", \"데이터정보과학부(빅데이터융합전공)\", \"데이터정보과학부(통계·데이터사이언스전공)\", \"미디어커뮤니케이션학부(언론정보전공)\", \"미디어커뮤니케이션학부(휴먼ICT융합전공)\", \"스마트헬스케어학부(의공학전공)\", \"스마트헬스케어학부(해양스포츠전공)\", \"스마트헬스케어학부(휴먼바이오융합전공)\", \"전자정보통신공학부(전자공학전공)\", \"전자정보통신공학부(정보통신공학전공)\", \"조형학부(건축학전공)\", \"조형학부(공업디자인전공)\", \"조형학부(시각디자인전공)\", \"컴퓨터공학부(소프트웨어·인공지능전공)\", \"컴퓨터공학부(컴퓨터공학전공)\", \"평생교육·상담학과\", \"기계조선융합공학과\", \"전기전자소프트웨어공학과\", \"공공안전경찰학과\"] }\n\n    const [studentPresident, setStudentPresident] = useState();\n\n    const [quarter, setQuarter] = useState();\n    const [quarterDate, setQuarterDate] = useState();\n\n    const [eventAmount, setEventAmount] = useState([]);\n    const [quarterAmount, setQuarterAmount] = useState(0);\n    const [currentQuarter, setCurrentQuarter] = useState(props.todayQuarter);\n    const [showAllReceiptButton, setShowAllReceiptButton] = useState([]);\n    const [editProfileState, setEditProfileState] = useState(false);\n\n    const [major, setMajor] = useState();\n    const [majorList, setMajorList] = useState();\n\n    const [searchButton, setSearchButton] = useState(\"search\");\n\n    const [chatbot, setChatbot] = useState(true);\n\n    function resetShowAllReceiptButton() {\n        let resetArray = [];\n        if (quarter[currentQuarter][\"eventList\"] !== undefined) {\n            for (let i = 0; i < quarter[currentQuarter][\"eventList\"].length; i++) {\n                resetArray.push(true)\n            }\n        }\n        setShowAllReceiptButton(resetArray)\n    }\n\n    function reset(quarterData) {\n        if (quarter !== undefined && quarter[quarterData][\"eventList\"] !== undefined) {\n            CalculateCurrentQuarterReceiptSumList(quarter[quarterData][\"eventList\"]);\n            resetShowAllReceiptButton();\n        }\n        window.scrollTo(0, 0);\n    }\n\n    function showQuarter(selectedQuarter) {\n        if (props.loginPosition === \"student\" || props.loginPosition === \"president\") {\n            if (quarter[selectedQuarter][\"status\"] === \"true\") {\n                setCurrentQuarter(selectedQuarter);\n                defineColor(selectedQuarter);\n            } else {\n                alert(\"현재 공개된 장부가 아닙니다 :)\")\n            }\n        } else {\n            setCurrentQuarter(selectedQuarter);\n            defineColor(selectedQuarter);\n        }\n    }\n\n    function pksclSubmitButton() {\n        alert(\"API..\")\n    }\n\n    function sumItems(price, amount) {\n        return price * amount;\n    }\n\n    function sumReceipt(receiptDetailList) {\n        let sumReceiptValue = 0;\n        if (receiptDetailList !== undefined) {\n            for (let i = 0; i < receiptDetailList.length; i++) {\n                let item = receiptDetailList[i];\n                sumReceiptValue = sumReceiptValue + sumItems(item[\"price\"], item[\"amount\"]);\n            }\n        }\n        return sumReceiptValue;\n    }\n\n    function sumEvent(receiptList) {\n        let sumEventValue = 0;\n        for (let i = 0; i < receiptList.length; i++) {\n            let receipt = receiptList[i][\"receiptDetailList\"];\n            sumEventValue = sumEventValue + sumReceipt(receipt);\n        }\n        return sumEventValue\n    }\n\n    function CalculateCurrentQuarterReceiptSumList(eventList) {\n\n        if (eventList === undefined) {\n            setQuarterAmount(0);\n        } else {\n            let eventSum = [];\n            for (let i = 0; i < eventList.length; i++) {\n                eventSum.push(sumEvent(eventList[i][\"receiptList\"]));\n            }\n            setEventAmount([...eventSum]);\n\n            let quarterSum = 0;\n            for (let i = 0; i < eventSum.length; i++) {\n                quarterSum = quarterSum + eventSum[i];\n            }\n            setQuarterAmount(quarterSum);\n        }\n    }\n\n    function setColorProperty(colorQuarter, colorQuarterCircle, colorLeftPanel, colorCard, colorBackground) {\n        document.documentElement.style.setProperty(\"--color-quarter\", colorQuarter);\n        document.documentElement.style.setProperty(\"--color-quarterCircle\", colorQuarterCircle);\n        document.documentElement.style.setProperty(\"--color-leftPanel\", colorLeftPanel);\n        document.documentElement.style.setProperty(\"--color-card\", colorCard);\n        document.documentElement.style.setProperty(\"--color-background\", colorBackground);\n    }\n\n    function defineColor(quarter) {\n        if (quarter === \"quarter1\") {\n            setColorProperty(\"#db8f8e\", \"#efbebc\", \"#f5dede\", \"#fff5ed\", \"#fbf6f6\");\n        } else if (quarter === \"quarter2\") {\n            setColorProperty(\"#649d67\", \"#cedbcf\", \"#cedbcf\", \"#dee7df\", \"#f6f7f6\");\n        } else if (quarter === \"quarter3\") {\n            setColorProperty(\"#c18356\", \"#efdccd\", \"#e9d8cd\", \"#fff5ed\", \"#fff5ee\");\n        } else if (quarter === \"quarter4\") {\n            setColorProperty(\"#6b8396\", \"#d0dbe5\", \"#d0dbe5\", \"#e6f1fb\", \"#f5faff\");\n        }\n    }\n\n    function logout() {\n        axios.post(debugAPIURL + '/logout')\n            .then((payload) => {\n                history.push('/');\n            }).catch((error) => {\n                console.log(\"error: \" + error.response.status);\n                // 빼기\n                history.push('/');\n            })\n    }\n\n    function adminButton() {\n        if (majorList === undefined) {\n            return;\n        } else {\n            return (<>\n                <div className=\"mainSearchBar\" >\n                    <input className=\"majorList\"\n                        type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder=\"학과를 입력하세요.\"\n                        onChange={(e) => {\n                            setMajor(e.target.value);\n                            ;\n                        }}\n                        style={{ width: \"250px\" }}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                adminGetLedger(major);\n                            }\n                        }}\n                        value={major}\n                    >\n                    </input>\n                    <datalist id=\"majorList-options\" >\n                        {\n                            majorList.map((majorName, i) => {\n                                if (i !== 0) {\n                                    return (\n                                        <option value={majorName} key={i} ></option>\n                                    )\n                                }\n                            })\n                        }\n                    </datalist>\n                    <button style={{ boxShadow: \"0 0 0 white\" }} onClick={() => {\n                        adminGetLedger(major);\n                    }}> {\n                            searchButton === \"search\"\n                                ? <i className=\"fas fa-search\"></i>\n                                : <i className=\"fas fa-times\"></i>\n                        }</button>\n                </div>\n            </>\n            )\n        }\n    }\n\n    function adminGetLedger(ledgerMajor) {\n        if (searchButton === \"x\") {\n            setMajor(\"\");\n            setSearchButton(\"search\");\n        } else {\n            if (major === \"\") {\n                alert(\"검색명을 입력해주세요 :)\");\n            } else if ((majorList.includes(ledgerMajor))) {\n                let findMajorIndex = majorList.indexOf(ledgerMajor) + 1\n                getAdminLedger(findMajorIndex);\n                adminGetDate(findMajorIndex);\n                setMajor(\"\");\n                setSearchButton(\"search\");\n            } else {\n                alert(\"해당하는 학과가 없습니다 다시 검색해주세요:)\");\n            }\n        }\n    }\n\n    function getAdminLedger(findMajorIndex) {\n        axios.get(debugAPIURL + `/ledger/admin?${findMajorIndex}`)\n            .then((payload) => {\n                setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                setQuarter({ ...payload.data[\"quarter\"] });\n                reset(props.todayQuarter);\n                showQuarter(props.todayQuarter);\n                setChatbot(false);\n            })\n            .catch((error) => {\n                if (major === undefined) {\n                    alert(`컴퓨터공학과 장부를 불러올 수 없습니다.`);\n                } else {\n                    alert(`${major} 장부를 불러올 수 없습니다.`);\n                }\n                //지우기\n                setStudentPresident({ ...answer[\"studentPresident\"] });\n                setQuarter({ ...answer[\"quarter\"] });\n                reset(props.todayQuarter);\n                showQuarter(props.todayQuarter);\n            })\n\n    }\n\n    function adminGetDate(findMajorIndex) {\n        axios.get(debugAPIURL + `/ledger-date?${findMajorIndex}`)\n            .then((payload) => {\n                setQuarterDate({ ...payload.data });\n                showQuarter(props.todayQuarter);\n            })\n            .catch((error) => {\n                if (major === undefined) {\n                    alert(`컴퓨터공학과의 장부 open, close 날짜를 불러올 수 없습니다.`);\n                } else {\n                    alert(`${major}의 장부 open, close 날짜를 불러올 수 없습니다.`);\n                }\n                setQuarterDate({ ...answerDate });\n                showQuarter(props.todayQuarter);\n            })\n    }\n\n    function getExPKSCL() {\n        axios.get(debugAPIURL + '/0')\n            .then((payload) => {\n                setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                setQuarter({ ...payload.data[\"quarter\"] });\n                // reset(props.todayQuarter);\n                // defineColor(props.todayQuarter);\n            })\n            .catch((error) => {\n                alert(\"임시 장부를 불러올 수 없습니다.\");\n            })\n    }\n\n    useEffect(() => {\n        if (props.loginPosition === \"admin\") {\n            let ledgerMajor;\n            axios.get(debugAPIURL + '/major-list')\n                .then((payload) => {\n                    setMajorList([...payload.data[\"majorList\"]]);\n                    if (major === undefined) {\n                        let ledgerMajorList = [...payload.data[\"majorList\"]];\n                        ledgerMajor = (ledgerMajorList.indexOf(\"컴퓨터공학과\") + 1);\n                        getAdminLedger(ledgerMajor);\n                        adminGetDate(ledgerMajor);\n                        defineColor(props.todayQuarter);\n                    } else {\n                        getAdminLedger(major);\n                        adminGetDate(major);\n                        defineColor(props.todayQuarter);\n                    }\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"장부를 불러올 수 없습니다.\");\n                    getExPKSCL();\n                    //지우기\n                    let ledgerMajorList = [...answerMajorList[\"majorList\"]];\n                    setMajorList(ledgerMajorList);\n                    if (major === undefined) {\n                        ledgerMajor = (ledgerMajorList.indexOf(\"컴퓨터공학과\") + 1);\n                        getAdminLedger(ledgerMajor);\n                        adminGetDate(ledgerMajor);\n                        defineColor(props.todayQuarter);\n                    } else {\n                        getAdminLedger(major);\n                        adminGetDate(major);\n                        defineColor(props.todayQuarter);\n                    }\n                })\n\n        } else if (props.loginPosition === \"president\") {\n            axios.get(debugAPIURL + '/ledger')\n                .then((payload) => {\n                    setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                    setQuarter({ ...payload.data[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"학과 장부를 불러올 수 없습니다.\");\n\n                    axios.get('/status')\n                        .then((payload) => {\n                            if (payload[\"status\"] === \"refusal\") {\n                                alert(\"사용자(학생회장)는 현재 거절 상태입니다. PKSCL 챗봇을 통해 회장 신청을 다시 진행해 주십시오.\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                            else if (payload[\"status\"] === \"waiting\") {\n                                alert(\"사용자(학생회장)는 현재 대기 상태입니다. PKSCL 챗봇을 통해 회장 인증을 해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                            else if (payload[\"status\"] === \"approval\") {\n                                alert(\"사용자(학생회장)는 현재 승인 상태입니다. PKSCL 챗봇으로 문제를 문의해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                        })\n                        .catch((error) => {\n                            alert(\"학생회장의 승인, 거절, 대기 상태를 확인할 수 없습니다. \")\n                        })\n                    getExPKSCL();\n                    //뒤에 삭제하기\n                    setStudentPresident({ ...answer[\"studentPresident\"] });\n                    setQuarter({ ...answer[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                })\n\n            reset(props.todayQuarter);\n            defineColor(props.todayQuarter);\n        } else if (props.loginPosition === \"student\") {\n            axios.get(debugAPIURL + '/ledger')\n                .then((payload) => {\n                    setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                    setQuarter({ ...payload.data[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"학과 장부를 불러올 수 없습니다.\");\n\n                    axios.get('/status')\n                        .then((payload) => {\n                            if (payload[\"status\"] === \"refusal\") {\n                                alert(\"사용자(학생)는 현재 거절 상태입니다. 프로필 편집 기능을 통해 본인 정보가 올바르게 기입되었는지 우선 확인하고, 바르게 입력되었을 경우엔 신청하신 학과의 학생회장에게 문의해 주세요 :)\");\n                            }\n                            else if (payload[\"status\"] === \"waiting\") alert(\"사용자(학생)는 현재 대기 상태입니다. 프로필 편집 기능을 통해 본인 정보가 올바르게 기입되었는지 우선 확인하고, 바르게 입력되었을 경우엔 신청하신 학과의 학생회장에게 문의해 주세요 :)\");\n                            else if (payload[\"status\"] === \"approval\") {\n                                alert(\"사용자(학생)는 현재 승인 상태입니다. PKSCL 챗봇으로 문제를 문의해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                        })\n                        .catch((error) => {\n                            alert(\"학생의 승인, 거절, 대기 상태를 확인할 수 없습니다. \")\n                        })\n                    getExPKSCL();\n                    //뒤에 삭제하기\n                    setStudentPresident({ ...answer[\"studentPresident\"] });\n                    setQuarter({ ...answer[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                })\n\n            reset(props.todayQuarter);\n            defineColor(props.todayQuarter);\n        }\n    }, []);\n\n\n    useEffect(() => {\n        // // console.log(document.getElementById(\"leftPanel\")[0].style.position);\n        // if (editProfileState) {\n        //     document.getElementsByClassName(\"leftPanel\")[0].setProperty(\"position\", \"none\");\n        // } else {\n\n        // }\n    }, [editProfileState])\n\n\n    useEffect(() => {\n        if (quarter !== undefined) {\n            reset(currentQuarter);\n        }\n\n    }, [currentQuarter])\n\n    useEffect(() => {\n        if (quarter !== undefined)\n            reset(props.todayQuarter);\n\n    }, [quarter])\n\n\n    return (\n        <div className=\"MainPageContainer\">\n            {\n                editProfileState\n                    ?\n                    // <EditProfile loginPosition={props.loginPosition} setEditProfileState={setEditProfileState}></EditProfile>\n                    <EditProfile editProfileState={editProfileState} loginPosition={\"student\"} setEditProfileState={setEditProfileState}></EditProfile>\n                    : null\n            }\n            {\n                quarter === undefined\n                    ? null\n                    : (<>\n                        <div className=\"leftPanel\" id='leftPanel'>\n                            <div className=\"majorCard\">\n                                <div className=\"presidentCard\">\n                                    <h2>{studentPresident[\"major\"]}</h2>\n                                    <p> 온라인 장부 입니다. </p>\n                                    <img src={studentPresident[\"majorLogo\"]} alt=\"majorLogo\" height={\"150\"} width={\"10\"} />\n                                    <h3>{studentPresident[\"name\"]}</h3>\n                                    <p>{studentPresident[\"phoneNumber\"]}</p>\n                                    <p>{studentPresident[\"email\"]}</p>\n                                </div>\n                                <div className=\"cogExplanation\">\n                                    안녕하세요 {studentPresident[\"major\"]} 회장 {studentPresident[\"name\"]}입니다.\n                                    PKCOG 온라인 장부를 통해 학과 장부를 분기별로 확인하세요 :)\n                                    장부 확인 중 문의 사항이 있으시다면 이메일로 연락주십시오.\n                                    <div style={{ color: \"#d32c2c\" }}>※ 학과의 장부를 외부로 유출 시 발생하는 문제의 책임은 학생 본인에게 있습니다.</div>\n                                </div>\n                            </div>\n                            <div className=\"quarter\">\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter1\") }}><div>1분기</div><img src={quarter1} alt=\"quarter1\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter2\") }}><div>2분기</div><img src={quarter2} alt=\"quarter2\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter3\") }}><div>3분기</div><img src={quarter3} alt=\"quarter3\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter4\") }}><div>4분기</div><img src={quarter4} alt=\"quarter4\" ></img></div>\n                            </div>\n                            {\n                                props.loginPosition === \"student\" || props.loginPosition === \"president\"\n                                    ? null\n                                    : (<div className=\"managementPageBar\">\n                                        <i className=\"fas fa-chevron-right\" onClick={() => { defineColor(props.todayQuarter); history.push('/manage') }}></i>\n                                    </div>)\n                            }\n                        </div>\n\n                        <div className=\"rightPanel\">\n\n                            <div className=\"nav\">\n                                <div className=\"buttons\">\n                                    {\n                                        quarterDate !== undefined\n                                            ? (props.loginPosition === \"admin\"\n                                                ? (<>\n                                                    <div className=\"dateInput\">{quarterDate[currentQuarter][0]}~{quarterDate[currentQuarter][1]}</div>\n                                                    {adminButton()}</>)\n                                                : null)\n                                            : null\n                                    }\n                                    {\n                                        props.loginPosition === \"president\"\n                                            ? (<><div style={{ color: \"red\" }}>현재 {studentPresident[\"major\"]} 학생들에게 공개된 장부 입니다. </div>\n                                                <button className='submitButton' style={{ width: \"130px\" }} type='button' onClick={() => { history.push('/edit-main') }}>장부 수정 페이지</button>\n                                            </>)\n                                            : (<><button className='submitButton' type='button' onClick={() => { setEditProfileState(true); }}>프로필 편집</button>\n                                                <button className='submitButton' type='button' onClick={() => { logout(); }}>로그아웃</button></>)\n                                    }\n\n                                </div>\n                            </div>\n                            {\n                                props.loginPosition === \"admin\" || quarter[currentQuarter][\"status\"] === \"true\"\n                                    ? (<>\n                                        <div className=\"quarterData\">\n                                            <h2 className=\"quarterTotalAmount\">\n                                                {currentQuarter[currentQuarter.length - 1]}분기 총 금액 : {quarterAmount}원\n                                            </h2>\n                                            {\n                                                quarter[currentQuarter][\"eventList\"] === undefined\n                                                    ? <div>입력된 행사가 없습니다.</div>\n                                                    : (quarter[currentQuarter][\"eventList\"].map((event, i) => {\n                                                        return (\n                                                            <div style={{display:\"flex\",alignItems: \"flex-end\"}}>\n                                                            <div className=\"eventCard\" >\n                                                                <div className=\"cardContent\">\n                                                                    <div className=\"eventSource\">\n                                                                        <div>\n                                                                            <h4 >{event[\"eventTitle\"]}</h4>  \n                                                                            <div style={{color:\"var(--color-quarter)\"}}>행사 총 금액 : {eventAmount[i]}원</div>\n                                                                            \n                                                                            <div>{event[\"eventContext\"]}  </div>\n                                                                        </div>\n                                                                        <div className=\"eventButtons\">\n                                                                            {\n                                                                                event.receiptList.length <= 1\n                                                                                    ? null\n                                                                                    : (\n                                                                                        showAllReceiptButton[i] === false\n                                                                                            ? (\n                                                                                                <button style={{width: \"50px\"}} onClick={() => {\n                                                                                                    let array = [...showAllReceiptButton];\n                                                                                                    array[i] = !showAllReceiptButton[i];\n                                                                                                    setShowAllReceiptButton(array)\n                                                                                                }}><i class=\"fas fa-angle-double-up\"></i></button>\n                                                                                            )\n                                                                                            : (\n                                                                                                <button style={{width: \"50px\"}} onClick={() => {\n                                                                                                    let array = [...showAllReceiptButton];\n                                                                                                    array[i] = !showAllReceiptButton[i];\n                                                                                                    setShowAllReceiptButton(array)\n                                                                                                }}><i class=\"fas fa-angle-double-down\"></i></button>\n                                                                                            )\n                                                                                    )\n\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n\n                                                                    {\n                                                                        showAllReceiptButton[i] === true\n                                                                            ? (<div id=\"receiptContent\" style={{ height: \"380px\", overflowY: \"hidden\" }}>\n\n                                                                                <div className=\"receiptCard\">\n                                                                                    <div className=\"receiptResource\">\n                                                                                        {\n                                                                                            event[\"receiptList\"].length === 0\n                                                                                                ? <div>입력된 영수증이 없습니다.</div>\n                                                                                                : (<>\n                                                                                                    <h5>{event[\"receiptList\"][0][\"receiptTitle\"]}</h5>\n                                                                                                        {\n                                                                                                            event[\"receiptList\"][0][\"receiptDetailList\"].length === 0\n                                                                                                                ? null\n                                                                                                                : (<div style={{color:\"var(--color-quarter)\"}}>1번째 영수증 금액 : {sumReceipt(event[\"receiptList\"][0][\"receiptDetailList\"])}원</div>)\n                                                                                                        }\n                                                                                                  \n\n                                                                                                    <div>{event[\"receiptList\"][0][\"receiptContext\"]}</div>\n\n\n\n                                                                                                    {\n                                                                                                        event[\"receiptList\"][0][\"receiptDetailList\"].length === 0\n                                                                                                            ? <div className=\"noneContext\"> 입력된 영수증 내역이 없습니다.</div>\n                                                                                                            : (<><table className=\"receiptTable\"><thead>\n                                                                                                                <tr>\n                                                                                                                    <th>품명</th>\n                                                                                                                    <th>단가</th>\n                                                                                                                    <th>수량</th>\n                                                                                                                    <th>가격</th>\n                                                                                                                </tr>\n                                                                                                            </thead>\n                                                                                                                <tbody>{event[\"receiptList\"][0][\"receiptDetailList\"].map((item, k) => {\n                                                                                                                    return (<tr>\n                                                                                                                        <td>{item[\"context\"]}</td>\n                                                                                                                        <td>{item[\"price\"]}</td>\n                                                                                                                        <td>{item[\"amount\"]}</td>\n                                                                                                                        <td>{sumItems(item[\"price\"], item[\"amount\"])}</td>\n                                                                                                                    </tr>)\n                                                                                                                })}\n                                                                                                                </tbody> </table></>)\n                                                                                                    }\n                                                                                                </>\n                                                                                                )\n                                                                                        }\n\n                                                                                    </div>\n                                                                                    {\n                                                                                        event[\"receiptList\"].length === 0\n                                                                                            ? null\n                                                                                            :\n                                                                                            <img src={event[\"receiptList\"][0][\"receiptImg\"]} style={{ backgroundColor: \"var(--color-leftPanel)\" }} alt={event[\"receiptList\"][0][\"receiptImg\"]} height={\"150\"} width={\"100\"} />\n                                                                                    }\n                                                                                </div>\n                                                                            </div>)\n                                                                            : (<div id=\"receiptContent\" >\n                                                                                {\n                                                                                    event[\"receiptList\"].map((receipt, j) => {\n                                                                                        return (\n                                                                                            <div className=\"receiptCard\">\n                                                                                                <div className=\"receiptResource\">\n                                                                                                    {\n                                                                                                        event[\"receiptList\"].length === 0\n                                                                                                            ? <div>입력된 영수증이 없습니다.</div>\n                                                                                                            : (<>\n                                                                                                                <h5>{receipt[\"receiptTitle\"]}</h5>\n                                                                                                                    {\n                                                                                                                        receipt[\"receiptDetailList\"].length === 0\n                                                                                                                            ? null\n                                                                                                                            : <div style={{color:\"var(--color-quarter)\"}}>{j + 1}번째 영수증 금액 : {sumReceipt(receipt[\"receiptDetailList\"])}원</div>\n                                                                                                                    }\n                                                                                                                <div>{receipt[\"receiptContext\"]}</div>\n                                                                                                                {\n                                                                                                                    receipt[\"receiptDetailList\"].length === 0\n                                                                                                                        ? <div>입력된 영수증 내역이 없습니다.</div>\n                                                                                                                        : (<>\n                                                                                                                            <table className=\"receiptTable\">\n                                                                                                                                <thead>\n                                                                                                                                    <tr>\n                                                                                                                                        <th>품명</th>\n                                                                                                                                        <th>단가</th>\n                                                                                                                                        <th>수량</th>\n                                                                                                                                        <th>가격</th>\n                                                                                                                                    </tr>\n                                                                                                                                </thead>\n                                                                                                                                <tbody>\n                                                                                                                                    {receipt[\"receiptDetailList\"].map((item, k) => {\n                                                                                                                                        return (<tr>\n                                                                                                                                            <td>{item[\"context\"]}</td>\n                                                                                                                                            <td>{item[\"price\"]}</td>\n                                                                                                                                            <td>{item[\"amount\"]}</td>\n                                                                                                                                            <td>{sumItems(item[\"price\"], item[\"amount\"])}</td>\n                                                                                                                                        </tr>)\n                                                                                                                                    })\n                                                                                                                                    }\n                                                                                                                                </tbody> </table>\n                                                                                                                        </>\n                                                                                                                        )\n                                                                                                                }\n\n                                                                                                            </>)}\n                                                                                                </div>\n                                                                                                {\n                                                                                                    event[\"receiptList\"].length === 0\n                                                                                                        ? null\n                                                                                                        : <img src={receipt[\"receiptImg\"]} alt={receipt[\"receiptImg\"]} style={{ backgroundColor: \"var(--color-leftPanel)\" }} height={\"150\"} width={\"100\"} />\n                                                                                                }\n                                                                                            </div>\n\n                                                                                        )\n                                                                                    })\n                                                                                }\n                                                                            </div>)\n\n                                                                    }\n\n\n                                                                </div>\n                                                      \n                                                            </div>\n                                                            {\n                                                               event.receiptList.length > 1 &&  showAllReceiptButton[i] === false\n                                                               ? <div><img src={giraffe} className=\"image\" alt=\"\" style={{width:\"70px\",height:\"70px\"}}/><div style={{marginBottom:\"50px\",textAlign:\"center\"}}>end</div></div>\n                                                               : null\n                                                            }\n                                                            </div>\n                                                        )\n                                                    })\n                                                    )\n                                            }\n                                            \n                                        </div>\n                                    </>)\n                                    : <div className=\"quarterData\" style={{ color: \"red\" }}>\n                                        {currentQuarter[currentQuarter.length - 1]}분기 장부는 학생회장이 아직 공개하지 않았습니다. <br />장부의 예시를 보고싶다면 아래 버튼을 눌러보시겡나?????\n                                    </div>\n                            }\n                        </div>\n                    </>\n                    )\n            }\n\n        </div>\n    )\n}\n\nexport default MainPage;","/Users/river2/Desktop/PKSCL/frontend/src/EditProfile.js",["82","83"],"import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './css/EditProfile.css'\nimport { useHistory } from 'react-router-dom';\n\nfunction EditProfile(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    const history = useHistory();\n    const modalRef = useRef();\n\n    const [boxState, setBoxState] = useState(\"profile\");\n    const [stdID, setStdID] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [certFile, setCertFile] = useState(\"\");\n    const [majorLogo, setMajorLogo] = useState(\"\");\n    const [isCorrect, setIsCorrect] = useState(\n        {\n            stdID: false,\n            major: false,\n            name: false,\n            phoneNumber: false,\n            email: false,\n            certFile: false,\n            majorLogo: false,\n            inputEmail: false,\n            inputPassword: false,\n            inputNewPassword: false,\n            inputCheckNewPassword: false,\n        }\n    );\n\n    const [editButtonState, setEditButtonState] = useState(false);\n\n    const [majorList, setMajorList] = useState(\n        [\n            \"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학부\", \"법학과\", \"행정학과\", \"국제지역학부\", \"중국학과\", \"신문방송학과\", \"정치외교학과\", \"유아교육과\", \"시각디자인학과\", \"공업디자인학과\", \"패션디자인학과\", \"경영학부\", \"국제통상학부\", \"응용수학과\", \"통계학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"해양스포츠학과\", \"간호학과\", \"과학시스템시뮬레이션학과\", \"건축공학과\", \"건축학과\", \"소방공학과\", \"시스템경영공학부\", \"IT융합응용공학과\", \"안전공학과\", \"융합디스플레이공학과\", \"의공학과\", \"전기공학과\", \"전자공학과\", \"정보통신공학과\", \"제어계측공학과\", \"조선해양시스템공학과\", \"컴퓨터공학과\", \"토목공학과\", \"고분자공학과\", \"공업화학과\", \"금속공학과\", \"기계공학과\", \"기계설계공학과\", \"기계시스템공학과\", \"냉동공조공학과\", \"신소재시스템공학과\", \"인쇄정보공학과\", \"재료공학과\", \"화학공학과\", \"지속가능공학부\", \"식품공학과\", \"해양바이오신소재학과\", \"해양생산시스템관리학부\", \"해양수산경영학과\", \"수해양산업교육과\", \"자원생물학과\", \"식품영양학과\", \"생물공학과\", \"수산생명의학과\", \"환경공학과\", \"해양공학과\", \"해양학과\", \"지구환경과학과\", \"환경대기과학과\", \"에너지자원공학과\", \"공간정보시스템공학과\", \"생태공학과\", \"데이터정보과학부(빅데이터융합전공)\", \"데이터정보과학부(통계·데이터사이언스전공)\", \"미디어커뮤니케이션학부(언론정보전공)\", \"미디어커뮤니케이션학부(휴먼ICT융합전공)\", \"스마트헬스케어학부(의공학전공)\", \"스마트헬스케어학부(해양스포츠전공)\", \"스마트헬스케어학부(휴먼바이오융합전공)\", \"전자정보통신공학부(전자공학전공)\", \"전자정보통신공학부(정보통신공학전공)\", \"조형학부(건축학전공)\", \"조형학부(공업디자인전공)\", \"조형학부(시각디자인전공)\", \"컴퓨터공학부(소프트웨어·인공지능전공)\", \"컴퓨터공학부(컴퓨터공학전공)\", \"평생교육·상담학과\", \"기계조선융합공학과\", \"전기전자소프트웨어공학과\", \"공공안전경찰학과\"\n        ]);\n\n    const [inputEmail, setInputEmail] = useState(\"\");\n    const [inputPassword, setInputPassword] = useState(\"\");\n\n    const [inputNewPassword, setInputNewPassword] = useState(\"\");\n    const [inputCheckNewPassword, setInputCheckNewPassword] = useState(\"\");\n\n    const [newPasswordButton, setNewPasswordButton] = useState(false);\n    const [userStatus, setUserStatus] = useState()\n\n\n    function changeIsCorrect(key, type) {\n        var temp = { ...isCorrect };\n        if (key === \"stdID\") temp.stdID = type;\n        else if (key === \"major\") temp.major = type;\n        else if (key === \"name\") temp.name = type;\n        else if (key === \"phoneNumber\") temp.phoneNumber = type;\n        else if (key === \"email\") temp.email = type;\n        else if (key === \"certFile\") temp.certFile = type;\n        else if (key === \"majorLogo\") temp.majorLogo = type;\n        else if (key === \"inputEmail\") temp.inputEmail = type;\n        else if (key === \"inputPassword\") temp.inputPassword = type;\n        else if (key === \"inputNewPassword\") temp.inputNewPassword = type;\n        else if (key === \"inputCheckNewPassword\") temp.inputCheckNewPassword = type;\n        else console.log(\"function changeIsCorrect() error \");\n\n        setIsCorrect(temp);\n    };\n\n    function withdrawal() {\n        console.log(isCorrect.inputEmail + \" \" + isCorrect.inputPassword);\n        if (isCorrect.inputEmail && isCorrect.inputPassword) {\n            if (window.confirm('정말 탈퇴하시겠습니까?')) {\n                const payload = { \"inputEmail\": inputEmail, \"inputPassword\": inputPassword }\n                //axio.탈퇴\n                axios.post(debugAPIURL + '/withdrawal', payload)\n                    .then((payload) => {\n                        switch (payload.status) {\n                            case 200:\n                                alert(\"회원 탈퇴가 정상적으로 처리 되었습니다.\");\n                                history.push('/');\n                                break;\n                            default: break;\n                        }\n                    })\n                    .catch((error) => {\n                        switch (error.response.status) {\n                            case 401:\n                                alert(\"이메일과 패스워드가 올바르지 않습니다.\");\n                                break;\n                            default: break;\n                        }\n                    })\n            }\n            else {\n                setBoxState(\"profile\");\n                reset();\n            }\n        } else {\n            alert(\"이메일과 패스워드를 모두 입력해주세요.\");\n        }\n    }\n\n    function newPassword() {\n        const payload = { \"inputPassword\": inputPassword, \"inputNewPassword\": inputNewPassword, \"inputCheckNewPassword\": inputCheckNewPassword }\n        axios.patch(debugAPIURL + '/password', payload)\n            .then((payload) => {\n                switch (payload.status) {\n                    case 200:\n                        alert(\"비밀번호가 수정되었습니다.\");\n                        setBoxState(\"profile\");\n                        break;\n                    default:\n                        alert(payload.status);\n                }\n\n            })\n            .catch((error) => {\n                alert(error.response.status); // 수정필요\n            })\n    }\n\n    function putProfile() {\n        let payload = new FormData();\n        console.log(props.loginPosition);\n        payload.append(\"stdID\", stdID);\n        payload.append(\"name\", name);\n\n        if (props.loginPosition === \"student\") { //학생\n            payload.append(\"major\", major);\n            payload.append(\"certFile\", certFile);\n        }\n        else if (props.loginPosition === \"president\") { //학생회장\n            payload.append(\"phoneNumber\", phoneNumber);\n            payload.append(\"majorLogo\", majorLogo);\n        }\n\n        axios.put(debugAPIURL + \"/profile/\" + props.loginPosition, payload, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then((payload) => {\n            switch (payload.status) {\n                case 200:\n                    alert(\"정보가 변경되었습니다.\");\n                    break;\n                default: alert(\"success: \" + payload.status); break;\n            }\n        })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400:\n                        alert(error.response.data.errorMessage);\n                        break;\n                    default:\n                        alert(\"error: \" + error.status);\n                        break;\n                }\n            })\n\n\n    }\n\n    function reset() {\n        setInputEmail(\"\");\n        setInputPassword(\"\");\n        setInputNewPassword(\"\");\n        setInputCheckNewPassword(\"\");\n    }\n\n    useEffect(() => {\n        if (props.loginPosition === \"president\") {\n            if (isCorrect.stdID && isCorrect.name && isCorrect.phoneNumber && isCorrect.majorLogo) {\n                setEditButtonState(true);\n            } else {\n                setEditButtonState(false);\n            }\n            console.log(\"isCorrect.stdID: \" + isCorrect.stdID + \" isCorrect.name: \" + isCorrect.name + \" isCorrect.phoneNumber: \" + isCorrect.phoneNumber + \"  isCorrect.majorLogo: \" + isCorrect.majorLogo);\n        } else if (props.loginPosition === \"student\") {\n            if (isCorrect.stdID && isCorrect.name && isCorrect.major && isCorrect.certFile) {\n                setEditButtonState(true);\n            } else {\n                setEditButtonState(false);\n            }\n            console.log(\"isCorrect.stdID: \" + isCorrect.stdID + \" isCorrect.name: \" + isCorrect.name + \" isCorrect.major: \" + isCorrect.major + \" isCorrect.certFile: \" + isCorrect.certFile);\n        }\n\n        if (isCorrect.inputPassword && isCorrect.inputNewPassword && isCorrect.inputCheckNewPassword) {\n            if (inputNewPassword === inputCheckNewPassword)\n                setNewPasswordButton(true);\n            else {\n                setNewPasswordButton(false);\n            }\n        } else {\n            setNewPasswordButton(false);\n        }\n\n    }, [isCorrect])\n\n    useEffect(() => {\n        //debug\n\n        setStdID(() => \"201892643\");\n        setMajor(() => \"1\");\n        setName(() => \"한준규\");\n        setPhoneNumber(() => \"010-0000-0000\");\n        setEmail(() => \"test1@pukyong.ac.kr\");\n        // setCertFile({ name: \"학생증.jpg\" });\n        setCertFile(\"\");\n        setMajorLogo(\"\");\n\n        setIsCorrect(\n            {\n                stdID: true,\n                major: true,\n                name: true,\n                phoneNumber: true,\n                email: true,\n                certFile: true,\n                majorLogo: true,\n                inputEmail: false,\n                inputPassword: false,\n                inputNewPassword: false,\n                inputCheckNewPassword: false\n            }\n        );\n\n\n\n        //get 요청해서 로그인된 정보 가져오기\n        axios.get(debugAPIURL + '/profile')\n            .then((payload) => {\n                switch (payload.status) {\n                    case 200:\n                        setStdID(payload.data[\"stdID\"]);\n                        setMajor(payload.data[\"major\"]);\n                        setName(payload.data[\"name\"]);\n                        setEmail(payload.data[\"email\"]);\n\n                        if (props.loginPosition === \"president\") {\n                            setPhoneNumber(payload.data[\"phoneNumber\"]);\n                            setMajorLogo(payload.data[\"majorLogo\"]);\n                            setIsCorrect(\n                                {\n                                    stdID: true,\n                                    major: true,\n                                    name: true,\n                                    phoneNumber: true,\n                                    email: true,\n                                    certFile: false,\n                                    majorLogo: true,\n                                    inputEmail: false,\n                                    inputPassword: false,\n                                    inputNewPassword: false,\n                                    inputCheckNewPassword: false,\n                                }\n                            );\n                        } else if (props.loginPosition === \"student\") {\n                            setCertFile(payload.data[\"certFile\"]);\n                            setIsCorrect(\n                                {\n                                    stdID: true,\n                                    major: true,\n                                    name: true,\n                                    phoneNumber: false,\n                                    email: true,\n                                    certFile: true,\n                                    majorLogo: false,\n                                    inputEmail: false,\n                                    inputPassword: false,\n                                    inputNewPassword: false,\n                                    inputCheckNewPassword: false,\n                                }\n                            );\n                        }\n                        break;\n                    default: break;\n                }\n                axios.get(debugAPIURL + '/status')\n                    .then((payload) => {\n                        switch (payload.status) {\n                            case 200: setUserStatus(payload.data[\"status\"]); break;\n                            default: console.log(\"error: \" + payload.response.status); break;\n                        }\n                    })\n                    .catch((error) => {\n                        switch (error.response.status) {\n                            case 400: console.log(\"사용자의 승인상태를 확인하는데 실패했습니다.\"); break;\n                            default: console.log(\"error: \" + payload.response.status); break;\n                        }\n                    })\n            })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400: console.log(\"정보를 로드하는데 실패했습니다.\"); break;\n                    default: console.log(\"error: \" + error.response.status); break;\n                }\n\n            })\n        //get 요청해서 학과리스트 가져오기\n        axios.get(debugAPIURL + '/major-list')\n            .then((payload) => {\n                setMajorList([...payload.data.majorList]);\n            })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400: alert(\"학과리스트를 불러올 수 없습니다.\"); return;\n                    default: console.log(\"error: \" + error.response.status); return;\n                }\n            })\n\n        document.addEventListener('mousedown', clickModalOutside);\n\n        return () => {\n            document.removeEventListener('mousedown', clickModalOutside);\n        };\n\n    }, [])\n\n    const clickModalOutside = event => {\n        if (props.editProfileState && (event.target === modalRef.current)) {\n            props.setEditProfileState(false);\n        }\n    };\n\n\n    useEffect(() => {\n        if (phoneNumber.length === 10) {\n            setPhoneNumber(phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'));\n        }\n        if (phoneNumber.length === 13) {\n            setPhoneNumber(phoneNumber.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\n        }\n    }, [phoneNumber]);\n\n    return (\n        <div className=\"errorContainer\" ref={modalRef}>\n            <div className=\"errorBox\">\n                {\n                    boxState === \"profile\"\n                        ? <>\n                            <div className='boxTitle'>\n                                <h2 ><i className=\"fas fa-users\" />프로필 편집</h2>\n                                <button className=\"btn btn-danger\" onClick={() => { setBoxState(\"withdrawal\") }}>회원탈퇴</button>\n                            </div>\n\n                            <div className='editField'>\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-key\"></i>\n                                    <label>비밀번호</label>\n                                    <empty style={{ width: \"200px\" }}></empty>\n                                    <button type='button' onClick={() => { setBoxState(\"newPassword\") }}>변경</button>\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-lock\"></i>\n                                    <label>학번</label>\n                                    <input onChange={(e) => {\n                                        setStdID(e.target.value.replace(/[^0-9]/g, ''));\n                                        if (e.target.value.length === 9) {\n                                            changeIsCorrect(\"stdID\", true);\n\n                                        } else {\n                                            changeIsCorrect(\"stdID\", false);\n                                        }\n                                    }\n                                    } name=\"stdID\" value={stdID} maxLength=\"9\" placeholder=\"내용을 입력해주세요\" type=\"text\" />\n\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-book-open\" style={{ fontSize: \"0.85rem\" }}></i>\n                                    <label >학과</label>\n                                                <input type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder={majorList[major]}\n                                                    style={{ textColor: \"black\" }}\n                                                    onChange={(e) => {\n                                                        setMajor(majorList.indexOf(e.target.value) + 1);\n\n                                                        if (majorList.includes(e.target.value)) {\n                                                            changeIsCorrect(\"major\", true);\n                                                        } else {\n                                                            changeIsCorrect(\"major\", false);\n                                                        }\n                                                    }\n                                                    } ></input>\n                                                <datalist id=\"majorList-options\" >\n                                                    {\n                                                        majorList.map((majorName, i) => {\n                                                            return (\n                                                                <option value={majorName} key={i} ></option>\n                                                            )\n                                                        })\n                                                    }\n                                                </datalist>\n                                            \n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-user\"></i>\n                                    <label>이름</label>\n                                    <input onChange={(e) => {\n                                        setName(e.target.value)\n                                        if (e.target.value === \"\") {\n                                            changeIsCorrect(\"name\", false);\n                                        } else {\n                                            changeIsCorrect(\"name\", true);\n                                        }\n                                    }\n                                    } name=\"name\" value={name} type=\"text\" placeholder=\"이름을 입력해주세요\" />\n                                </div>\n\n                                {\n                                    props.loginPosition === \"president\"\n                                        ?\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-user\"></i>\n                                            <label>전화번호</label>\n                                            <input onChange={(e) => {\n                                                setPhoneNumber(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"phoneNum\", false);\n                                                } else {\n                                                    changeIsCorrect(\"phoneNum\", true);\n                                                }\n                                            }\n                                            } maxLength=\"13\" name=\"phoneNum\" value={phoneNumber} type=\"text\" placeholder=\"내용을 입력하세요\" />\n                                        </div>\n                                        : null\n                                }\n\n\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-envelope\"></i>\n                                    <label>이메일</label>\n                                    <input id=\"inputEmail\" name=\"email\" value={email} type=\"text\" readOnly />\n                                </div>\n\n                                {\n                                    props.loginPosition === \"president\"\n                                        ?\n                                        <>\n                                            {userStatus === \"approval\"\n                                                ? <div className=\"inputField\">\n                                                    <i className=\"fas fa-user-graduate\"></i>\n                                                    <label>학과로고</label>\n                                                    <input style={{ width: \"200px\" }} placeholder={majorLogo} readOnly></input>\n                                                    <label className='fileButton' htmlFor=\"file\">찾기</label>\n                                                    <input type=\"file\" id=\"file\" name=\"file\" style={{ display: \"none\" }} accept='image/*'\n                                                        onChange={(e) => {\n                                                            setMajorLogo(e.target.files[0]);\n                                                            if (e.target.value === \"\") {\n                                                                changeIsCorrect(\"majorLogo\", false);\n                                                            } else {\n                                                                changeIsCorrect(\"majorLogo\", true);\n                                                            }\n\n                                                        }}></input>\n                                                </div>\n                                                : null\n                                            }\n                                        </>\n                                        :\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-user-graduate\"></i>\n                                            <label>학생증</label>\n                                            <input style={{ width: \"200px\" }} placeholder={certFile} readOnly></input>\n                                            <label className='fileButton' htmlFor=\"file\">찾기</label>\n                                            <input type=\"file\" id=\"file\" name=\"file\" style={{ display: \"none\" }} accept='image/*'\n                                                onChange={(e) => {\n                                                    setCertFile(e.target.files[0]);\n                                                    if (e.target.value === \"\") {\n                                                        changeIsCorrect(\"certFile\", false);\n                                                    } else {\n                                                        changeIsCorrect(\"certFile\", true);\n                                                    }\n\n                                                }}></input>\n                                        </div>\n                                }\n                            </div>\n\n                            <div className=\"errorBtns\">\n                                <button className=\"errorBtn\" type=\"button\" onClick={() => {\n                                    editButtonState ? putProfile() : alert('정보를 모두 입력해주세요.');\n                                    props.loginPosition === \"student\"\n                                    ? (<>{window.confirm('프로필 편집을 하실 경우 학생회장의 학과 장부 열람 승인을 다시 받아야 합니다. 프로필을 편집하시겠습니까?')\n                                        ? putProfile()\n                                        :alert(\"정보수정이 취소되었습니다. \")}</>)\n                                    : (<>{\n                                        props.loginPosition === \"president\"\n                                        ? (<>{window.confirm('프로필 편집을 변경하실 경우 챗봇을 통하여 관리자에게 회장인증을 해야 합니다. 프로필을 편집하시겠습니까?')\n                                            ? putProfile()\n                                            :alert(\"정보수정이 취소되었습니다. \")}</>)\n                                        : null\n                                    }</>)\n                                    \n            \n                                }}>저장하기</button>\n                                <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { props.setEditProfileState(false); reset(); }}>취소</button>\n\n                            </div>\n                        </>\n                        : boxState === \"withdrawal\"\n                            ? <>\n                                <div className='boxTitle'  >\n                                    <h2 ><i className=\"fas fa-users\" style={{ color: \"#dc3545\" }} />회원 탈퇴</h2>\n                                </div>\n\n                                <div className='editField' style={{ borderColor: \"#dc3545\" }}>\n\n                                    <div className=\"inputField\">\n                                        <i className=\"fas fa-envelope\"></i>\n                                        <label>이메일</label>\n                                        <input id=\"inputEmail\" onChange={(e) => {\n                                            setInputEmail(e.target.value)\n                                            if (e.target.value === \"\") {\n                                                changeIsCorrect(\"inputEmail\", false);\n                                            } else {\n                                                changeIsCorrect(\"inputEmail\", true);\n                                            }\n                                        }} value={inputEmail} type=\"text\" placeholder='이메일을 입력하세요.' />\n                                    </div>\n\n                                    <div className=\"inputField\">\n                                        <i className=\"fas fa-key\"></i>\n                                        <label>비밀번호</label>\n                                        {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                        <input type=\"password\" onChange={(e) => {\n                                            setInputPassword(e.target.value)\n                                            if (e.target.value === \"\") {\n                                                changeIsCorrect(\"inputPassword\", false);\n                                            } else {\n                                                changeIsCorrect(\"inputPassword\", true);\n                                            }\n                                        }} value={inputPassword} placeholder='비밀번호를 입력하세요.' />\n\n                                    </div>\n                                </div>\n\n                                <div className=\"errorBtns\">\n                                    <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"#dc3545\" }} onClick={() => { withdrawal(); }}>탈퇴</button>\n                                    <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { setBoxState(\"profile\") }}>취소</button>\n\n                                </div>\n                            </>\n                            : boxState === \"newPassword\"\n                                ? <>\n                                    <div className='boxTitle' >\n                                        <h2 ><i className=\"fas fa-users\" />비밀번호 변경</h2>\n                                    </div>\n\n                                    <div className='editField' >\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }}>비밀번호</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputPassword\", true);\n                                                }\n                                            }} value={inputPassword} placeholder='현재 비밀번호를 입력하세요.' />\n                                        </div>\n\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }}>새 비밀번호</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputNewPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputNewPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputNewPassword\", true);\n                                                }\n                                            }} value={inputNewPassword} placeholder='새 비밀번호를 입력하세요.' />\n                                        </div>\n\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }} >새 비밀번호 확인</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputCheckNewPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputCheckNewPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputCheckNewPassword\", true);\n                                                }\n                                            }} value={inputCheckNewPassword} placeholder='새 비밀번호를 다시 입력하세요.' />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"errorBtns\">\n                                        {\n                                            newPasswordButton\n                                                ?\n                                                <button className=\"errorBtn\" type=\"button\" onClick={() => { newPassword(); }}>변경</button>\n                                                :\n                                                <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }}\n                                                    onClick={() => { console.log(isCorrect.inputPassword + \" \" + isCorrect.inputNewPassword + \" \" + isCorrect.inputCheckNewPassword); }}>변경</button>\n\n                                        }\n\n                                        <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { setBoxState(\"profile\"); reset(); }}>취소</button>\n\n                                    </div>\n                                </>\n                                : null\n                }\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default EditProfile;","/Users/river2/Desktop/PKSCL/frontend/src/CertFile.js",["84"],"import { propTypes } from 'react-bootstrap/esm/Image';\nimport './css/CertFile.css';\n\nfunction CertFile(props){\n    return(\n      <div className=\"certFileContainer\">\n      <div className=\"certFileBox\">\n        <div style={{display : \"flex\", justifyContent: \"flex-end\", width: \"100%\"}}>\n            <button className=\"CertFileButton\" onClick={()=>{props.setCertFile(false)}}><i className=\"fas fa-times\"></i></button>\n        </div>\n        <br/>\n        <img src= {props.certFileStudnet[\"studentImgPath\"]} width={\"auto\"} height={\"500vh\"} alt={props.certFileStudnet[\"studentImgPath\"]}/>\n      </div>\n    </div>\n    )\n    \n  }\n  \nexport default CertFile;","/Users/river2/Desktop/PKSCL/frontend/src/EditMainPage.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/EditEvent.js",["85","86","87"],"import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './css/EditEvent.css'\nimport PreviewImg from './PreviewImg';\n\nfunction EditEvent(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    const [eventData, setEventData] = useState();\n    const [deleteReceiptList, SetDeleteReceiptList] = useState([]);\n    const [showImg, setShowImg] = useState(false);\n    const [editState,setEditState] = useState(true);\n\n    useEffect(() => {\n        setEventData(props.editEventData);\n    }, []);\n\n    function changeEventItem(value, item) {\n        let tempEditEventData = { ...eventData };\n        tempEditEventData[item] = value;\n        setEventData(tempEditEventData);\n    }\n\n    function changeReceiptItem(value, j, item) {\n        let tempEditEventData = { ...eventData };\n        tempEditEventData[\"receiptList\"][j][item] = value;\n        setEventData(tempEditEventData);\n    }\n\n    function changeItem(key, value, j, k) {\n        let tempEditEventData = { ...eventData };\n        let item = tempEditEventData[\"receiptList\"][j][\"receiptDetailList\"][k];\n        item[key] = value;\n        item[\"totalAmount\"] = item[\"price\"] * item[\"amount\"];\n        setEventData(tempEditEventData);\n        // var tempShowAllReceiptButton = [...showAllReceiptButton];\n        // tempShowAllReceiptButton[i] = true;\n        // console.log(tempShowAllReceiptButton);\n        // setShowAllReceiptButton(tempShowAllReceiptButton);\n    }\n\n    function eventDeleteButton() {\n        axios.delete(debugAPIURL + '/ledger/?eventNumber=' + eventData[\"eventNumber\"])\n            .then((payload) => {\n                switch (payload.status) {\n                    case 200:\n                        alert(\"행사 장부가 삭제되었습니다.\");\n                        break;\n                    default: break;\n                }\n            }).catch((error) => {\n                alert(\"장부를 삭제하는데 실패했습니다.\");\n            })\n    }\n\n    function processImage(file) {\n        if (file != null) {\n            const imageFile = file;\n\n            if (file[\"name\"] === \"\" || file[\"name\"].includes('/')) return file.name;\n            else {\n                const imageUrl = URL.createObjectURL(imageFile);\n                return imageUrl;\n            }\n        }\n    }\n\n    function receiptDeleteButton(j) {\n        let answer = window.confirm(\"영수증을 삭제하시겠습니까?\");\n        if (answer) {\n            if (eventData[\"receiptList\"][j][\"receiptNumber\"] !== undefined) {\n                SetDeleteReceiptList([...deleteReceiptList, eventData[\"receiptList\"][j][\"receiptNumber\"]])\n            }\n            let tempEditEventData = {\n                \"eventNumber\": eventData[\"eventNumber\"],\n                \"eventTitle\": eventData[\"eventTitle\"],\n                \"eventContext\": eventData[\"eventContext\"],\n                \"receiptList\":\n                    eventData[\"receiptList\"].filter(\n                        (event, i) => {\n                            return (i !== j)\n                        })\n            }\n            setEventData(tempEditEventData);\n            alert(\"영수증이 삭제되었습니다.\");\n        }\n    }\n\n    function receiptDetailDeleteButton(j, k) {\n        let tempEditEventData = {\n            \"eventNumber\": eventData[\"eventNumber\"],\n            \"eventTitle\": eventData[\"eventTitle\"],\n            \"eventContext\": eventData[\"eventContext\"],\n            \"receiptList\":\n                eventData[\"receiptList\"].map((receipt, p) => {\n                    if (p !== j) return receipt;\n                    return ({\n                        \"receiptNumber\": receipt[\"receiptNumber\"],\n                        \"receiptTitle\": receipt[\"receiptTitle\"],\n                        \"receiptImg\": receipt[\"receiptImg\"],\n                        \"receiptContext\": receipt[\"receiptContext\"],\n                        \"receiptDetailList\":\n                            receipt[\"receiptDetailList\"].filter(\n                                (event, i) => {\n                                    return (i !== k)\n                                })\n                    }\n                    )\n                })\n        }\n        setEventData(tempEditEventData);\n    }\n\n    function sumItems(price, amount) {\n        return price * amount;\n    }\n\n    function sumReceipt(receiptDetailList) {\n        let sumReceiptValue = 0;\n        if (receiptDetailList !== undefined) {\n\n            for (let i = 0; i < receiptDetailList.length; i++) {\n                let item = receiptDetailList[i];\n                sumReceiptValue = sumReceiptValue + sumItems(item[\"price\"], item[\"amount\"]);\n            }\n        }\n        return sumReceiptValue;\n    }\n\n    function uploadImg(img, j) {\n        let tempEditEventData = { ...eventData };\n        tempEditEventData[\"receiptList\"][j][\"receiptImg\"] = img;\n        setEventData(tempEditEventData);\n    }\n\n    function receiptTableAddButton(j){\n        let tempEditEventData = { ...eventData };\n        tempEditEventData[\"receiptList\"][j][\"receiptDetailList\"].push({\n                    \"context\": \"\",\n                    \"price\": \"\",\n                    \"amount\": \"\",\n                    \"totalAmount\": \"\"\n        })\n        setEventData(tempEditEventData);\n    }\n\n    function receiptAddButton() {\n        let tempEditEventData = { ...eventData };\n        tempEditEventData[\"receiptList\"].push({\n\n            \"receiptTitle\": \"\",\n            \"receiptImg\": { name: \"\" },\n            \"receiptContext\": \"\",\n            \"receiptDetailList\": [\n                {\n                    \"context\": \"\",\n                    \"price\": \"\",\n                    \"amount\": \"\",\n                    \"totalAmount\": \"\"\n\n                }\n            ]\n        })\n        setEventData(tempEditEventData);\n    }\n\n    function editEventButton() {\n        let payload = {\n            \"eventNumber\": eventData[\"eventNumber\"],\n            \"eventTitle\": eventData[\"eventTitle\"],\n            \"eventContext\": eventData[\"eventContext\"]\n        }\n\n        let promise = new Promise ((resolve, reject)=>{\n            axios.patch(\"/event\", payload)\n            .then((payload) => {\n                resolve(\"행사 이름, 행사 설명 수정 완료\")\n            })\n            .catch((error) => {\n                reject(\"행사 이름, 행사 설명 수정 실패\")\n            })\n        })\n\n        promise\n        .then(value=>{\n            if (deleteReceiptList.length !== 0) {\n                deleteReceiptListAPI();}\n                else{\n                    sendReciept();\n                }\n        })\n        .catch((value=>{\n            alert(value)\n        }))\n        \n    }\n\n    function deleteReceiptListAPI() {\n        let deleteReceiptListURL = \"\";\n        for (let i = 0; i < deleteReceiptList.length; i++) {\n            if (deleteReceiptListURL === \"\") {\n                deleteReceiptListURL = deleteReceiptListURL + deleteReceiptList[i];\n            } else {\n                deleteReceiptListURL = deleteReceiptListURL + \",\" + deleteReceiptList[i];\n            }\n        }\n        let promise = new Promise ((resolve, reject)=>{\n            axios.delete(\"/receipt?receiptNumber=\" + deleteReceiptListURL)\n            .then((payload) => {\n                resolve(\"영수증 삭제 완료\")\n            })\n            .catch((error) => {\n                reject(\"영수증 삭제 실패\")\n            })\n        })\n\n        promise\n        .then(value=>{\n            sendReciept();\n        })\n        .catch((value=>{\n            alert(value)\n        }))\n        \n    }\n\n    function postReceipt(j) {\n\n        let payload = new FormData();\n\n        let receiptData = eventData[\"receiptList\"][j];\n\n        payload.append(\"eventNumber\", eventData[\"eventNumber\"]);\n        payload.append(\"receiptTitle\", receiptData[\"receiptTitle\"]);\n        payload.append(\"receiptContext\", receiptData[\"receiptContext\"]);\n\n        for (var i = 0; i < receiptData[\"receiptDetailList\"].length; i++) {\n            payload.append(`context[${i}]`, receiptData[\"receiptDetailList\"][i][\"context\"]);\n            payload.append(`price[${i}]`, receiptData[\"receiptDetailList\"][i][\"price\"]);\n            payload.append(`amount[${i}]`, receiptData[\"receiptDetailList\"][i][\"amount\"]);\n        }\n\n        let promise = new Promise ((resolve, reject)=>{\n            axios.post(debugAPIURL + \"/receipt\", payload,\n                {\n                    headers: { 'Content-Type': 'multipart/form-data' }\n                }\n            )\n                .then((payload) => {\n                    resolve(\"영수증 추가 완료\")\n                })\n                .catch((error) => {\n                    reject(\"영수증 삭제 실패\")\n                })\n            })\n\n        promise\n                .then(value=>{\n                })\n                .catch((value=>{\n                    alert(value)\n                    setEditState(false)\n                }))\n\n    }\n\n    function putReceipt(j) {\n\n        let payload = new FormData();\n        let receiptData = eventData[\"receiptList\"][j];\n\n        payload.append(\"receiptNumber\", receiptData[\"receiptNumber\"]);\n        payload.append(\"receiptTitle\", receiptData[\"receiptTitle\"]);\n        payload.append(\"receiptContext\", receiptData[\"receiptContext\"]);\n\n        for (var i = 0; i < receiptData[\"receiptDetailList\"].length; i++) {\n            payload.append(`context[${i}]`, receiptData[\"receiptDetailList\"][i][\"context\"]);\n            payload.append(`price[${i}]`, receiptData[\"receiptDetailList\"][i][\"price\"]);\n            payload.append(`amount[${i}]`, receiptData[\"receiptDetailList\"][i][\"amount\"]);\n        }\n\nlet promise = new Promise ((resolve, reject)=>{\n        axios.put(debugAPIURL + \"/receipt\", payload,\n            {\n                headers: { 'Content-Type': 'multipart/form-data' }\n            }\n        )\n            .then((payload) => {\n                resolve(\"영수증 추가 완료\")\n            })\n            .catch((error) => {\n                reject(\"영수증 삭제 실패\")\n            })\n             })\n\n        promise\n                .then(value=>{\n                })\n                .catch((value=>{\n                    alert(value)\n                    setEditState(false)\n                }))\n\n    }\n    function sendReciept() {\n        eventData[\"receiptList\"].map((receipt, j) => {\n                if (receipt[\"receiptNumber\"] === undefined) {\n                    postReceipt(j);\n                } else {\n                    putReceipt(j);\n                }\n            }\n        )\n        if(editState===true) props.setEditEventState(false);\n    }\n\n    return (\n        // <div className=\"editEventContainer\">\n        <div className=\"editEventBox\">\n            {\n                showImg\n                    ? <PreviewImg setShowImg={setShowImg}></PreviewImg>\n                    : null\n            }\n            <div className=\"quarterData\" style={{ marginTop: \"0\" }}>\n                {\n                    eventData === undefined\n                        ? <div>입력된 행사가 없습니다.</div>\n                        : (\n                            <div className=\"editEventCard\" >\n                                <div className=\"cardContent\">\n                                    <div className=\"eventSource\">\n                                        <div style={{ width: \"230px\" }}>\n                                            <div className=\"eventTitle\">\n                                                <h4>\n\n                                                    <input type=\"text\" style={{ border: \"transparent\", textAlign: \"left\", width: \"450px\" }}\n                                                        placeholder={\"행사 제목을 입력하세요\"}\n                                                        value={eventData[\"eventTitle\"]}\n                                                        onInput={\n                                                            (e) => {\n                                                                changeEventItem(e.target.value, \"eventTitle\");\n                                                            }}></input>\n\n                                                </h4>\n                                                <div style={{ width: \"500px\" }}> 행사 총 금액 : {props.editEventAmount}원</div>\n                                            </div>\n\n                                        </div>\n\n\n                                        <div className=\"eventButtons\">\n                                            <button onClick={() => { eventDeleteButton(); }} style={{ marginRight: \"15px\" }}>\n                                                <i class=\"far fa-trash-alt\"></i> </button>\n                                            <button onClick={() => {\n                                                editEventButton();\n                                            }} style={{ marginRight: \"15px\" }}> <i class=\"fas fa-check\"></i> </button>\n                                            <button onClick={() => {\n                                                if (window.confirm(\"행사 수정을 취소하시겠습니까?\")) {\n                                                    props.setEditEventState(false)\n                                                    alert(\"취소되었습니다.\")\n                                                }\n\n                                            }} style={{ marginRight: \"15px\" }}><i class=\"fas fa-times\"></i> </button>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <input type=\"text\" style={{ border: \"transparent\", textAlign: \"left\", width: \"650px\" }}\n                                            laceholder={eventData[\"eventContext\"]}\n                                            value={eventData[\"eventContext\"]}\n                                            onInput={\n                                                (e) => {\n                                                    changeEventItem(e.target.value, \"eventContext\");\n                                                }}></input>\n\n                                    </div>\n\n                                    {\n                                        <div id=\"receiptContent\" >\n                                            {\n                                                eventData[\"receiptList\"].map((receipt, j) => {\n                                                    return (\n                                                        <div className=\"receiptCard\" key={j}>\n                                                            <div className=\"receiptResource\">\n                                                                {\n                                                                    eventData[\"receiptList\"].length === 0\n                                                                        ? <div>입력된 영수증이 없습니다.</div>\n                                                                        : (<>\n                                                                            <div className=\"receiptTitle\">\n                                                                                <h5>\n                                                                                    <span onClick={() => { receiptDeleteButton(j); }}>\n                                                                                        <i className=\"far fa-trash-alt\"></i>\n                                                                                    </span>\n                                                                                    <input type=\"text\" style={{ border: \"transparent\", textAlign: \"left\", width: \"350px\" }}\n                                                                                        placeholder={\"영수증 제목을 입력하세요\"}\n                                                                                        value={eventData[\"receiptList\"][j][\"receiptTitle\"]}\n\n                                                                                        onInput={\n                                                                                            (e) => {\n                                                                                                changeReceiptItem(e.target.value, j, \"receiptTitle\");\n                                                                                            }}></input>\n\n                                                                                </h5>\n                                                                                {\n                                                                                    eventData[\"receiptList\"][j][\"receiptDetailList\"].length === 0\n                                                                                        ? null\n                                                                                        : (<div>\n                                                                                            {j + 1}번째 영수증 금액 : {sumReceipt(eventData[\"receiptList\"][j][\"receiptDetailList\"])}원\n                                                                                        </div>)\n                                                                                }\n\n\n                                                                            </div>\n\n                                                                            <div>\n\n\n                                                                                <input type=\"text\" style={{ border: \"transparent\", textAlign: \"right\", width: \"400px\" }}\n                                                                                    placeholder={\"영수증 비고를 입력하세요\"}\n                                                                                    value={eventData[\"receiptList\"][j][\"receiptContext\"]}\n                                                                                    onInput={\n                                                                                        (e) => {\n                                                                                            changeReceiptItem(e.target.value, j, \"receiptContext\");\n                                                                                        }}>\n                                                                                </input>\n                                                                            </div>\n\n\n                                                                            {\n                                                                                receipt[\"receiptDetailList\"].length === 0\n                                                                                    ? (<><div>입력된 영수증 내역이 없습니다.</div>\n                                                                                    <button className='editSubmitButton' type='button'\n                                                                                        onClick={() => {\n                                                                                            receiptTableAddButton(j);\n                                                                                        }}><i class=\"fas fa-plus\"></i></button>\n                                                                                    </>)\n                                                                                    : (<>\n                                                                                        <table className=\"receiptTable\" style={{ width: \"400px\" }}>\n                                                                                            <thead >\n                                                                                                <tr>\n                                                                                                    <th style={{ width: \"40px\" }}><i class=\"far fa-trash-alt\"></i></th>\n                                                                                                    <th style={{ width: \"90px\" }}>품명</th>\n                                                                                                    <th style={{ width: \"90px\" }}>단가</th>\n                                                                                                    <th style={{ width: \"90px\" }}>수량</th>\n                                                                                                    <th style={{ width: \"90px\" }}>가격</th>\n                                                                                                </tr>\n                                                                                            </thead>\n                                                                                            <tbody>\n                                                                                                {receipt[\"receiptDetailList\"].map((item, k) => {\n                                                                                                    return (\n                                                                                                        <tr key={k}>\n                                                                                                            <td style={{ width: \"40px\" }}>\n                                                                                                                <span onClick={() => { receiptDetailDeleteButton(j, k); }}>\n                                                                                                                    <i className=\"far fa-trash-alt\"></i>\n                                                                                                                </span>\n                                                                                                            </td>\n                                                                                                            <td style={{ width: \"90px\" }}>\n                                                                                                                <input type=\"text\" style={{ border: \"transparent\", textAlign: \"center\", width: \"90px\" }}\n                                                                                                                    placeholder={\"품명\"}\n                                                                                                                    value={item[\"context\"]}\n                                                                                                                    onInput={\n                                                                                                                        (e) => {\n                                                                                                                            changeItem(\"context\", e.target.value, j, k);\n                                                                                                                        }}></input>\n\n                                                                                                            </td>\n\n\n                                                                                                            <td style={{ width: \"90px\" }}>\n\n                                                                                                                <input type=\"text\" style={{ border: \"transparent\", textAlign: \"center\", width: \"90px\" }}\n                                                                                                                    placeholder={\"가격\"}\n                                                                                                                    value={item[\"price\"]}\n                                                                                                                    onInput={\n                                                                                                                        (e) => {\n                                                                                                                            changeItem(\"price\", e.target.value.replace(/[^0-9]/g, ''), j, k);\n                                                                                                                        }}></input>\n\n                                                                                                            </td>\n\n                                                                                                            <td style={{ width: \"90px\" }}>\n                                                                                                                <input type=\"text\" style={{ border: \"transparent\", textAlign: \"center\", width: \"90px\" }}\n                                                                                                                    placeholder={\"단가\"}\n                                                                                                                    value={item[\"amount\"]}\n                                                                                                                    onInput={\n                                                                                                                        (e) => {\n                                                                                                                            changeItem(\"amount\", e.target.value.replace(/[^0-9]/g, ''), j, k);\n                                                                                                                        }}></input>\n\n                                                                                                            </td>\n\n                                                                                                            <td style={{ width: \"90px\", textAlign: \"center\" }}>\n                                                                                                                {item[\"totalAmount\"]}\n                                                                                                            </td>\n                                                                                                        </tr>)\n                                                                                                })\n                                                                                                }\n                                                                                            </tbody>\n                                                                                            <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\n                                                                                                <button className='submitButton' type='button' style={{ margin: \"0\" }}\n                                                                                                    onClick={() => {\n                                                                                                        var tempEditEventData = { ...eventData };\n\n                                                                                                        tempEditEventData[\"receiptList\"][j][\"receiptDetailList\"].push({\n                                                                                                            context: \"\",\n                                                                                                            price: \"\",\n                                                                                                            amount: \"\",\n                                                                                                            totalAmount: \"\"\n                                                                                                        })\n                                                                                                        setEventData(tempEditEventData)\n                                                                                                    }}>항목 추가</button></div>\n\n                                                                                        </table>\n\n                                                                                    </>\n                                                                                    )\n                                                                            }\n\n\n                                                                        </>)}\n                                                            </div>\n\n                                                            <div className=\"uploadimg\">\n\n                                                                {/* <label for='receiptImg'> */}\n                                                                <img src={processImage(receipt[\"receiptImg\"])} style={{ backgroundColor: \"var(--color-leftPanel)\" }}\n                                                                    alt={processImage(receipt[\"receiptImg\"])} height={\"150\"} width={\"100\"} title='영수증 사진'\n                                                                    onClick={() => { setShowImg(true) }}\n                                                                />\n\n                                                                {/* </label> */}\n\n                                                                <input type=\"file\" id=\"receiptImg\" accept=\"image/*\"\n                                                                    onChange={(e) => { uploadImg(e.target.files[0], j); }}\n                                                                ></input>\n                                                            </div>\n                                                        </div>\n\n                                                    )\n                                                })\n                                            }\n                                        </div>\n\n\n                                    }\n\n                                    <div style={{\n                                        width: \"650px\", display: \"flex\", justifyContent: \"center\", position: \"relative\",\n                                    }}>\n                                        <button className='editSubmitButton' type='button'\n                                            onClick={() => {\n                                                receiptAddButton();\n                                            }}><i class=\"fas fa-plus\"></i></button>\n                                    </div>\n\n                                </div>\n                                <div className=\"cardImg\"></div>\n\n                            </div>\n                        )\n                }\n            </div>\n            {/* </div> */}\n        </div>\n    )\n}\n\nexport default EditEvent;","/Users/river2/Desktop/PKSCL/frontend/src/PreviewImg.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":14},{"ruleId":"92","severity":1,"message":"96","line":7,"column":31,"nodeType":"94","messageId":"95","endLine":7,"endColumn":41},{"ruleId":"92","severity":1,"message":"97","line":53,"column":24,"nodeType":"94","messageId":"95","endLine":53,"endColumn":39},{"ruleId":"88","replacedBy":"98"},{"ruleId":"90","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":65,"column":6,"nodeType":"102","endLine":65,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":90,"column":6,"nodeType":"102","endLine":90,"endColumn":17,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":486,"column":56,"nodeType":"108","messageId":"109","endLine":486,"endColumn":58},{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"110","line":5,"column":16,"nodeType":"94","messageId":"95","endLine":5,"endColumn":21},{"ruleId":"92","severity":1,"message":"111","line":5,"column":23,"nodeType":"94","messageId":"95","endLine":5,"endColumn":29},{"ruleId":"92","severity":1,"message":"112","line":65,"column":12,"nodeType":"94","messageId":"95","endLine":65,"endColumn":19},{"ruleId":"100","severity":1,"message":"113","line":130,"column":8,"nodeType":"102","endLine":130,"endColumn":10,"suggestions":"114"},{"ruleId":"92","severity":1,"message":"115","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":17},{"ruleId":"92","severity":1,"message":"116","line":100,"column":12,"nodeType":"94","messageId":"95","endLine":100,"endColumn":19},{"ruleId":"92","severity":1,"message":"117","line":134,"column":14,"nodeType":"94","messageId":"95","endLine":134,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":235,"column":58,"nodeType":"108","messageId":"109","endLine":235,"endColumn":60},{"ruleId":"100","severity":1,"message":"118","line":444,"column":8,"nodeType":"102","endLine":444,"endColumn":10,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":462,"column":8,"nodeType":"102","endLine":462,"endColumn":24,"suggestions":"121"},{"ruleId":"100","severity":1,"message":"122","line":468,"column":8,"nodeType":"102","endLine":468,"endColumn":17,"suggestions":"123"},{"ruleId":"100","severity":1,"message":"124","line":200,"column":8,"nodeType":"102","endLine":200,"endColumn":19,"suggestions":"125"},{"ruleId":"100","severity":1,"message":"126","line":320,"column":8,"nodeType":"102","endLine":320,"endColumn":10,"suggestions":"127"},{"ruleId":"92","severity":1,"message":"128","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":19},{"ruleId":"92","severity":1,"message":"129","line":2,"column":28,"nodeType":"94","messageId":"95","endLine":2,"endColumn":34},{"ruleId":"100","severity":1,"message":"130","line":17,"column":8,"nodeType":"102","endLine":17,"endColumn":10,"suggestions":"131"},{"ruleId":"106","severity":1,"message":"132","line":307,"column":51,"nodeType":"108","messageId":"133","endLine":307,"endColumn":53},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'setTodatQuarter' is assigned a value but never used.",["134"],["135"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'debugAPIURL', 'defineColor', and 'props.todayQuarter'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'position'. Either include it or remove the dependency array.",["137"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Route' is defined but never used.","'Switch' is defined but never used.","'refusal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["138"],"'majorlogo' is defined but never used.","'chatbot' is assigned a value but never used.","'pksclSubmitButton' is defined but never used.","React Hook useEffect has missing dependencies: 'adminGetDate', 'answer', 'answerMajorList', 'debugAPIURL', 'defineColor', 'getAdminLedger', 'getExPKSCL', 'major', 'props.loginPosition', 'props.todayQuarter', and 'reset'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has missing dependencies: 'quarter' and 'reset'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'props.todayQuarter' and 'reset'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'inputCheckNewPassword', 'inputNewPassword', and 'props.loginPosition'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'clickModalOutside', 'debugAPIURL', and 'props.loginPosition'. Either include them or remove the dependency array.",["143"],"'propTypes' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props.editEventData'. Either include it or remove the dependency array. If 'setEventData' needs the current value of 'props.editEventData', you can also switch to useReducer instead of useState and read 'props.editEventData' in the reducer.",["144"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [debugAPIURL, defineColor, props.todayQuarter]",{"range":"163","text":"164"},"Update the dependencies array to be: [isCorrect, position]",{"range":"165","text":"166"},"Update the dependencies array to be: [getList]",{"range":"167","text":"168"},"Update the dependencies array to be: [adminGetDate, answer, answerMajorList, debugAPIURL, defineColor, getAdminLedger, getExPKSCL, major, props.loginPosition, props.todayQuarter, reset]",{"range":"169","text":"170"},"Update the dependencies array to be: [currentQuarter, quarter, reset]",{"range":"171","text":"172"},"Update the dependencies array to be: [props.todayQuarter, quarter, reset]",{"range":"173","text":"174"},"Update the dependencies array to be: [inputCheckNewPassword, inputNewPassword, isCorrect, props.loginPosition]",{"range":"175","text":"176"},"Update the dependencies array to be: [clickModalOutside, debugAPIURL, props.loginPosition]",{"range":"177","text":"178"},"Update the dependencies array to be: [props.editEventData]",{"range":"179","text":"180"},[2354,2356],"[debugAPIURL, defineColor, props.todayQuarter]",[2892,2903],"[isCorrect, position]",[4317,4319],"[getList]",[24136,24138],"[adminGetDate, answer, answerMajorList, debugAPIURL, defineColor, getAdminLedger, getExPKSCL, major, props.loginPosition, props.todayQuarter, reset]",[24554,24570],"[currentQuarter, quarter, reset]",[24677,24686],"[props.todayQuarter, quarter, reset]",[8404,8415],"[inputCheckNewPassword, inputNewPassword, isCorrect, props.loginPosition]",[13139,13141],"[clickModalOutside, debugAPIURL, props.loginPosition]",[582,584],"[props.editEventData]"]