[{"/Users/river2/Desktop/PKSCL/frontend/src/index.js":"1","/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js":"2","/Users/river2/Desktop/PKSCL/frontend/src/App.js":"3","/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js":"4","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js":"5","/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js":"6","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js":"7"},{"size":637,"mtime":1642434411870,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1642060834506,"results":"10","hashOfConfig":"9"},{"size":1788,"mtime":1642635562588,"results":"11","hashOfConfig":"9"},{"size":10474,"mtime":1642562193415,"results":"12","hashOfConfig":"9"},{"size":546,"mtime":1642339287963,"results":"13","hashOfConfig":"9"},{"size":12236,"mtime":1642643578398,"results":"14","hashOfConfig":"9"},{"size":11437,"mtime":1642430774584,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"47akap",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/river2/Desktop/PKSCL/frontend/src/index.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js",[],["34","35"],"/Users/river2/Desktop/PKSCL/frontend/src/App.js",["36","37","38","39","40","41"],"// import log from './img/log.svg';\n// import {Nav} from 'react-bootstrap';\nimport './App.css';\nimport { useState } from 'react';\nimport AccessPage from './AccessPage';\nimport ManagementPage from './ManagementPage';\nimport MainPage from './MainPage';\nimport { Button } from 'bootstrap';\n\n\nfunction App() {\n\n  return (\n    <div>\n      {/* <AccessPage></AccessPage> */}\n\n      <ManagementPage></ManagementPage>\n\n      {/* <MainPage></MainPage> */}\n\n      {/* <Hi></Hi> */}\n\n    </div>\n  );\n}\n\n\nfunction Hi(){\n  const [checkedWaiting, setCheckedWaiting] = useState([]);\n\n  const changeHandler = (checked, id) => {\n    if (checked) {\n      setCheckedWaiting([...checkedWaiting, id]);\n    } else {\n      // 체크 해제\n      setCheckedWaiting(checkedWaiting.filter((el) => el !== id));\n    }\n    console.log(checked)\n  };\n\n  let [waiting,setWaiting] = useState([{  \n    \"studentID\" : \"1111111111\",\n     \"name\" : \"대기1\"\n    } ,\n  { \n     \"studentID\" : \"222222222\",\n     \"name\" : \"대기2\"\n  },\n  {\n     \"studentID\" : \"333333333\",\n     \"name\" : \"대기3\"\n  }]);\n  \n  return (\n    <div>\n      {\n        waiting.map((waitingStudent)=>{\n          return(\n            <div>\n              <input \n                id= {waitingStudent}\n                type=\"checkbox\" \n                onChange={(e)=>{\n                  changeHandler(e.currentTarget.checked, waitingStudent)\n                }}\n                checked={checkedWaiting.includes(waitingStudent) ? true : false}\n              />\n            </div>\n          )\n        })\n        }\n    <button className='searchButton' onClick={()=>{\n        checkedWaiting.map((checkedWaiting)=>{\n          console.log(checkedWaiting)\n        })\n    }}>button</button>\n                   \n    </div>\n                   \n  \t\n  )\n}\n\nexport default App;\n",["42","43"],"/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js",["44"],"/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js",["45","46","47","48","49","50","51","52","53","54","55","56"],"import { useState } from 'react';\nimport { Navbar, Container, Form, FormControl,NavDropdown,Pagination} from 'react-bootstrap';\nimport './ManagementPage.css';\n\nfunction ManagementPage(){\n\n    const [waiting,setWaiting] = useState([\n        {  \n            \"studentID\" : \"1111111111\",\n            \"name\" : \"대기1\"\n        } ,\n        { \n            \"studentID\" : \"222222222\",\n            \"name\" : \"대기2\"\n        },\n        {\n            \"studentID\" : \"333333333\",\n            \"name\" : \"대기3\"\n        }\n    ]);\n\n    const [refusal,setRefusal] = useState([]);\n    const [approval,setApproval] = useState([{  \n        \"studentID\" : \"111111111\",\n         \"name\" : \"승인1\"\n      } ,\n      { \n         \"studentID\" : \"222222222\",\n         \"name\" : \"승인2\"\n      },\n      {\n         \"studentID\" : \"222222222\",\n         \"name\" : \"승인3\"\n      },\n      {\n        \"studentID\" : \"222222222\",\n        \"name\" : \"승인4\"\n     },\n     {\n        \"studentID\" : \"222222222\",\n        \"name\" : \"승인5\"\n     }]);\n\n     const [leftTable, setLeftTable] = useState([...waiting]);\n     const [rightTable, setRightTable] = useState([...approval]);\n\n     const [leftCheckedList, setLeftCheckedList] = useState([]);\n     const [rightCheckedList, setRightCheckedList] = useState([]);\n\n     const changeHandler = (checked, id, setPlace, place) => {\n       if (checked) {\n        setPlace([...place, id]);\n       } else {\n         // 체크 해제\n         setPlace(place.filter((e) => e !== id));\n       }\n       console.log(checked)\n     };\n\n    const [searchStudent, setSearchStudent] = useState(\"\");\n    const [searchKinds,setSearchKinds] = useState(\"\");\n    const [searchstudentList, setSearchStudentList] = useState([]);\n    const [searchButton, setSearchButton] = useState(\"search\");\n\n    return(\n        \n        <div className=\"ManagementPageContainer\">\n            <Navbar expand=\"lg\" style={{padding: \"30px 0\"}}>\n                <Container fluid style={{justifyContent: \"center\", backgroundColor: \"none\"}}>\n                    <h2>학생승인 현황</h2>\n                    <Form  className=\"d-flex\" >\n                    <NavDropdown id=\"nav-dropdown\" >\n                        <NavDropdown.Item eventKey=\"name\" onClick={(e)=>{\n                            setSearchKinds(\"이름\");\n                        }}>이름</NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"number\" onClick={(e)=>{\n                            setSearchKinds(\"학번\");\n                        }}>학번</NavDropdown.Item>\n                    </NavDropdown>\n                        <input className=\"searchBar\" onChange={(e) => { setSearchStudent(e.target.value); setSearchButton(\"search\");}} \n                            name=\"q\" value={searchStudent} type=\"search\" placeholder=\"Search\" ></input>\n                            \n                        <button onClick={(e) => {\n                            if( searchButton === \"x\"){\n                                setSearchStudent(\"\");\n                                setSearchButton(\"search\");\n                                console.log(leftTable);\n                                setLeftTable([...waiting]);\n                                setRightTable([...approval]);\n                            }else{\n                                if(searchKinds === \"\" || searchStudent=== \"\"){\n                                    alert(\"검색 카테고리를 정하고, 검색명을 입력해주세요 :)\");\n                                }else if(searchKinds === \"이름\"){\n                                    setSearchButton(\"x\");\n\n                                    console.log( waiting);\n                            \n                                    let left = waiting.filter((item) => item.name === searchStudent);\n                                    let right = approval.filter((item) => item.name === searchStudent);\n        \n                                    console.log(left);\n                                    setLeftTable(left);\n                                    setRightTable(right);\n                                }else if(searchKinds === \"학번\"){\n                                    // setSearchButton(\"x\");\n                                    // console.log(\"학번 찾기\")\n                            \n                                    // let left = waiting.filter((item) => item.stID === String(searchStudent));\n                                    // let right = approval.filter((item) => item.stID === String(searchStudent));\n        \n                                    // console.log(left);\n                                    // setLeftTable(left);\n                                    // setRightTable(right);\n                                }\n                                \n                            }\n                        }}\n                            // var ob = [{\n                            //     name: 'john',\n                            //     surname: 'fox'\n                            //   }\n                            // ];\n                            // var searchText = 'fox';\n                            // var res = ob.filter((item)=>{\n                            //   return Object.keys(item).some((key)=>item[key].includes(searchText));\n                            // });\n                            // console.log(res);\n                        \n                            className='searchButton' type='button'>\n                                {\n                                searchButton === \"search\"\n                                ?<i className=\"fas fa-search\"></i>\n                                :<i className=\"fas fa-times\"></i>\n                                }\n                                </button>\n                    </Form>\n                </Container>\n            </Navbar>\n            <div className='tables'>\n                <div className='tableSet'>\n                    <div className= \"buttons\">\n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"승인\")\n                                leftCheckedList.map((leftCheckedList)=>{\n                                console.log(leftCheckedList)\n                                })\n                                setLeftCheckedList([]);\n                            }}>승인</button> \n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"거절\")\n                                leftCheckedList.map((leftCheckedList)=>{\n                                console.log(leftCheckedList)\n                                })\n                                setLeftCheckedList([]);\n                            }}>거절</button>\n                    </div>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th colSpan={\"3\"}>승인대기</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                leftTable.map((student,i)=>{\n                                    return(\n                                        <tr key={i}>\n                                            <td>{student.studentID}</td>\n                                            <td>{student.name}</td>\n                                            <td><input \n                                                    id= {student}\n                                                    type=\"checkbox\" \n                                                    onChange={(e)=>{\n                                                    changeHandler(e.currentTarget.checked, student ,setLeftCheckedList,leftCheckedList)\n                                                    }}\n                                                    checked={leftCheckedList.includes(student) ? true : false}\n                                            /></td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    <div className = \"pagenation\">\n                        <button><i className=\"fas fa-chevron-left\"></i></button>\n                            <button className= \"pagenationItem\">{2}</button>\n                            <button className= \"pagenationItem\">{3}</button>\n                            <button className= \"pagenationItem\" style={{color : \"black\"}}>{4}</button>\n                            <button className= \"pagenationItem\">{5}</button>\n                            <button className= \"pagenationItem\">{6}</button>\n                        <button><i className=\"fas fa-chevron-right\"></i></button>\n                    </div>\n                </div>\n\n                <div className='tableSet'>\n                    <div className= \"buttons\">\n                        <button className='submitButton' style={{width : \"110px\"}} onClick={()=>{\n                                console.log(\"회장권한위임\")\n                                rightCheckedList.map((rightCheckedList)=>{\n                                console.log(rightCheckedList)\n                                })\n                                if(rightCheckedList.length === 1){\n                                    setRightCheckedList([]);\n                                }else{\n                                    alert(\"학생회장 위임은 한명만 가능합니다.\");\n                                }\n                            }}>회장권한위임</button> \n                        <button className='submitButton' onClick={()=>{\n                                console.log(\"대기\")\n                                rightCheckedList.map((rightCheckedList)=>{\n                                console.log(rightCheckedList)\n                                })\n                                setRightCheckedList([]);\n                            }}\n                        >대기</button>\n                    </div>\n                     <table>\n                        <thead>\n                            <tr>\n                                <th colSpan={\"3\"}>승인완료</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                                rightTable.map((student,i)=>{\n                                    return(\n                                        <tr key={i}>\n                                            <td>{student.studentID}</td>\n                                            <td>{student.name}</td>\n                                            <td><input \n                                                    id= {student}\n                                                    type=\"checkbox\" \n                                                    onChange={(e)=>{\n                                                    changeHandler(e.currentTarget.checked, student,setRightCheckedList,rightCheckedList)\n                                                    }}\n                                                    checked={rightCheckedList.includes(student) ? true : false}\n                                            /></td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    <div className = \"pagenation\">\n                        <button><i className=\"fas fa-chevron-left\"></i></button>\n                            <button className= \"pagenationItem\">{4}</button>\n                            <button className= \"pagenationItem\">{5}</button>\n                            <button className= \"pagenationItem\" style={{color : \"black\"}}>{6}</button>\n                            <button className= \"pagenationItem\">{7}</button>\n                            <button className= \"pagenationItem\">{8}</button>\n                        <button><i className=\"fas fa-chevron-right\"></i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ManagementPage;","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":28,"column":10,"nodeType":"63","messageId":"64","endLine":28,"endColumn":12},{"ruleId":"61","severity":1,"message":"68","line":41,"column":16,"nodeType":"63","messageId":"64","endLine":41,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":73,"column":44,"nodeType":"71","messageId":"72","endLine":73,"endColumn":46},{"ruleId":"57","replacedBy":"73"},{"ruleId":"59","replacedBy":"74"},{"ruleId":"61","severity":1,"message":"75","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":14},{"ruleId":"61","severity":1,"message":"76","line":2,"column":35,"nodeType":"63","messageId":"64","endLine":2,"endColumn":46},{"ruleId":"61","severity":1,"message":"77","line":2,"column":59,"nodeType":"63","messageId":"64","endLine":2,"endColumn":69},{"ruleId":"61","severity":1,"message":"68","line":7,"column":20,"nodeType":"63","messageId":"64","endLine":7,"endColumn":30},{"ruleId":"61","severity":1,"message":"78","line":22,"column":12,"nodeType":"63","messageId":"64","endLine":22,"endColumn":19},{"ruleId":"61","severity":1,"message":"79","line":22,"column":20,"nodeType":"63","messageId":"64","endLine":22,"endColumn":30},{"ruleId":"61","severity":1,"message":"80","line":23,"column":21,"nodeType":"63","messageId":"64","endLine":23,"endColumn":32},{"ruleId":"61","severity":1,"message":"81","line":62,"column":12,"nodeType":"63","messageId":"64","endLine":62,"endColumn":29},{"ruleId":"61","severity":1,"message":"82","line":62,"column":31,"nodeType":"63","messageId":"64","endLine":62,"endColumn":51},{"ruleId":"69","severity":1,"message":"70","line":144,"column":70,"nodeType":"71","messageId":"72","endLine":144,"endColumn":72},{"ruleId":"69","severity":1,"message":"70","line":151,"column":70,"nodeType":"71","messageId":"72","endLine":151,"endColumn":72},{"ruleId":"69","severity":1,"message":"70","line":199,"column":72,"nodeType":"71","messageId":"72","endLine":199,"endColumn":74},{"ruleId":"69","severity":1,"message":"70","line":210,"column":72,"nodeType":"71","messageId":"72","endLine":210,"endColumn":74},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'AccessPage' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'Button' is defined but never used.","'Hi' is defined but never used.","'setWaiting' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["83"],["84"],"'Link' is defined but never used.","'FormControl' is defined but never used.","'Pagination' is defined but never used.","'refusal' is assigned a value but never used.","'setRefusal' is assigned a value but never used.","'setApproval' is assigned a value but never used.","'searchstudentList' is assigned a value but never used.","'setSearchStudentList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]