[{"/Users/river2/Desktop/PKSCL/frontend/src/index.js":"1","/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js":"2","/Users/river2/Desktop/PKSCL/frontend/src/App.js":"3","/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js":"4","/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js":"5","/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js":"6","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js":"7","/Users/river2/Desktop/PKSCL/frontend/src/EditProfile.js":"8","/Users/river2/Desktop/PKSCL/frontend/src/CertFile.js":"9","/Users/river2/Desktop/PKSCL/frontend/src/EditMainPage.js":"10"},{"size":644,"mtime":1643258654429,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1642060834506,"results":"13","hashOfConfig":"12"},{"size":2617,"mtime":1644169033392,"results":"14","hashOfConfig":"12"},{"size":41211,"mtime":1644209636635,"results":"15","hashOfConfig":"12"},{"size":550,"mtime":1642832998582,"results":"16","hashOfConfig":"12"},{"size":25945,"mtime":1644166423412,"results":"17","hashOfConfig":"12"},{"size":59934,"mtime":1644169000219,"results":"18","hashOfConfig":"12"},{"size":33320,"mtime":1644166447696,"results":"19","hashOfConfig":"12"},{"size":650,"mtime":1644050425127,"results":"20","hashOfConfig":"12"},{"size":89888,"mtime":1644213328041,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"47akap",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/river2/Desktop/PKSCL/frontend/src/index.js",[],["48","49"],"/Users/river2/Desktop/PKSCL/frontend/src/reportWebVitals.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/App.js",["50","51","52"],"import './css/App.css';\nimport { useEffect, useState } from 'react';\nimport AccessPage from './AccessPage';\nimport MainPage from './MainPage';\nimport ManagementPage from './ManagementPage';\nimport EditMainPage from './EditMainPage';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nfunction loadmonth() {\n  let now = new Date();\n  let month = now.getMonth();\n  return month;\n}\nfunction selectseason() {\n  switch (loadmonth()) {\n    case 0: case 1: case 2:\n      return \"quarter1\"\n    case 3: case 4: case 5:\n      return \"quarter2\"\n    case 6: case 7: case 8:\n      return \"quarter3\"\n    case 9: case 10: case 11:\n      return \"quarter4\"\n    default:\n      return \"\";\n  }\n}\nfunction setColorProperty(colorQuarter, colorQuarterCircle, colorLeftPanel, colorCard, colorBackground) {\n  document.documentElement.style.setProperty(\"--color-quarter\", colorQuarter);\n  document.documentElement.style.setProperty(\"--color-quarterCircle\", colorQuarterCircle);\n  document.documentElement.style.setProperty(\"--color-leftPanel\", colorLeftPanel);\n  document.documentElement.style.setProperty(\"--color-card\", colorCard);\n  document.documentElement.style.setProperty(\"--color-background\", colorBackground);\n}\n\nfunction defineColor(quarter) {\n  if (quarter === \"quarter1\") {\n    setColorProperty(\"#db8f8e\", \"#efbebc\", \"#f5dede\", \"#fff5ed\", \"#fff5f5\");\n  } else if (quarter === \"quarter2\") {\n    setColorProperty(\"#649d67\", \"#cedbcf\", \"#cedbcf\", \"#dee7df\", \"#f3f9f3\");\n  } else if (quarter === \"quarter3\") {\n    setColorProperty(\"#c18356\", \"#efdccd\", \"#e9d8cd\", \"#fff5ed\", \"#fff5ee\");\n  } else if (quarter === \"quarter4\") {\n    setColorProperty(\"#6b8396\", \"#d0dbe5\", \"#d0dbe5\", \"#e6f1fb\", \"#f5faff\");\n  }\n}\n\n\nfunction App() {\n\n  const [loginPosition, setLoginPosition] = useState(\"president\");\n  const [todayQuarter, setTodatQuarter] = useState(selectseason);\n\n  useEffect(() => {\n    let quarter = selectseason();\n    defineColor(quarter);\n  }, [])\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/manage'>\n          <ManagementPage loginPosition={loginPosition}></ManagementPage>\n        </Route>\n\n        <Route exact path='/edit-main'>\n          <EditMainPage loginPosition={loginPosition} todayQuarter={todayQuarter}></EditMainPage>\n        </Route>\n\n        <Route exact path='/main'>\n          <MainPage loginPosition={loginPosition} todayQuarter={todayQuarter}></MainPage>\n        </Route>\n\n        <Route path='/' >\n          <AccessPage setLoginPosition={setLoginPosition} todayQuarter={todayQuarter}> </AccessPage>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;",["53","54"],"/Users/river2/Desktop/PKSCL/frontend/src/AccessPage.js",["55","56","57","58"],"/Users/river2/Desktop/PKSCL/frontend/src/AlertBox.js",[],"/Users/river2/Desktop/PKSCL/frontend/src/ManagementPage.js",["59","60","61","62","63"],"import { useEffect, useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport './css/ManagementPage.css';\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport CertFile from './CertFile';\n\nfunction ManagementPage(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    let 임시리스트 = {\n        waiting:\n            [{\n                \"major\": \"학과1\",\n                \"email\": \"aaaaa@naver.com\",\n                \"stdID\": \"111111111\",\n                \"name\": \"이름1\",\n                \"phoneNumber\": \"01011111111\",\n                \"studentImgPath\": \"/img/time.png\",\n            },\n            {\n                \"major\": \"학과2\",\n                \"email\": \"bbbbb@naver.com\",\n                \"stdID\": \"22222222\",\n                \"name\": \"이름2\",\n                \"phoneNumber\": \"01022222222\",\n                \"studentImgPath\": \"/img/time.png\",\n            },\n            {\n                \"major\": \"학과3\",\n                \"email\": \"ccccc@naver.com\",\n                \"stdID\": \"333333\",\n                \"name\": \"이름3\",\n                \"phoneNumber\": \"010333333\",\n                \"studentImgPath\": \"/img/time.png\",\n            }],\n        refusal: [],\n        approval: [{\n            \"major\": \"학과4\",\n            \"email\": \"dddd@naver.com\",\n            \"stdID\": \"444444\",\n            \"name\": \"이름4\",\n            \"phoneNumber\": \"010444444\",\n            \"studentImgPath\": \"/img/time.png\",\n        }, {\n            \"major\": \"학과5\",\n            \"email\": \"eeee@naver.com\",\n            \"stdID\": \"555555\",\n            \"name\": \"이름5\",\n            \"phoneNumber\": \"010555555\",\n            \"studentImgPath\": \"/img/time.png\",\n        }, {\n            \"major\": \"학과6\",\n            \"email\": \"ffff@naver.com\",\n            \"stdID\": \"666666\",\n            \"name\": \"이름6\",\n            \"phoneNumber\": \"010666666\",\n            \"studentImgPath\": \"/img/time.png\",\n        }],\n    }\n\n    const history = useHistory();\n    const [waiting, setWaiting] = useState([]);\n    const [refusal, setRefusal] = useState([]);\n    const [approval, setApproval] = useState([]);\n\n    const [leftTable, setLeftTable] = useState([...waiting]);\n    const [rightTable, setRightTable] = useState([...approval]);\n\n    const [leftCheckedList, setLeftCheckedList] = useState([]);\n    const [rightCheckedList, setRightCheckedList] = useState([]);\n\n    const [searchStudent, setSearchStudent] = useState(\"\");\n    const [searchButton, setSearchButton] = useState(\"search\");\n    const [certFile, setCertFile] = useState(false);\n    const [certFileStudnet, setCertFileStudnet] = useState();\n\n    const changeHandler = (checked, studentInfo, setCheckedList, checkedList) => {\n        if (checked) {\n            setCheckedList([...checkedList, studentInfo]);\n        } else {\n            setCheckedList(checkedList.filter((e) => e !== studentInfo));\n        }\n        console.log(checked)\n    };\n\n    function patchStudent(studentStatus) {\n        let payload;\n        if (studentStatus === \"approval\" || studentStatus === \"refusal\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": leftCheckedList\n            };\n        } else if (studentStatus === \"delegating\" || studentStatus === \"waiting\") {\n            payload = {\n                \"status\": studentStatus,\n                \"email\": rightCheckedList\n            };\n        } else {\n            alert(\"error!\");\n        }\n        console.log(\"patch\")\n        console.log(leftCheckedList)\n        console.log(rightCheckedList)\n        if (props.loginPosition === \"president\") {\n            axios.patch(debugAPIURL + '/student-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학생 전송에 실패했습니다 :)\")\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.patch(debugAPIURL + '/president-list', payload)\n                .then((payload) => {\n                    getList();\n                })\n                .catch((error) => {\n                    getList();\n                    alert(\"학과 전송에 실패했습니다 :)\")\n                });\n        }\n    }\n\n\n    useEffect(() => {\n        getList();\n    }, []);\n\n    function getList() {\n        if (props.loginPosition === \"president\") {\n            axios.get(debugAPIURL + '/student-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학생리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        } else if (props.loginPosition === \"admin\") {\n            axios.get(debugAPIURL + '/president-list')\n                .then((payload) => {\n                    console.log(payload)\n                    setWaiting([...payload.data[\"waiting\"]]);\n                    setRefusal([...payload.data[\"refusal\"]]);\n                    setApproval([...payload.data[\"approval\"]]);\n                    setLeftTable([...payload.data[\"waiting\"]]);\n                    setRightTable([...payload.data[\"approval\"]]);\n                })\n                .catch((error) => {\n                    alert(\"학과리스트를 불러올 수 없습니다.\");\n                    setWaiting([...임시리스트[\"waiting\"]]);\n                    setRefusal([...임시리스트[\"refusal\"]]);\n                    setApproval([...임시리스트[\"approval\"]]);\n                    setLeftTable([...임시리스트[\"waiting\"]]);\n                    setRightTable([...임시리스트[\"approval\"]]);\n                });\n        }\n    }\n\n    function pressSearchStudent() {\n        if (searchButton === \"x\") {\n            setSearchStudent(\"\");\n            setSearchButton(\"search\");\n            setLeftTable([...waiting]);\n            setRightTable([...approval]);\n        } else {\n            if (searchStudent === \"\") {\n                alert(\"검색명을 입력해주세요 :)\");\n            } else {\n                setSearchButton(\"x\");\n\n                let left = waiting.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n                let right = approval.filter((item) => (item.name.includes(searchStudent) || item.stdID.includes(searchStudent)));\n\n                setLeftTable(left);\n                setRightTable(right);\n            }\n\n        }\n    }\n\n    return (\n        <div className=\"ManagementPageContainer\">\n            {\n                certFile === true\n                    ? (<CertFile certFileStudnet={certFileStudnet} setCertFile={setCertFile}></CertFile>)\n                    : null\n            }\n            {\n                props.loginPosition === \"student\"\n                    ? <div>잘못된 접근입니다.</div>\n                    : (\n                        <>\n                            <div className=\"pageContainer\">\n                                <Navbar expand=\"lg\" style={{ padding: \"30px 0\" }}>\n                                    <Container fluid style={{ justifyContent: \"center\", backgroundColor: \"none\" }}>\n                                        <h2 style={{ margin: \"0\" }}>학생승인 현황</h2>\n                                        <div className=\"searchBar\" >\n                                            <input onChange={(e) => {\n                                                setSearchStudent(e.target.value);\n                                                setSearchButton(\"search\");\n                                                if (e.target.value === \"\") {\n                                                    setSearchButton(\"search\");\n                                                    setLeftTable([...waiting]);\n                                                    setRightTable([...approval]);\n                                                }\n                                            }}\n                                                onKeyPress={(e) => {\n                                                    if (e.key === \"Enter\") {\n                                                        pressSearchStudent()\n                                                    }\n                                                }}\n                                                name=\"q\" value={searchStudent} type=\"search\" placeholder=\"Search\" ></input>\n\n                                            <button onClick={() => {\n                                                pressSearchStudent()\n                                            }}\n                                                className='searchButton' type='button'>\n                                                {\n                                                    searchButton === \"search\"\n                                                        ? <i className=\"fas fa-search\"></i>\n                                                        : <i className=\"fas fa-times\"></i>\n                                                }\n                                            </button>\n                                        </div>\n                                    </Container>\n                                </Navbar>\n                                <div className='tables'>\n                                    <div className=\"tableSet\" >\n                                        <div className=\"buttons\">\n                                            <button className='submitButton' onClick={() => {\n                                                if (leftCheckedList.length === 0) {\n                                                    alert(\"승인할 학생을 1명 이상 선택하세요 :)\")\n                                                } else {\n                                                    patchStudent(\"approval\");\n                                                }\n                                                setLeftCheckedList([]);\n                                            }}>승인</button>\n                                            <button className='submitButton' onClick={() => {\n                                                console.log(\"거절\")\n                                                setLeftCheckedList([]);\n                                                if (leftCheckedList.length > 0) {\n                                                    patchStudent(\"refusal\");\n                                                } else {\n                                                    alert(\"거절할 학생을 1명 이상 선택하세요 :)\")\n                                                }\n                                            }}>거절</button>\n                                        </div>\n                                        <table >\n                                            <thead>\n                                                <tr >\n                                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인대기</th>\n                                                </tr>\n                                            </thead>\n                                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                    {\n                                                        leftTable.length === 0\n                                                            ? <tr>\n                                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                                            </tr>\n                                                            : leftTable.map((student, i) => {\n                                                                return (\n                                                                    <tr key={i}>\n                                                                        {\n                                                                            props.loginPosition === \"president\"\n                                                                                ? (<><td>{student.stdID}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                        setCertFileStudnet(student);\n                                                                                        setCertFile(true);\n                                                                                    }}>학생증</button></td>\n                                                                                    <td ><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                                                        }}\n                                                                                        checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                                : (<><tr>\n                                                                                    <td>{student.major}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td>{student.stdID}</td>\n                                                                                </tr><tr>\n                                                                                        <td>{student.phoneNumber}</td>\n                                                                                        <td>{student.email}</td>\n                                                                                        <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                            setCertFileStudnet(student);\n                                                                                            setCertFile(true);\n                                                                                        }}>학생증</button></td>\n                                                                                    </tr>\n                                                                                    <td style={{ width: \"100px\" }}><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setLeftCheckedList, leftCheckedList)\n                                                                                        }}\n                                                                                        checked={leftCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                        }\n\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                    }\n                                                </tbody>\n                                            </div>\n                                        </table>\n                                    </div>\n\n                                    <div className='tableSet'>\n                                        <div className=\"buttons\">\n                                            {\n                                                props.loginPosition === \"president\"\n                                                    ? (<button className='submitButton' style={{ width: \"110px\" }} onClick={() => {\n                                                        if (rightCheckedList.length === 1) {\n                                                            setRightCheckedList([]);\n                                                            patchStudent(\"delegating\");\n                                                        } else {\n                                                            alert(\"학생회장 위임은 한명만 가능합니다.\");\n                                                        }\n                                                    }}>회장권한위임</button>)\n                                                    : null\n                                            }\n                                            <button className='submitButton' onClick={() => {\n                                                setRightCheckedList([]);\n                                                if (rightCheckedList.length > 0) {\n                                                    patchStudent(\"waiting\");\n                                                }\n                                            }}\n                                            >대기</button>\n                                        </div>\n                                        <table>\n                                            <thead>\n                                                <tr>\n                                                    <th colSpan={\"3\"} style={{ borderTopRightRadius: \"20px\", borderTopLeftRadius: \"20px\" }}>승인완료</th>\n                                                </tr>\n                                            </thead>\n                                            <div className=\"tableRadius\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                <tbody className=\"tableList\" style={{ borderBottomRightRadius: \"20px\", borderBottomLeftRadius: \"20px\" }}>\n                                                    {\n                                                        rightTable.length === 0\n                                                            ? <tr>\n                                                                <td colSpan={\"3\"}>승인대기 학생이 없습니다.</td>\n                                                            </tr>\n                                                            : rightTable.map((student, i) => {\n                                                                return (\n                                                                    <tr key={i}>\n                                                                        {\n                                                                            props.loginPosition === \"president\"\n                                                                                ? (<><td>{student.stdID}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                        setCertFile(true);\n                                                                                    }}>학생증</button></td>\n                                                                                    <td ><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                                                        }}\n                                                                                        checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                                : (<><tr>\n                                                                                    <td>{student.major}</td>\n                                                                                    <td>{student.name}</td>\n                                                                                    <td>{student.stdID}</td>\n                                                                                </tr><tr>\n                                                                                        <td>{student.phoneNumber}</td>\n                                                                                        <td>{student.email}</td>\n                                                                                        <td><button className=\"certFileButton\" type='button' onClick={() => {\n                                                                                            setCertFile(true);\n                                                                                        }}>학생증</button></td>\n                                                                                    </tr>\n                                                                                    <td style={{ width: \"100px\" }}><input\n                                                                                        id={student}\n                                                                                        type=\"checkbox\"\n                                                                                        onChange={(e) => {\n                                                                                            changeHandler(e.target.checked, student[\"email\"], setRightCheckedList, rightCheckedList)\n                                                                                        }}\n                                                                                        checked={rightCheckedList.includes(student[\"email\"]) ? true : false}\n                                                                                    /></td>\n                                                                                </>)\n                                                                        }\n\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                    }\n                                                </tbody>\n                                            </div>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"managementPageBar\">\n                                <i className=\"fas fa-chevron-left\" onClick={() => {\n                                    if (props.loginPosition === \"admin\") {\n                                        history.push('/main')\n                                    } else if (props.loginPosition === \"president\") {\n                                        history.push('/edit-main')\n                                    }\n                                }}></i>\n                            </div>\n                        </>)}\n        </div>\n\n\n    )\n}\n\nexport default ManagementPage;","/Users/river2/Desktop/PKSCL/frontend/src/MainPage.js",["64","65","66","67","68","69","70"],"import majorlogo from './img/majorlogo.png';\nimport quarter1 from './img/quarter1.png';\nimport quarter2 from './img/quarter2.png';\nimport quarter3 from './img/quarter3.png';\nimport quarter4 from './img/quarter4.png';\nimport receiptImg from './img/receipt.png';\nimport EditProfile from './EditProfile';\nimport './css/MainPage.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction MainPage(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    const history = useHistory();\n\n    let answer = {\n        \"studentPresident\": {\n            \"major\": \"국어국문학과\",\n            \"name\": \"홍길동\",\n            \"phoneNumber\": \"01012345678\",\n            \"email\": \"PKSCL@pukyon.ac.kr\",\n            \"majorLogo\": majorlogo\n        },\n        \"quarter\": {\n            \"quarter1\": {\n                \"status\": \"true\",\n                \"eventList\": [\n                    {\n                        \"eventNumber\": \"1\",\n                        \"eventTitle\": \"임시데이터 입니다.\",\n                        \"eventContext\": \"데이타 O\",\n                        \"receiptList\": [\n\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"2\",\n                        \"eventTitle\": \"학과 OT\",\n                        \"eventContext\": \"학과 OT를 진행하였습니다.\",\n                        \"receiptList\": [\n                            {\n                                \"receiptTitle\": \"학과 OT 영수증1\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"학과 OT 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"돈까스\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"2000\"\n                                    },\n                                    {\n                                        \"context\": \"대선\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"6000\"\n                                    },\n                                    {\n                                        \"context\": \"참이슬\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"1000\"\n                                    },\n                                    {\n                                        \"context\": \"초콜렛\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"5\",\n                                        \"totalAmount\": \"5000\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"receiptTitle\": \"학과 OT 영수증2\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"학과 OT 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"갈비\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"4000\"\n                                    },\n                                    {\n                                        \"context\": \"과자\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"3000\"\n                                    },\n                                    {\n                                        \"context\": \"지우개\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"3\",\n                                        \"totalAmount\": \"3000\"\n                                    },\n                                    {\n                                        \"context\": \"연필\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"5\",\n                                        \"totalAmount\": \"5000\"\n\n                                    }\n                                ]\n                            },\n                            {\n                                \"receiptTitle\": \"학과 OT 영수증3\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"학과 OT 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"컵\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"2000\"\n                                    },\n                                    {\n                                        \"context\": \"휴지\",\n                                        \"price\": \"5000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"10000\"\n                                    },\n                                    {\n                                        \"context\": \"책\",\n                                        \"price\": \"6000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"12000\"\n                                    },\n                                    {\n                                        \"context\": \"바구니\",\n                                        \"price\": \"7000\",\n                                        \"amount\": \"3\",\n                                        \"totalAmount\": \"21000\"\n                                    },\n                                    {\n                                        \"context\": \"이어폰\",\n                                        \"price\": \"8000\",\n                                        \"amount\": \"4\",\n                                        \"totalAmount\": \"32000\"\n                                    },\n                                    {\n                                        \"context\": \"콜라\",\n                                        \"price\": \"5000\",\n                                        \"amount\": \"5\",\n                                        \"totalAmount\": \"25000\",\n                                    },\n                                    {\n                                        \"context\": \"물\",\n                                        \"price\": \"4000\",\n                                        \"amount\": \"7\",\n                                        \"totalAmount\": \"28000\"\n                                    },\n                                    {\n                                        \"context\": \"프라이팬\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"6\",\n                                        \"totalAmount\": \"36000\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"3\",\n                        \"eventTitle\": \"학과 OT2\",\n                        \"eventContext\": \"학과 OT2를 진행하였습니다.\",\n                        \"receiptList\": [\n                            {\n                                \"receiptTitle\": \"학과 OT2 영수증1\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"학과 OT2 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"돈까스\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"3000\"\n                                    },\n                                    {\n                                        \"context\": \"대선\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"4000\"\n                                    },\n                                    {\n                                        \"context\": \"갈비\",\n                                        \"price\": \"4000\",\n                                        \"amount\": \"5\",\n                                        \"totalAmount\": \"20000\"\n                                    },\n                                    {\n                                        \"context\": \"참이슬\",\n                                        \"price\": \"5000\",\n                                        \"amount\": \"6\",\n                                        \"totalAmount\": \"30000\"\n                                    },\n                                    {\n                                        \"context\": \"초콜렛\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"7\",\n                                        \"totalAmount\": \"7000\"\n\n                                    },\n                                    {\n                                        \"context\": \"지우개\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"8\",\n                                        \"totalAmount\": \"16000\"\n                                    },\n                                    {\n                                        \"context\": \"연필\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"9\",\n                                        \"totalAmount\": \"27000\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"receiptTitle\": \"학과 OT2 영수증2\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"학과 OT2 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"갈비\",\n                                        \"price\": \"4000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"4000\"\n\n                                    },\n                                    {\n                                        \"context\": \"돈까스\",\n                                        \"price\": \"5000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"10000\"\n                                    },\n                                    {\n                                        \"context\": \"휴지\",\n                                        \"price\": \"2000\",\n                                        \"amount\": \"3\",\n                                        \"totalAmount\": \"6000\"\n                                    },\n                                    {\n                                        \"context\": \"컵\",\n                                        \"price\": \"4000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"8000\"\n                                    },\n                                    {\n                                        \"context\": \"콜라\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"1000\"\n                                    },\n                                    {\n                                        \"context\": \"바구니\",\n                                        \"price\": \"1000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"2000\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"4\",\n                        \"eventTitle\": \"새내기배움터\",\n                        \"eventContext\": \"새내기배움터를 진행하였습니다.\",\n                        \"receiptList\": [\n                            {\n                                \"receiptTitle\": \"새내기배움터 영수증 1\",\n                                \"receiptImg\": \"./static/receiptImg/test2.png\",\n                                \"receiptContext\": \"새내기배움터 OT 영수증입니다.\",\n                                \"receiptDetailList\": [\n                                    {\n                                        \"context\": \"이어폰\",\n                                        \"price\": \"5000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"5000\"\n                                    },\n                                    {\n                                        \"context\": \"콜라\",\n                                        \"price\": \"4000\",\n                                        \"amount\": \"2\",\n                                        \"totalAmount\": \"8000\"\n                                    },\n                                    {\n                                        \"context\": \"물\",\n                                        \"price\": \"3000\",\n                                        \"amount\": \"1\",\n                                        \"totalAmount\": \"3000\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"5\",\n                        \"eventTitle\": \"벚꽃축제1\",\n                        \"eventContext\": \"벚꽃축제1를 진행하였습니다.\",\n                        \"receiptList\": [\n\n                        ]\n                    }\n                ]\n            },\n            \"quarter2\": {\n                \"status\": \"true\",\n                \"eventList\": [\n                    {\n                        \"eventNumber\": \"6\",\n                        \"eventTitle\": \"공개일 O\",\n                        \"eventContext\": \"데이타 O\",\n                        \"receiptList\": [\n\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"7\",\n                        \"eventTitle\": \"우리학과 OT\",\n                        \"eventContext\": \"OT를 완료하였습니다.\",\n                        \"receiptList\": [\n\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"8\",\n                        \"eventTitle\": \"MT 영수증\",\n                        \"eventContext\": \"MT를 진행하였습니다. 큰 사건사고 없이 잘 마무리하였습니다 !\",\n                        \"receiptList\": [\n\n                        ]\n                    },\n                    {\n                        \"eventNumber\": \"9\",\n                        \"eventTitle\": \"MT 영수증2\",\n                        \"eventContext\": \"MT를 진행하였습니다. 큰 사건사고 없이 잘 마무리하였습니다 !\",\n                        \"receiptList\": [\n\n                        ]\n                    }\n                ]\n            },\n            \"quarter3\": {\n                \"status\": \"true\"\n            },\n            \"quarter4\": {\n                \"status\": \"false\"\n            }\n        }\n    }\n\n\n\n    let answerDate = {\n        \"quarter1\": [\"2022-01-01\", \"2022-01-02\"],\n        \"quarter2\": [\"2022-01-03\", \"2022-01-04\"],\n        \"quarter3\": [\"2022-01-05\", \"2022-01-06\"],\n        \"quarter4\": [\"2022-01-07\", \"2022-01-08\"]\n    }\n\n    let answerMajorList = { \"majorList\": [\"기린학과\", \"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학부\", \"법학과\", \"행정학과\", \"국제지역학부\", \"중국학과\", \"신문방송학과\", \"정치외교학과\", \"유아교육과\", \"시각디자인학과\", \"공업디자인학과\", \"패션디자인학과\", \"경영학부\", \"국제통상학부\", \"응용수학과\", \"통계학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"해양스포츠학과\", \"간호학과\", \"과학시스템시뮬레이션학과\", \"건축공학과\", \"건축학과\", \"소방공학과\", \"시스템경영공학부\", \"IT융합응용공학과\", \"안전공학과\", \"융합디스플레이공학과\", \"의공학과\", \"전기공학과\", \"전자공학과\", \"정보통신공학과\", \"제어계측공학과\", \"조선해양시스템공학과\", \"컴퓨터공학과\", \"토목공학과\", \"고분자공학과\", \"공업화학과\", \"금속공학과\", \"기계공학과\", \"기계설계공학과\", \"기계시스템공학과\", \"냉동공조공학과\", \"신소재시스템공학과\", \"인쇄정보공학과\", \"재료공학과\", \"화학공학과\", \"지속가능공학부\", \"식품공학과\", \"해양바이오신소재학과\", \"해양생산시스템관리학부\", \"해양수산경영학과\", \"수해양산업교육과\", \"자원생물학과\", \"식품영양학과\", \"생물공학과\", \"수산생명의학과\", \"환경공학과\", \"해양공학과\", \"해양학과\", \"지구환경과학과\", \"환경대기과학과\", \"에너지자원공학과\", \"공간정보시스템공학과\", \"생태공학과\", \"데이터정보과학부(빅데이터융합전공)\", \"데이터정보과학부(통계·데이터사이언스전공)\", \"미디어커뮤니케이션학부(언론정보전공)\", \"미디어커뮤니케이션학부(휴먼ICT융합전공)\", \"스마트헬스케어학부(의공학전공)\", \"스마트헬스케어학부(해양스포츠전공)\", \"스마트헬스케어학부(휴먼바이오융합전공)\", \"전자정보통신공학부(전자공학전공)\", \"전자정보통신공학부(정보통신공학전공)\", \"조형학부(건축학전공)\", \"조형학부(공업디자인전공)\", \"조형학부(시각디자인전공)\", \"컴퓨터공학부(소프트웨어·인공지능전공)\", \"컴퓨터공학부(컴퓨터공학전공)\", \"평생교육·상담학과\", \"기계조선융합공학과\", \"전기전자소프트웨어공학과\", \"공공안전경찰학과\"] }\n\n    const [studentPresident, setStudentPresident] = useState();\n\n    const [quarter, setQuarter] = useState();\n    const [quarterDate, setQuarterDate] = useState();\n\n    const [eventAmount, setEventAmount] = useState([]);\n    const [quarterAmount, setQuarterAmount] = useState(0);\n    const [currentQuarter, setCurrentQuarter] = useState(props.todayQuarter);\n    const [showAllReceiptButton, setShowAllReceiptButton] = useState([]);\n    const [editProfileState, setEditProfileState] = useState(false);\n\n    const [major, setMajor] = useState();\n    const [majorList, setMajorList] = useState();\n\n    const [searchButton, setSearchButton] = useState(\"search\");\n\n    const [chatbot, setChatbot] = useState(true);\n\n    function resetShowAllReceiptButton() {\n        let resetArray = [];\n        if (quarter[currentQuarter][\"eventList\"] !== undefined) {\n            for (let i = 0; i < quarter[currentQuarter][\"eventList\"].length; i++) {\n                resetArray.push(true)\n            }\n        }\n        setShowAllReceiptButton(resetArray)\n    }\n\n    function reset(quarterData) {\n        if (quarter !== undefined && quarter[quarterData][\"eventList\"] !== undefined) {\n            CalculateCurrentQuarterReceiptSumList(quarter[quarterData][\"eventList\"]);\n            resetShowAllReceiptButton();\n        }\n        window.scrollTo(0, 0);\n    }\n\n    function showQuarter(selectedQuarter) {\n        if (props.loginPosition === \"student\" || props.loginPosition === \"president\") {\n            if (quarter[selectedQuarter][\"status\"] === \"true\") {\n                setCurrentQuarter(selectedQuarter);\n                defineColor(selectedQuarter);\n            } else {\n                alert(\"현재 공개된 장부가 아닙니다 :)\")\n            }\n        } else {\n            setCurrentQuarter(selectedQuarter);\n            defineColor(selectedQuarter);\n        }\n    }\n\n    function pksclSubmitButton() {\n        alert(\"API..\")\n    }\n\n    function sumItems(price, amount) {\n        return price * amount;\n    }\n\n    function sumReceipt(receiptDetailList) {\n        let sumReceiptValue = 0;\n        if (receiptDetailList !== undefined) {\n            for (let i = 0; i < receiptDetailList.length; i++) {\n                let item = receiptDetailList[i];\n                sumReceiptValue = sumReceiptValue + sumItems(item[\"price\"], item[\"amount\"]);\n            }\n        }\n        return sumReceiptValue;\n    }\n\n    function sumEvent(receiptList) {\n        let sumEventValue = 0;\n        for (let i = 0; i < receiptList.length; i++) {\n            let receipt = receiptList[i][\"receiptDetailList\"];\n            sumEventValue = sumEventValue + sumReceipt(receipt);\n        }\n        return sumEventValue\n    }\n\n    function CalculateCurrentQuarterReceiptSumList(eventList) {\n\n        if (eventList === undefined) {\n            setQuarterAmount(0);\n        } else {\n            let eventSum = [];\n            for (let i = 0; i < eventList.length; i++) {\n                eventSum.push(sumEvent(eventList[i][\"receiptList\"]));\n            }\n            setEventAmount([...eventSum]);\n\n            let quarterSum = 0;\n            for (let i = 0; i < eventSum.length; i++) {\n                quarterSum = quarterSum + eventSum[i];\n            }\n            setQuarterAmount(quarterSum);\n        }\n    }\n\n    function setColorProperty(colorQuarter, colorQuarterCircle, colorLeftPanel, colorCard, colorBackground) {\n        document.documentElement.style.setProperty(\"--color-quarter\", colorQuarter);\n        document.documentElement.style.setProperty(\"--color-quarterCircle\", colorQuarterCircle);\n        document.documentElement.style.setProperty(\"--color-leftPanel\", colorLeftPanel);\n        document.documentElement.style.setProperty(\"--color-card\", colorCard);\n        document.documentElement.style.setProperty(\"--color-background\", colorBackground);\n    }\n\n    function defineColor(quarter) {\n        if (quarter === \"quarter1\") {\n            setColorProperty(\"#db8f8e\", \"#efbebc\", \"#f5dede\", \"#fff5ed\", \"#fff5f5\");\n        } else if (quarter === \"quarter2\") {\n            setColorProperty(\"#649d67\", \"#cedbcf\", \"#cedbcf\", \"#dee7df\", \"#f3f9f3\");\n        } else if (quarter === \"quarter3\") {\n            setColorProperty(\"#c18356\", \"#efdccd\", \"#e9d8cd\", \"#fff5ed\", \"#fff5ee\");\n        } else if (quarter === \"quarter4\") {\n            setColorProperty(\"#6b8396\", \"#d0dbe5\", \"#d0dbe5\", \"#e6f1fb\", \"#f5faff\");\n        }\n    }\n\n    function logout() {\n        axios.post(debugAPIURL + '/logout')\n            .then((payload) => {\n                history.push('/');\n            }).catch((error) => {\n                console.log(\"error: \" + error.response.status);\n                // 빼기\n                history.push('/');\n            })\n    }\n\n    function adminButton() {\n        if (majorList === undefined) {\n            return;\n        } else {\n            return (<>\n                <div className=\"mainSearchBar\" >\n                    <input className=\"majorList\"\n                        type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder=\"학과를 입력하세요.\"\n                        onChange={(e) => {\n                            setMajor(e.target.value);\n                            ;\n                        }}\n                        style={{ width: \"250px\" }}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                adminGetLedger(major);\n                            }\n                        }}\n                        value={major}\n                    >\n                    </input>\n                    <datalist id=\"majorList-options\" >\n                        {\n                            majorList.map((majorName, i) => {\n                                if (i !== 0) {\n                                    return (\n                                        <option value={majorName} key={i} ></option>\n                                    )\n                                }\n                            })\n                        }\n                    </datalist>\n                    <button style={{ boxShadow: \"0 0 0 white\" }} onClick={() => {\n                        adminGetLedger(major);\n                    }}> {\n                            searchButton === \"search\"\n                                ? <i className=\"fas fa-search\"></i>\n                                : <i className=\"fas fa-times\"></i>\n                        }</button>\n                </div>\n            </>\n            )\n        }\n    }\n\n    function adminGetLedger(ledgerMajor) {\n        if (searchButton === \"x\") {\n            setMajor(\"\");\n            setSearchButton(\"search\");\n        } else {\n            if (major === \"\") {\n                alert(\"검색명을 입력해주세요 :)\");\n            } else if ((majorList.includes(ledgerMajor))) {\n                let findMajorIndex = majorList.indexOf(ledgerMajor) + 1\n                getAdminLedger(findMajorIndex);\n                adminGetDate(findMajorIndex);\n                setMajor(\"\");\n                setSearchButton(\"search\");\n            } else {\n                alert(\"해당하는 학과가 없습니다 다시 검색해주세요:)\");\n            }\n        }\n    }\n\n    function getAdminLedger(findMajorIndex) {\n        axios.get(debugAPIURL + `/ledger/admin?${findMajorIndex}`)\n            .then((payload) => {\n                setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                setQuarter({ ...payload.data[\"quarter\"] });\n                reset(props.todayQuarter);\n                showQuarter(props.todayQuarter);\n                setChatbot(false);\n            })\n            .catch((error) => {\n                if (major === undefined) {\n                    alert(`컴퓨터공학과 장부를 불러올 수 없습니다.`);\n                } else {\n                    alert(`${major} 장부를 불러올 수 없습니다.`);\n                }\n                //지우기\n                setStudentPresident({ ...answer[\"studentPresident\"] });\n                setQuarter({ ...answer[\"quarter\"] });\n                reset(props.todayQuarter);\n                showQuarter(props.todayQuarter);\n            })\n\n    }\n\n    function adminGetDate(findMajorIndex) {\n        axios.get(debugAPIURL + `/ledger-date?${findMajorIndex}`)\n            .then((payload) => {\n                setQuarterDate({ ...payload.data });\n                showQuarter(props.todayQuarter);\n            })\n            .catch((error) => {\n                if (major === undefined) {\n                    alert(`컴퓨터공학과의 장부 open, close 날짜를 불러올 수 없습니다.`);\n                } else {\n                    alert(`${major}의 장부 open, close 날짜를 불러올 수 없습니다.`);\n                }\n                setQuarterDate({ ...answerDate });\n                showQuarter(props.todayQuarter);\n            })\n    }\n\n    function getExPKSCL() {\n        axios.get(debugAPIURL + '/0')\n            .then((payload) => {\n                setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                setQuarter({ ...payload.data[\"quarter\"] });\n                // reset(props.todayQuarter);\n                // defineColor(props.todayQuarter);\n            })\n            .catch((error) => {\n                alert(\"임시 장부를 불러올 수 없습니다.\");\n            })\n    }\n\n    useEffect(() => {\n        if (props.loginPosition === \"admin\") {\n            let ledgerMajor;\n            axios.get(debugAPIURL + '/major-list')\n                .then((payload) => {\n                    setMajorList([...payload.data[\"majorList\"]]);\n                    if (major === undefined) {\n                        let ledgerMajorList = [...payload.data[\"majorList\"]];\n                        ledgerMajor = (ledgerMajorList.indexOf(\"컴퓨터공학과\") + 1);\n                        getAdminLedger(ledgerMajor);\n                        adminGetDate(ledgerMajor);\n                        defineColor(props.todayQuarter);\n                    } else {\n                        getAdminLedger(major);\n                        adminGetDate(major);\n                        defineColor(props.todayQuarter);\n                    }\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"장부를 불러올 수 없습니다.\");\n                    getExPKSCL();\n                    //지우기\n                    let ledgerMajorList = [...answerMajorList[\"majorList\"]];\n                    setMajorList(ledgerMajorList);\n                    if (major === undefined) {\n                        ledgerMajor = (ledgerMajorList.indexOf(\"컴퓨터공학과\") + 1);\n                        getAdminLedger(ledgerMajor);\n                        adminGetDate(ledgerMajor);\n                        defineColor(props.todayQuarter);\n                    } else {\n                        getAdminLedger(major);\n                        adminGetDate(major);\n                        defineColor(props.todayQuarter);\n                    }\n                })\n\n        } else if (props.loginPosition === \"president\") {\n            axios.get(debugAPIURL + '/ledger')\n                .then((payload) => {\n                    setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                    setQuarter({ ...payload.data[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"학과 장부를 불러올 수 없습니다.\");\n\n                    axios.get('/status')\n                        .then((payload) => {\n                            if (payload[\"status\"] === \"refusal\") {\n                                alert(\"사용자(학생회장)는 현재 거절 상태입니다. PKSCL 챗봇을 통해 회장 신청을 다시 진행해 주십시오.\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                            else if (payload[\"status\"] === \"waiting\") {\n                                alert(\"사용자(학생회장)는 현재 대기 상태입니다. PKSCL 챗봇을 통해 회장 인증을 해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                            else if (payload[\"status\"] === \"approval\") {\n                                alert(\"사용자(학생회장)는 현재 승인 상태입니다. PKSCL 챗봇으로 문제를 문의해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                        })\n                        .catch((error) => {\n                            alert(\"학생회장의 승인, 거절, 대기 상태를 확인할 수 없습니다. \")\n                        })\n                    getExPKSCL();\n                    //뒤에 삭제하기\n                    setStudentPresident({ ...answer[\"studentPresident\"] });\n                    setQuarter({ ...answer[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                })\n\n            reset(props.todayQuarter);\n            defineColor(props.todayQuarter);\n        } else if (props.loginPosition === \"student\") {\n            axios.get(debugAPIURL + '/ledger')\n                .then((payload) => {\n                    setStudentPresident({ ...payload.data[\"studentPresident\"] });\n                    setQuarter({ ...payload.data[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                    setChatbot(false);\n                })\n                .catch((error) => {\n                    alert(\"학과 장부를 불러올 수 없습니다.\");\n\n                    axios.get('/status')\n                        .then((payload) => {\n                            if (payload[\"status\"] === \"refusal\") {\n                                alert(\"사용자(학생)는 현재 거절 상태입니다. 프로필 편집 기능을 통해 본인 정보가 올바르게 기입되었는지 우선 확인하고, 바르게 입력되었을 경우엔 신청하신 학과의 학생회장에게 문의해 주세요 :)\");\n                            }\n                            else if (payload[\"status\"] === \"waiting\") alert(\"사용자(학생)는 현재 대기 상태입니다. 프로필 편집 기능을 통해 본인 정보가 올바르게 기입되었는지 우선 확인하고, 바르게 입력되었을 경우엔 신청하신 학과의 학생회장에게 문의해 주세요 :)\");\n                            else if (payload[\"status\"] === \"approval\") {\n                                alert(\"사용자(학생)는 현재 승인 상태입니다. PKSCL 챗봇으로 문제를 문의해주세요 :)\");\n                                if (window.confirm('챗봇으로 이동하시겠습니까?')) window.location(\"http://pf.kakao.com/_hxnlXb\")\n                            }\n                        })\n                        .catch((error) => {\n                            alert(\"학생의 승인, 거절, 대기 상태를 확인할 수 없습니다. \")\n                        })\n                    getExPKSCL();\n                    //뒤에 삭제하기\n                    setStudentPresident({ ...answer[\"studentPresident\"] });\n                    setQuarter({ ...answer[\"quarter\"] });\n                    // reset(props.todayQuarter);\n                    // defineColor(props.todayQuarter);\n                })\n\n            reset(props.todayQuarter);\n            defineColor(props.todayQuarter);\n        }\n    }, []);\n\n\n    useEffect(() => {\n        // // console.log(document.getElementById(\"leftPanel\")[0].style.position);\n        // if (editProfileState) {\n        //     document.getElementsByClassName(\"leftPanel\")[0].setProperty(\"position\", \"none\");\n        // } else {\n\n        // }\n    }, [editProfileState])\n\n\n    useEffect(() => {\n        if (quarter !== undefined) {\n            reset(currentQuarter);\n        }\n\n    }, [currentQuarter])\n\n    useEffect(() => {\n        if (quarter !== undefined)\n            reset(props.todayQuarter);\n\n    }, [quarter])\n\n\n    return (\n        <div className=\"MainPageContainer\">\n            {\n                editProfileState\n                    ?\n                    // <EditProfile loginPosition={props.loginPosition} setEditProfileState={setEditProfileState}></EditProfile>\n                    <EditProfile editProfileState={editProfileState} loginPosition={\"student\"} setEditProfileState={setEditProfileState}></EditProfile>\n                    : null\n            }\n            {\n                quarter === undefined\n                    ? null\n                    : (<>\n                        <div className=\"leftPanel\" id='leftPanel'>\n                            <div className=\"majorCard\">\n                                <div className=\"presidentCard\">\n                                    <h2>{studentPresident[\"major\"]}</h2>\n                                    <p> 온라인 장부 입니다. </p>\n                                    <img src={studentPresident[\"majorLogo\"]} alt=\"majorLogo\" height={\"150\"} width={\"10\"} />\n                                    <h3>{studentPresident[\"name\"]}</h3>\n                                    <p>{studentPresident[\"phoneNumber\"]}</p>\n                                    <p>{studentPresident[\"email\"]}</p>\n                                </div>\n                                <div className=\"cogExplanation\">\n                                    안녕하세요 {studentPresident[\"major\"]} 회장 {studentPresident[\"name\"]}입니다.\n                                    PKCOG 온라인 장부를 통해 학과 장부를 분기별로 확인하세요 :)\n                                    장부 확인 중 문의 사항이 있으시다면 이메일로 연락주십시오.\n                                    <div style={{ color: \"#d32c2c\" }}>※ 학과의 장부를 외부로 유출 시 발생하는 문제의 책임은 학생 본인에게 있습니다.</div>\n                                </div>\n                            </div>\n                            <div className=\"quarter\">\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter1\") }}><div>1분기</div><img src={quarter1} alt=\"quarter1\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter2\") }}><div>2분기</div><img src={quarter2} alt=\"quarter2\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter3\") }}><div>3분기</div><img src={quarter3} alt=\"quarter3\" ></img></div>\n                                <div className=\"quarterButton\" onClick={() => { showQuarter(\"quarter4\") }}><div>4분기</div><img src={quarter4} alt=\"quarter4\" ></img></div>\n                            </div>\n                            {\n                                props.loginPosition === \"student\" || props.loginPosition === \"president\"\n                                    ? null\n                                    : (<div className=\"managementPageBar\">\n                                        <i className=\"fas fa-chevron-right\" onClick={() => { defineColor(props.todayQuarter); history.push('/manage') }}></i>\n                                    </div>)\n                            }\n                        </div>\n\n                        <div className=\"rightPanel\">\n\n                            <div className=\"nav\">\n                                <div className=\"buttons\">\n                                    {\n                                        quarterDate !== undefined\n                                            ? (props.loginPosition === \"admin\"\n                                                ? (<>\n                                                    <div className=\"dateInput\">{quarterDate[currentQuarter][0]}~{quarterDate[currentQuarter][1]}</div>\n                                                    {adminButton()}</>)\n                                                : null)\n                                            : null\n                                    }\n                                    {\n                                        props.loginPosition === \"president\"\n                                            ? (<><div style={{ color: \"red\" }}>현재 {studentPresident[\"major\"]} 학생들에게 공개된 장부 입니다. </div>\n                                                <button className='submitButton' style={{ width: \"130px\" }} type='button' onClick={() => { history.push('/edit-main') }}>장부 수정 페이지</button>\n                                            </>)\n                                            : (<><button className='submitButton' type='button' onClick={() => { setEditProfileState(true); }}>프로필 편집</button>\n                                                <button className='submitButton' type='button' onClick={() => { logout(); }}>로그아웃</button></>)\n                                    }\n\n                                </div>\n                            </div>\n                            {\n                                props.loginPosition === \"admin\" || quarter[currentQuarter][\"status\"] === \"true\"\n                                    ? (<>\n                                        <div className=\"quarterData\">\n                                            <h2 className=\"quarterTotalAmount\">\n                                                {currentQuarter[currentQuarter.length - 1]}분기 총 금액 : {quarterAmount}원\n                                            </h2>\n                                            {\n                                                quarter[currentQuarter][\"eventList\"] === undefined\n                                                    ? <div>입력된 행사가 없습니다.</div>\n                                                    : (quarter[currentQuarter][\"eventList\"].map((event, i) => {\n                                                        return (\n                                                            <div className=\"eventCard\" >\n                                                                <div className=\"cardContent\">\n                                                                    <div className=\"eventSource\">\n                                                                        <div><div className=\"eventTitle\"><h4 >{event[\"eventTitle\"]}</h4>  <div>행사 총 금액 : {eventAmount[i]}원</div></div>\n                                                                            <div>{event[\"eventContext\"]}  </div></div>\n                                                                        <div className=\"eventButtons\">\n                                                                            {\n                                                                                event.receiptList.length <= 1\n                                                                                    ? null\n                                                                                    : (\n                                                                                        showAllReceiptButton[i] === false\n                                                                                            ? (\n                                                                                                <button onClick={() => {\n                                                                                                    let array = [...showAllReceiptButton];\n                                                                                                    array[i] = !showAllReceiptButton[i];\n                                                                                                    setShowAllReceiptButton(array)\n                                                                                                }}>전체보기 취소</button>\n                                                                                            )\n                                                                                            : (\n                                                                                                <button onClick={() => {\n                                                                                                    let array = [...showAllReceiptButton];\n                                                                                                    array[i] = !showAllReceiptButton[i];\n                                                                                                    setShowAllReceiptButton(array)\n                                                                                                }}>전체보기</button>\n                                                                                            )\n                                                                                    )\n\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n\n                                                                    {\n                                                                        showAllReceiptButton[i] === true\n                                                                            ? (<div id=\"receiptContent\" style={{ height: \"380px\", overflowY: \"hidden\" }}>\n\n                                                                                <div className=\"receiptCard\">\n                                                                                    <div className=\"receiptResource\">\n                                                                                        {\n                                                                                            event[\"receiptList\"].length === 0\n                                                                                                ? <div>입력된 영수증이 없습니다.</div>\n                                                                                                : (<>\n                                                                                                    <div className=\"receiptTitle\"><h5>{event[\"receiptList\"][0][\"receiptTitle\"]}</h5>\n                                                                                                        {\n                                                                                                            event[\"receiptList\"][0][\"receiptDetailList\"].length === 0\n                                                                                                                ? null\n                                                                                                                : (<div>1번째 영수증 금액 : {sumReceipt(event[\"receiptList\"][0][\"receiptDetailList\"])}원</div>)\n                                                                                                        }\n                                                                                                    </div>\n\n                                                                                                    <div>{event[\"receiptList\"][0][\"receiptContext\"]}</div>\n\n\n\n                                                                                                    {\n                                                                                                        event[\"receiptList\"][0][\"receiptDetailList\"].length === 0\n                                                                                                            ? <div className=\"noneContext\"> 입력된 영수증 내역이 없습니다.</div>\n                                                                                                            : (<><table className=\"receiptTable\"><thead>\n                                                                                                                <tr>\n                                                                                                                    <th>품명</th>\n                                                                                                                    <th>단가</th>\n                                                                                                                    <th>수량</th>\n                                                                                                                    <th>가격</th>\n                                                                                                                </tr>\n                                                                                                            </thead>\n                                                                                                                <tbody>{event[\"receiptList\"][0][\"receiptDetailList\"].map((item, k) => {\n                                                                                                                    return (<tr>\n                                                                                                                        <td>{item[\"context\"]}</td>\n                                                                                                                        <td>{item[\"price\"]}</td>\n                                                                                                                        <td>{item[\"amount\"]}</td>\n                                                                                                                        <td>{sumItems(item[\"price\"], item[\"amount\"])}</td>\n                                                                                                                    </tr>)\n                                                                                                                })}\n                                                                                                                </tbody> </table></>)\n                                                                                                    }\n                                                                                                </>\n                                                                                                )\n                                                                                        }\n\n                                                                                    </div>\n                                                                                    {\n                                                                                        event[\"receiptList\"].length === 0\n                                                                                            ? null\n                                                                                            :\n                                                                                            <img src={event[\"receiptList\"][0][\"receiptImg\"]} style={{ backgroundColor: \"var(--color-leftPanel)\" }} alt={event[\"receiptList\"][0][\"receiptImg\"]} height={\"150\"} width={\"100\"} />\n                                                                                    }\n                                                                                </div>\n                                                                            </div>)\n                                                                            : (<div id=\"receiptContent\" >\n                                                                                {\n                                                                                    event[\"receiptList\"].map((receipt, j) => {\n                                                                                        return (\n                                                                                            <div className=\"receiptCard\">\n                                                                                                <div className=\"receiptResource\">\n                                                                                                    {\n                                                                                                        event[\"receiptList\"].length === 0\n                                                                                                            ? <div>입력된 영수증이 없습니다.</div>\n                                                                                                            : (<>\n                                                                                                                <div className=\"receiptTitle\"><h5>{receipt[\"receiptTitle\"]}</h5>\n                                                                                                                    {\n                                                                                                                        receipt[\"receiptDetailList\"].length === 0\n                                                                                                                            ? null\n                                                                                                                            : <div>{j + 1}번째 영수증 금액 : {sumReceipt(receipt[\"receiptDetailList\"])}원</div>\n                                                                                                                    }\n                                                                                                                </div>\n                                                                                                                <div>{receipt[\"receiptContext\"]}</div>\n                                                                                                                {\n                                                                                                                    receipt[\"receiptDetailList\"].length === 0\n                                                                                                                        ? <div>입력된 영수증 내역이 없습니다.</div>\n                                                                                                                        : (<>\n                                                                                                                            <table className=\"receiptTable\">\n                                                                                                                                <thead>\n                                                                                                                                    <tr>\n                                                                                                                                        <th>품명</th>\n                                                                                                                                        <th>단가</th>\n                                                                                                                                        <th>수량</th>\n                                                                                                                                        <th>가격</th>\n                                                                                                                                    </tr>\n                                                                                                                                </thead>\n                                                                                                                                <tbody>\n                                                                                                                                    {receipt[\"receiptDetailList\"].map((item, k) => {\n                                                                                                                                        return (<tr>\n                                                                                                                                            <td>{item[\"context\"]}</td>\n                                                                                                                                            <td>{item[\"price\"]}</td>\n                                                                                                                                            <td>{item[\"amount\"]}</td>\n                                                                                                                                            <td>{sumItems(item[\"price\"], item[\"amount\"])}</td>\n                                                                                                                                        </tr>)\n                                                                                                                                    })\n                                                                                                                                    }\n                                                                                                                                </tbody> </table>\n                                                                                                                        </>\n                                                                                                                        )\n                                                                                                                }\n\n                                                                                                            </>)}\n                                                                                                </div>\n                                                                                                {\n                                                                                                    event[\"receiptList\"].length === 0\n                                                                                                        ? null\n                                                                                                        : <img src={receipt[\"receiptImg\"]} alt={receipt[\"receiptImg\"]} style={{ backgroundColor: \"var(--color-leftPanel)\" }} height={\"150\"} width={\"100\"} />\n                                                                                                }\n                                                                                            </div>\n\n                                                                                        )\n                                                                                    })\n                                                                                }\n                                                                            </div>)\n\n                                                                    }\n\n\n                                                                </div>\n                                                                <div className=\"cardImg\">\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                    )\n                                            }\n                                        </div>\n                                    </>)\n                                    : <div className=\"quarterData\" style={{ color: \"red\" }}>\n                                        {currentQuarter[currentQuarter.length - 1]}분기 장부는 학생회장이 아직 공개하지 않았습니다. <br />장부의 예시를 보고싶다면 아래 버튼을 눌러보시겡나?????\n                                    </div>\n                            }\n                        </div>\n                    </>\n                    )\n            }\n\n        </div>\n    )\n}\n\nexport default MainPage;","/Users/river2/Desktop/PKSCL/frontend/src/EditProfile.js",["71","72"],"import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './css/EditProfile.css'\nimport { useHistory } from 'react-router-dom';\n\nfunction EditProfile(props) {\n    let debugAPIURL = \"\";\n    // debugAPIURL = \"https://cors-jhs.herokuapp.com/https://pkscl.kro.kr\";\n\n    const history = useHistory();\n    const modalRef = useRef();\n\n    const [boxState, setBoxState] = useState(\"profile\");\n    const [stdID, setStdID] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [certFile, setCertFile] = useState(\"\");\n    const [majorLogo, setMajorLogo] = useState(\"\");\n    const [isCorrect, setIsCorrect] = useState(\n        {\n            stdID: false,\n            major: false,\n            name: false,\n            phoneNumber: false,\n            email: false,\n            certFile: false,\n            majorLogo: false,\n            inputEmail: false,\n            inputPassword: false,\n            inputNewPassword: false,\n            inputCheckNewPassword: false,\n        }\n    );\n\n    const [editButtonState, setEditButtonState] = useState(false);\n\n    const [majorList, setMajorList] = useState(\n        [\n            \"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학부\", \"법학과\", \"행정학과\", \"국제지역학부\", \"중국학과\", \"신문방송학과\", \"정치외교학과\", \"유아교육과\", \"시각디자인학과\", \"공업디자인학과\", \"패션디자인학과\", \"경영학부\", \"국제통상학부\", \"응용수학과\", \"통계학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"해양스포츠학과\", \"간호학과\", \"과학시스템시뮬레이션학과\", \"건축공학과\", \"건축학과\", \"소방공학과\", \"시스템경영공학부\", \"IT융합응용공학과\", \"안전공학과\", \"융합디스플레이공학과\", \"의공학과\", \"전기공학과\", \"전자공학과\", \"정보통신공학과\", \"제어계측공학과\", \"조선해양시스템공학과\", \"컴퓨터공학과\", \"토목공학과\", \"고분자공학과\", \"공업화학과\", \"금속공학과\", \"기계공학과\", \"기계설계공학과\", \"기계시스템공학과\", \"냉동공조공학과\", \"신소재시스템공학과\", \"인쇄정보공학과\", \"재료공학과\", \"화학공학과\", \"지속가능공학부\", \"식품공학과\", \"해양바이오신소재학과\", \"해양생산시스템관리학부\", \"해양수산경영학과\", \"수해양산업교육과\", \"자원생물학과\", \"식품영양학과\", \"생물공학과\", \"수산생명의학과\", \"환경공학과\", \"해양공학과\", \"해양학과\", \"지구환경과학과\", \"환경대기과학과\", \"에너지자원공학과\", \"공간정보시스템공학과\", \"생태공학과\", \"데이터정보과학부(빅데이터융합전공)\", \"데이터정보과학부(통계·데이터사이언스전공)\", \"미디어커뮤니케이션학부(언론정보전공)\", \"미디어커뮤니케이션학부(휴먼ICT융합전공)\", \"스마트헬스케어학부(의공학전공)\", \"스마트헬스케어학부(해양스포츠전공)\", \"스마트헬스케어학부(휴먼바이오융합전공)\", \"전자정보통신공학부(전자공학전공)\", \"전자정보통신공학부(정보통신공학전공)\", \"조형학부(건축학전공)\", \"조형학부(공업디자인전공)\", \"조형학부(시각디자인전공)\", \"컴퓨터공학부(소프트웨어·인공지능전공)\", \"컴퓨터공학부(컴퓨터공학전공)\", \"평생교육·상담학과\", \"기계조선융합공학과\", \"전기전자소프트웨어공학과\", \"공공안전경찰학과\"\n        ]);\n\n    const [inputEmail, setInputEmail] = useState(\"\");\n    const [inputPassword, setInputPassword] = useState(\"\");\n\n    const [inputNewPassword, setInputNewPassword] = useState(\"\");\n    const [inputCheckNewPassword, setInputCheckNewPassword] = useState(\"\");\n\n    const [newPasswordButton, setNewPasswordButton] = useState(false);\n    const [userStatus, setUserStatus] = useState()\n\n\n    function changeIsCorrect(key, type) {\n        var temp = { ...isCorrect };\n        if (key === \"stdID\") temp.stdID = type;\n        else if (key === \"major\") temp.major = type;\n        else if (key === \"name\") temp.name = type;\n        else if (key === \"phoneNumber\") temp.phoneNumber = type;\n        else if (key === \"email\") temp.email = type;\n        else if (key === \"certFile\") temp.certFile = type;\n        else if (key === \"majorLogo\") temp.majorLogo = type;\n        else if (key === \"inputEmail\") temp.inputEmail = type;\n        else if (key === \"inputPassword\") temp.inputPassword = type;\n        else if (key === \"inputNewPassword\") temp.inputNewPassword = type;\n        else if (key === \"inputCheckNewPassword\") temp.inputCheckNewPassword = type;\n        else console.log(\"function changeIsCorrect() error \");\n\n        setIsCorrect(temp);\n    };\n\n    function withdrawal() {\n        console.log(isCorrect.inputEmail + \" \" + isCorrect.inputPassword);\n        if (isCorrect.inputEmail && isCorrect.inputPassword) {\n            if (window.confirm('정말 탈퇴하시겠습니까?')) {\n                const payload = { \"inputEmail\": inputEmail, \"inputPassword\": inputPassword }\n                //axio.탈퇴\n                axios.post(debugAPIURL + '/withdrawal', payload)\n                    .then((payload) => {\n                        switch (payload.status) {\n                            case 200:\n                                alert(\"회원 탈퇴가 정상적으로 처리 되었습니다.\");\n                                history.push('/');\n                                break;\n                            default: break;\n                        }\n                    })\n                    .catch((error) => {\n                        switch (error.response.status) {\n                            case 401:\n                                alert(\"이메일과 패스워드가 올바르지 않습니다.\");\n                                break;\n                            default: break;\n                        }\n                    })\n            }\n            else {\n                setBoxState(\"profile\");\n                reset();\n            }\n        } else {\n            alert(\"이메일과 패스워드를 모두 입력해주세요.\");\n        }\n    }\n\n    function newPassword() {\n        const payload = { \"inputPassword\": inputPassword, \"inputNewPassword\": inputNewPassword, \"inputCheckNewPassword\": inputCheckNewPassword }\n        axios.patch(debugAPIURL + '/password', payload)\n            .then((payload) => {\n                switch (payload.status) {\n                    case 200:\n                        alert(\"비밀번호가 수정되었습니다.\");\n                        setBoxState(\"profile\");\n                        break;\n                    default:\n                        alert(payload.status);\n                }\n\n            })\n            .catch((error) => {\n                alert(error.response.status); // 수정필요\n            })\n    }\n\n    function putProfile() {\n        let payload = new FormData();\n        console.log(props.loginPosition);\n        payload.append(\"stdID\", stdID);\n        payload.append(\"name\", name);\n\n        if (props.loginPosition === \"student\") { //학생\n            payload.append(\"major\", major);\n            payload.append(\"certFile\", certFile);\n        }\n        else if (props.loginPosition === \"president\") { //학생회장\n            payload.append(\"phoneNumber\", phoneNumber);\n            payload.append(\"majorLogo\", majorLogo);\n        }\n\n        axios.put(debugAPIURL + \"/profile/\" + props.loginPosition, payload, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then((payload) => {\n            switch (payload.status) {\n                case 200:\n                    alert(\"정보가 변경되었습니다.\");\n                    break;\n                default: alert(\"success: \" + payload.status); break;\n            }\n        })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400:\n                        alert(error.response.data.errorMessage);\n                        break;\n                    default:\n                        alert(\"error: \" + error.status);\n                        break;\n                }\n            })\n\n\n    }\n\n    function reset() {\n        setInputEmail(\"\");\n        setInputPassword(\"\");\n        setInputNewPassword(\"\");\n        setInputCheckNewPassword(\"\");\n    }\n\n    useEffect(() => {\n        if (props.loginPosition === \"president\") {\n            if (isCorrect.stdID && isCorrect.name && isCorrect.phoneNumber && isCorrect.majorLogo) {\n                setEditButtonState(true);\n            } else {\n                setEditButtonState(false);\n            }\n            console.log(\"isCorrect.stdID: \" + isCorrect.stdID + \" isCorrect.name: \" + isCorrect.name + \" isCorrect.phoneNumber: \" + isCorrect.phoneNumber + \"  isCorrect.majorLogo: \" + isCorrect.majorLogo);\n        } else if (props.loginPosition === \"student\") {\n            if (isCorrect.stdID && isCorrect.name && isCorrect.major && isCorrect.certFile) {\n                setEditButtonState(true);\n            } else {\n                setEditButtonState(false);\n            }\n            console.log(\"isCorrect.stdID: \" + isCorrect.stdID + \" isCorrect.name: \" + isCorrect.name + \" isCorrect.major: \" + isCorrect.major + \" isCorrect.certFile: \" + isCorrect.certFile);\n        }\n\n        if (isCorrect.inputPassword && isCorrect.inputNewPassword && isCorrect.inputCheckNewPassword) {\n            if (inputNewPassword === inputCheckNewPassword)\n                setNewPasswordButton(true);\n            else {\n                setNewPasswordButton(false);\n            }\n        } else {\n            setNewPasswordButton(false);\n        }\n\n    }, [isCorrect])\n\n    useEffect(() => {\n        //debug\n\n        setStdID(() => \"201892643\");\n        setMajor(() => \"1\");\n        setName(() => \"한준규\");\n        setPhoneNumber(() => \"010-0000-0000\");\n        setEmail(() => \"test1@pukyong.ac.kr\");\n        // setCertFile({ name: \"학생증.jpg\" });\n        setCertFile(\"\");\n        setMajorLogo(\"\");\n\n        setIsCorrect(\n            {\n                stdID: true,\n                major: true,\n                name: true,\n                phoneNumber: true,\n                email: true,\n                certFile: true,\n                majorLogo: true,\n                inputEmail: false,\n                inputPassword: false,\n                inputNewPassword: false,\n                inputCheckNewPassword: false\n            }\n        );\n\n\n\n        //get 요청해서 로그인된 정보 가져오기\n        axios.get(debugAPIURL + '/profile')\n            .then((payload) => {\n                switch (payload.status) {\n                    case 200:\n                        setStdID(payload.data[\"stdID\"]);\n                        setMajor(payload.data[\"major\"]);\n                        setName(payload.data[\"name\"]);\n                        setEmail(payload.data[\"email\"]);\n\n                        if (props.loginPosition === \"president\") {\n                            setPhoneNumber(payload.data[\"phoneNumber\"]);\n                            setMajorLogo(payload.data[\"majorLogo\"]);\n                            setIsCorrect(\n                                {\n                                    stdID: true,\n                                    major: true,\n                                    name: true,\n                                    phoneNumber: true,\n                                    email: true,\n                                    certFile: false,\n                                    majorLogo: true,\n                                    inputEmail: false,\n                                    inputPassword: false,\n                                    inputNewPassword: false,\n                                    inputCheckNewPassword: false,\n                                }\n                            );\n                        } else if (props.loginPosition === \"student\") {\n                            setCertFile(payload.data[\"certFile\"]);\n                            setIsCorrect(\n                                {\n                                    stdID: true,\n                                    major: true,\n                                    name: true,\n                                    phoneNumber: false,\n                                    email: true,\n                                    certFile: true,\n                                    majorLogo: false,\n                                    inputEmail: false,\n                                    inputPassword: false,\n                                    inputNewPassword: false,\n                                    inputCheckNewPassword: false,\n                                }\n                            );\n                        }\n                        break;\n                    default: break;\n                }\n                axios.get(debugAPIURL + '/status')\n                    .then((payload) => {\n                        switch (payload.status) {\n                            case 200: setUserStatus(payload.data[\"status\"]); break;\n                            default: console.log(\"error: \" + payload.response.status); break;\n                        }\n                    })\n                    .catch((error) => {\n                        switch (error.response.status) {\n                            case 400: console.log(\"사용자의 승인상태를 확인하는데 실패했습니다.\"); break;\n                            default: console.log(\"error: \" + payload.response.status); break;\n                        }\n                    })\n            })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400: console.log(\"정보를 로드하는데 실패했습니다.\"); break;\n                    default: console.log(\"error: \" + error.response.status); break;\n                }\n\n            })\n        //get 요청해서 학과리스트 가져오기\n        axios.get(debugAPIURL + '/major-list')\n            .then((payload) => {\n                setMajorList([...payload.data.majorList]);\n            })\n            .catch((error) => {\n                switch (error.response.status) {\n                    case 400: alert(\"학과리스트를 불러올 수 없습니다.\"); return;\n                    default: console.log(\"error: \" + error.response.status); return;\n                }\n            })\n\n        document.addEventListener('mousedown', clickModalOutside);\n\n        return () => {\n            document.removeEventListener('mousedown', clickModalOutside);\n        };\n\n    }, [])\n\n    const clickModalOutside = event => {\n        if (props.editProfileState && (event.target === modalRef.current)) {\n            props.setEditProfileState(false);\n        }\n    };\n\n\n    useEffect(() => {\n        if (phoneNumber.length === 10) {\n            setPhoneNumber(phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3'));\n        }\n        if (phoneNumber.length === 13) {\n            setPhoneNumber(phoneNumber.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\n        }\n    }, [phoneNumber]);\n\n    return (\n        <div className=\"errorContainer\" ref={modalRef}>\n            <div className=\"errorBox\">\n                {\n                    boxState === \"profile\"\n                        ? <>\n                            <div className='boxTitle'>\n                                <h2 ><i className=\"fas fa-users\" />프로필 편집</h2>\n                                <button className=\"btn btn-danger\" onClick={() => { setBoxState(\"withdrawal\") }}>회원탈퇴</button>\n                            </div>\n\n                            <div className='editField'>\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-key\"></i>\n                                    <label>비밀번호</label>\n                                    <empty style={{ width: \"200px\" }}></empty>\n                                    <button type='button' onClick={() => { setBoxState(\"newPassword\") }}>변경</button>\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-lock\"></i>\n                                    <label>학번</label>\n                                    <input onChange={(e) => {\n                                        setStdID(e.target.value.replace(/[^0-9]/g, ''));\n                                        if (e.target.value.length === 9) {\n                                            changeIsCorrect(\"stdID\", true);\n\n                                        } else {\n                                            changeIsCorrect(\"stdID\", false);\n                                        }\n                                    }\n                                    } name=\"stdID\" value={stdID} maxLength=\"9\" placeholder=\"내용을 입력해주세요\" type=\"text\" />\n\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-book-open\" style={{ fontSize: \"0.85rem\" }}></i>\n                                    <label >학과</label>\n                                    {\n                                        props.loginPosition === \"president\"\n                                            ?\n                                            <>\n                                                <input type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder={majorList[major]} value={majorList[major]} readOnly></input>\n                                            </>\n                                            :\n                                            <>\n                                                <input type=\"text\" list=\"majorList-options\" id='major' name=\"major\" placeholder={majorList[major]}\n                                                    style={{ textColor: \"black\" }}\n                                                    onChange={(e) => {\n                                                        setMajor(majorList.indexOf(e.target.value) + 1);\n\n                                                        if (majorList.includes(e.target.value)) {\n                                                            changeIsCorrect(\"major\", true);\n                                                        } else {\n                                                            changeIsCorrect(\"major\", false);\n                                                        }\n                                                    }\n                                                    } ></input>\n                                                <datalist id=\"majorList-options\" >\n                                                    {\n                                                        majorList.map((majorName, i) => {\n                                                            return (\n                                                                <option value={majorName} key={i} ></option>\n                                                            )\n                                                        })\n                                                    }\n                                                </datalist>\n                                            </>\n\n\n\n                                    }\n\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-user\"></i>\n                                    <label>이름</label>\n                                    <input onChange={(e) => {\n                                        setName(e.target.value)\n                                        if (e.target.value === \"\") {\n                                            changeIsCorrect(\"name\", false);\n                                        } else {\n                                            changeIsCorrect(\"name\", true);\n                                        }\n                                    }\n                                    } name=\"name\" value={name} type=\"text\" placeholder=\"이름을 입력해주세요\" />\n                                </div>\n\n                                {\n                                    props.loginPosition === \"president\"\n                                        ?\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-user\"></i>\n                                            <label>전화번호</label>\n                                            <input onChange={(e) => {\n                                                setPhoneNumber(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"phoneNum\", false);\n                                                } else {\n                                                    changeIsCorrect(\"phoneNum\", true);\n                                                }\n                                            }\n                                            } maxLength=\"13\" name=\"phoneNum\" value={phoneNumber} type=\"text\" placeholder=\"내용을 입력하세요\" />\n                                        </div>\n                                        : null\n                                }\n\n\n\n                                <div className=\"inputField\">\n                                    <i className=\"fas fa-envelope\"></i>\n                                    <label>이메일</label>\n                                    <input id=\"inputEmail\" name=\"email\" value={email} type=\"text\" readOnly />\n                                </div>\n\n                                {\n                                    props.loginPosition === \"president\"\n                                        ?\n                                        <>\n                                            {userStatus === \"approval\"\n                                                ? <div className=\"inputField\">\n                                                    <i className=\"fas fa-user-graduate\"></i>\n                                                    <label>학과로고</label>\n                                                    <input style={{ width: \"200px\" }} placeholder={majorLogo} readOnly></input>\n                                                    <label className='fileButton' htmlFor=\"file\">찾기</label>\n                                                    <input type=\"file\" id=\"file\" name=\"file\" style={{ display: \"none\" }} accept='image/*'\n                                                        onChange={(e) => {\n                                                            setMajorLogo(e.target.files[0]);\n                                                            if (e.target.value === \"\") {\n                                                                changeIsCorrect(\"majorLogo\", false);\n                                                            } else {\n                                                                changeIsCorrect(\"majorLogo\", true);\n                                                            }\n\n                                                        }}></input>\n                                                </div>\n                                                : null\n                                            }\n                                        </>\n                                        :\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-user-graduate\"></i>\n                                            <label>학생증</label>\n                                            <input style={{ width: \"200px\" }} placeholder={certFile} readOnly></input>\n                                            <label className='fileButton' htmlFor=\"file\">찾기</label>\n                                            <input type=\"file\" id=\"file\" name=\"file\" style={{ display: \"none\" }} accept='image/*'\n                                                onChange={(e) => {\n                                                    setCertFile(e.target.files[0]);\n                                                    if (e.target.value === \"\") {\n                                                        changeIsCorrect(\"certFile\", false);\n                                                    } else {\n                                                        changeIsCorrect(\"certFile\", true);\n                                                    }\n\n                                                }}></input>\n                                        </div>\n                                }\n                            </div>\n\n                            <div className=\"errorBtns\">\n                                <button className=\"errorBtn\" type=\"button\" onClick={() => {\n                                    editButtonState ? putProfile() : alert('정보를 모두 입력해주세요.');\n                                }}>저장하기</button>\n                                <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { props.setEditProfileState(false); reset(); }}>취소</button>\n\n                            </div>\n                        </>\n                        : boxState === \"withdrawal\"\n                            ? <>\n                                <div className='boxTitle'  >\n                                    <h2 ><i className=\"fas fa-users\" style={{ color: \"#dc3545\" }} />회원 탈퇴</h2>\n                                </div>\n\n                                <div className='editField' style={{ borderColor: \"#dc3545\" }}>\n\n                                    <div className=\"inputField\">\n                                        <i className=\"fas fa-envelope\"></i>\n                                        <label>이메일</label>\n                                        <input id=\"inputEmail\" onChange={(e) => {\n                                            setInputEmail(e.target.value)\n                                            if (e.target.value === \"\") {\n                                                changeIsCorrect(\"inputEmail\", false);\n                                            } else {\n                                                changeIsCorrect(\"inputEmail\", true);\n                                            }\n                                        }} value={inputEmail} type=\"text\" placeholder='이메일을 입력하세요.' />\n                                    </div>\n\n                                    <div className=\"inputField\">\n                                        <i className=\"fas fa-key\"></i>\n                                        <label>비밀번호</label>\n                                        {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                        <input type=\"password\" onChange={(e) => {\n                                            setInputPassword(e.target.value)\n                                            if (e.target.value === \"\") {\n                                                changeIsCorrect(\"inputPassword\", false);\n                                            } else {\n                                                changeIsCorrect(\"inputPassword\", true);\n                                            }\n                                        }} value={inputPassword} placeholder='비밀번호를 입력하세요.' />\n\n                                    </div>\n                                </div>\n\n                                <div className=\"errorBtns\">\n                                    <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"#dc3545\" }} onClick={() => { withdrawal(); }}>탈퇴</button>\n                                    <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { setBoxState(\"profile\") }}>취소</button>\n\n                                </div>\n                            </>\n                            : boxState === \"newPassword\"\n                                ? <>\n                                    <div className='boxTitle' >\n                                        <h2 ><i className=\"fas fa-users\" />비밀번호 변경</h2>\n                                    </div>\n\n                                    <div className='editField' >\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }}>비밀번호</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputPassword\", true);\n                                                }\n                                            }} value={inputPassword} placeholder='현재 비밀번호를 입력하세요.' />\n                                        </div>\n\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }}>새 비밀번호</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputNewPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputNewPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputNewPassword\", true);\n                                                }\n                                            }} value={inputNewPassword} placeholder='새 비밀번호를 입력하세요.' />\n                                        </div>\n\n                                        <div className=\"inputField\">\n                                            <i className=\"fas fa-key\"></i>\n                                            <label style={{ width: \"80px\" }} >새 비밀번호 확인</label>\n                                            {/* <empty style={{ width: \"200px\" }}></empty> */}\n                                            <input type=\"password\" onChange={(e) => {\n                                                setInputCheckNewPassword(e.target.value)\n                                                if (e.target.value === \"\") {\n                                                    changeIsCorrect(\"inputCheckNewPassword\", false);\n                                                } else {\n                                                    changeIsCorrect(\"inputCheckNewPassword\", true);\n                                                }\n                                            }} value={inputCheckNewPassword} placeholder='새 비밀번호를 다시 입력하세요.' />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"errorBtns\">\n                                        {\n                                            newPasswordButton\n                                                ?\n                                                <button className=\"errorBtn\" type=\"button\" onClick={() => { newPassword(); }}>변경</button>\n                                                :\n                                                <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }}\n                                                    onClick={() => { console.log(isCorrect.inputPassword + \" \" + isCorrect.inputNewPassword + \" \" + isCorrect.inputCheckNewPassword); }}>변경</button>\n\n                                        }\n\n                                        <button className=\"errorBtn\" type=\"button\" style={{ backgroundColor: \"white\", color: \"black\" }} onClick={() => { setBoxState(\"profile\"); reset(); }}>취소</button>\n\n                                    </div>\n                                </>\n                                : null\n                }\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default EditProfile;","/Users/river2/Desktop/PKSCL/frontend/src/CertFile.js",["73"],"/Users/river2/Desktop/PKSCL/frontend/src/EditMainPage.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":7,"column":31,"nodeType":"80","messageId":"81","endLine":7,"endColumn":41},{"ruleId":"78","severity":1,"message":"83","line":52,"column":24,"nodeType":"80","messageId":"81","endLine":52,"endColumn":39},{"ruleId":"74","replacedBy":"84"},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":65,"column":6,"nodeType":"88","endLine":65,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":90,"column":6,"nodeType":"88","endLine":90,"endColumn":17,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":482,"column":56,"nodeType":"94","messageId":"95","endLine":482,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"96","line":5,"column":16,"nodeType":"80","messageId":"81","endLine":5,"endColumn":21},{"ruleId":"78","severity":1,"message":"97","line":5,"column":23,"nodeType":"80","messageId":"81","endLine":5,"endColumn":29},{"ruleId":"78","severity":1,"message":"98","line":65,"column":12,"nodeType":"80","messageId":"81","endLine":65,"endColumn":19},{"ruleId":"86","severity":1,"message":"99","line":130,"column":8,"nodeType":"88","endLine":130,"endColumn":10,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"101","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":18},{"ruleId":"78","severity":1,"message":"102","line":381,"column":12,"nodeType":"80","messageId":"81","endLine":381,"endColumn":19},{"ruleId":"78","severity":1,"message":"103","line":415,"column":14,"nodeType":"80","messageId":"81","endLine":415,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":516,"column":58,"nodeType":"94","messageId":"95","endLine":516,"endColumn":60},{"ruleId":"86","severity":1,"message":"104","line":725,"column":8,"nodeType":"88","endLine":725,"endColumn":10,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"106","line":743,"column":8,"nodeType":"88","endLine":743,"endColumn":24,"suggestions":"107"},{"ruleId":"86","severity":1,"message":"108","line":749,"column":8,"nodeType":"88","endLine":749,"endColumn":17,"suggestions":"109"},{"ruleId":"86","severity":1,"message":"110","line":200,"column":8,"nodeType":"88","endLine":200,"endColumn":19,"suggestions":"111"},{"ruleId":"86","severity":1,"message":"112","line":320,"column":8,"nodeType":"88","endLine":320,"endColumn":10,"suggestions":"113"},{"ruleId":"78","severity":1,"message":"114","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":19},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'setTodatQuarter' is assigned a value but never used.",["115"],["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'debugAPIURL', 'defineColor', and 'props.todayQuarter'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'position'. Either include it or remove the dependency array.",["118"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Route' is defined but never used.","'Switch' is defined but never used.","'refusal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["119"],"'receiptImg' is defined but never used.","'chatbot' is assigned a value but never used.","'pksclSubmitButton' is defined but never used.","React Hook useEffect has missing dependencies: 'adminGetDate', 'answer', 'answerMajorList', 'debugAPIURL', 'defineColor', 'getAdminLedger', 'getExPKSCL', 'major', 'props.loginPosition', 'props.todayQuarter', and 'reset'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'quarter' and 'reset'. Either include them or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'props.todayQuarter' and 'reset'. Either include them or remove the dependency array.",["122"],"React Hook useEffect has missing dependencies: 'inputCheckNewPassword', 'inputNewPassword', and 'props.loginPosition'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'clickModalOutside', 'debugAPIURL', and 'props.loginPosition'. Either include them or remove the dependency array.",["124"],"'propTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [debugAPIURL, defineColor, props.todayQuarter]",{"range":"141","text":"142"},"Update the dependencies array to be: [isCorrect, position]",{"range":"143","text":"144"},"Update the dependencies array to be: [getList]",{"range":"145","text":"146"},"Update the dependencies array to be: [adminGetDate, answer, answerMajorList, debugAPIURL, defineColor, getAdminLedger, getExPKSCL, major, props.loginPosition, props.todayQuarter, reset]",{"range":"147","text":"148"},"Update the dependencies array to be: [currentQuarter, quarter, reset]",{"range":"149","text":"150"},"Update the dependencies array to be: [props.todayQuarter, quarter, reset]",{"range":"151","text":"152"},"Update the dependencies array to be: [inputCheckNewPassword, inputNewPassword, isCorrect, props.loginPosition]",{"range":"153","text":"154"},"Update the dependencies array to be: [clickModalOutside, debugAPIURL, props.loginPosition]",{"range":"155","text":"156"},[2351,2353],"[debugAPIURL, defineColor, props.todayQuarter]",[2889,2900],"[isCorrect, position]",[4317,4319],"[getList]",[31900,31902],"[adminGetDate, answer, answerMajorList, debugAPIURL, defineColor, getAdminLedger, getExPKSCL, major, props.loginPosition, props.todayQuarter, reset]",[32318,32334],"[currentQuarter, quarter, reset]",[32441,32450],"[props.todayQuarter, quarter, reset]",[8404,8415],"[inputCheckNewPassword, inputNewPassword, isCorrect, props.loginPosition]",[13139,13141],"[clickModalOutside, debugAPIURL, props.loginPosition]"]